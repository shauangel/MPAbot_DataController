{"result": [{"answers": [{"content": "By default, anything defined during the class's definition is a _class attribute_. It is not tied to an instance, at all:\n\n    class Apple:\n         size = 3\n\n    print(Apple.size)\n\nYou can access class attributes through an instance, however:\n\n    a = Apple()\n    print(a.size) # 3\n\nThat's _not_ because `a` has an instance attribute that is a pointer to the same value as the class attribute, but because attribute lookups, if they don't find an instance attribute of that name, next look to see if there's an attribute on the instance's class of that name. You can verify this by checking `a`'s and `Apple`'s `__dict__`, which stores their direct attributes in dictionary form:\n\n    print(a.__dict__)     # {}\n    print(Apple.__dict__) # {..., \"size\": 3, ...}\n\nThus, if you change the class attribute, all instances will see that change.\n\nTo define an instance attribute, you must do an attribute assignment on the instance after it has been created. The most common place to do so is the `__init__` method, though you can do it anywhere:\n\n    a.color = \"red\"\n    print(a.color) # red\n\nNote that if you do an attribute assignment on the instance for a name that already exists as a class attribute, you create a new instance attribute, rather than reassigning the class attribute:\n\n    a.size = 1\n    print(a.size)     # 1\n    print(Apple.size) # 3\n\nNote also that there's a popular decorator `dataclasses.dataclass` which, when applied to class, uses its class atttributes to auto-generate logic including an `__init__` method that creates instance attributes with the same name, default value, and type.\n\nThank you so much, that explains perfectly what I was looking for. As I mentioned in response to another reply, I didn't know about class attributes and instance attributes. However, based on this idea of creating a new instance attribute when doing an attribute assignment after the instance has been created, shouldn't the following hold true:  \n\n\n    Class Test:\n        var lst1 = []\n    \n    test_obj = Test()\n    test_obj2 = Test()\n    \n    test_obj.lst1.append[1]\n    print(test_obj2.lst1) # should print [1]\n    \n    test_obj2.lst1 = []\n    test_obj.lst1.append[3]\n    print(test_obj.lst1) # should print [1]\n    print(test_obj2.lst1) # should print [3]\n\nOr, does the mutability of lists effect this idea of an instance attribute with the same name as a class attribute and `print(test_obj2.lst1)` will actually give us `[1 3]`?\n\nNo, mutability does not affect this. But your code would actually print (after fixing a few typoes and removing `var`):\n\n    [1]\n    [1, 3]\n    []\n\nIf you appended `3` to `test_obj2.lst1` (instead of to `test_obj.lst1`), you'd get the outputs you indicated, so maybe that was a typo, too?\n\nThanks for noticing and yes, I meant to append 3 to test_obj2.lst1.", "id": "jgbqpow", "owner_tier": 0.3, "score": 0.7499999975}, {"content": "Its not really just a class thing. If you use mutable collection as default value in a function, init or not, it will not create a new empty collection object at each call but point to the same one.\nIt is useful for cache/memoization etc.", "id": "jgbryvi", "owner_tier": 0.5, "score": -2.4999999848063226e-09}, {"content": "It would help if you showed an example in code of what you're talking about, because I *suspect* what you mean is different from what others have been hearing and addressing so far. I *think* you're talking about the init function *parameters* rather than attributes per se:\n\n    class Foo:\n        def __init__(self, param1, param2, ...):\n\nAnd, I think in particular you're talking about giving them default values, and why you shouldn't have such a default value be a list:\n\n    class Foo:\n        def __init__(self, param1=['bar'], param2, ...):\n            self.param1 = param1\n            ...\n\nbut instead should default it to None (if it must have a default), and do the assignment inside the init:\n\n    class Foo:\n        def __init__(self, param1=None, param2, ...):\n            if param1 == None:\n                self.param1 = ['bar']\n            else:\n                self.param1 = param1\n            ...\n\nAm I understanding you correctly? If so, it's because the default values are only evaluated once, as the class definition is first being read by the interpreter. The result when you have a mutable object (like a list) as a parameter default value is that you're not getting a fresh new copy of the list each time you create a new instance object of the class. You're instead getting that very same list object, including whatever changes were previously made to the contents of the list with previously created instances.\n\nHere's one article I just searched up explaining it better: https://leimao.github.io/blog/Python-Default-Argument-Mutable-Object/\n\nSorry for not including a code example. I wasn't thinking specifically in the context of default values, more so because I didn't know Python could do that (I know that behaviour from Java and Kotlin). I replied to another comment with a code example, which I'll paste here:\n\n    Class Test:\n        var1 = 8\n        var_lst1 = [\"string\"]\n    \n    test_obj = Test()\n    test_obj2 = Test()\n    \n    test_obj.var1 = 10\n    test_obj.var_lst1.append(\"string2\")\n    \n    print(test_obj2.var1) # will get 8\n    print(len(test_obj2.var_lst1)) # will get 2\n\n&#x200B;\n\nHowever if the list was created in the constructor instead, we get:\n\n    Class Test:\n        var1 = 8\n        def __init__(self):\n            var_lst1 = [\"string\"]\n    \n    test_obj = Test()\n    test_obj2 = Test()\n    \n    test_obj.var1 = 10\n    test_obj.var_lst1.append(\"string2\")\n    \n    print(test_obj2.var1) # will get 8\n    print(len(test_obj2.var_lst1)) # will get 1\n\n&#x200B;\n\nThe example I just gave isn't really that different from yours. I guess it's the fact that a mutable object will change just the one variable value (that is, the contents of the same list) while that's not the case for an immutable object (like in both my examples with Test.var1).\n\nOn the surface, both are variables that are being modified. But under the surface, what's going to give the behaviour above?\n\nOkay, so, with \"test\\_obj.var1 = 10\", in both scenarios you're replacing the original value (the integer object whose value is 8) with a new value (the integer object whose value is 10). Or to put it even more technically, you're re-assigning the name \"test\\_obj.var1\" to now be a reference to the integer object whose value is 10. The name \"test\\_obj2.var1\" hasn't been changed; it still refers to the integer object with value 8. Although \"var1\" was originally created at the class level for both instances, you've dynamically added the \"var1\" variable at the instance level for test\\_obj with the new assignment through the \"test\\_obj\" name. With test\\_obj2, it's still referring to the class level \"var1\", even though you're getting to it through the instance name. I *think* if you did print(test\\_obj.\\_\\_class\\_\\_.var1), it would give you the class's 8 rather than the instance's 10, showing that the value is still there but just with the new \"var1\" name in the instance having the closer scope. (That could probably be written with better organization, but I hope it makes sense. (And I hope it's actually correct! \ud83d\ude01))\n\nWith var\\_lst1, in the first scenario it's created at the class level, so in both instances the name is referring to the *very same* original list object, [\"string\"], *not* a separate object in each which happens to have the same value. So when you modify the value with append, you're still pointing to the same object, just with a modified value. (Like a bottle is the same bottle even if you pour out the contents and put something else in it, or mix something else in.) The second scenario is different because now var\\_lst1 is created at the instance level, so each instance has its own separate copy of the list, which just happen to be equal to each other. That is, there are two separate list objects, and the name var\\_lst1 in the first instance refers to the first list, and the name var\\_lst1 in the second instance refers to the second list. So modifying the content of one has no effect on the other.\n\nAgain I hope I got that right as I type it out on my phone without testing anything, and I welcome correction from those who know better.\n\nThank you so much! That makes a lot of sense now. So, it's not a copy type situation in memory for immutable attributes, but a new attribute taking up a new location in memory and just happens to have the same variable name? Or, to put it another way, when I create an instance attribute of the same name as a class attribute, Python knows to go to the place in memory where the instance attribute is stored when the attribute is called using dot notation, and if there's no specific instance variable, then Python knows to use the class variable instead?\n\nDo you know how this all works with inheritance? Let's say I have the attribute Fruit.price and I create an instance of Apple, which is a child of Fruit, with the name apl_obi. Now, let's say my Fruit.price had a default value of 5 and in the Apple class definition, I set Apple.price to 3. If I set apl_obj.price to 1, then any calls to the attribute price would fetch the instance attribute. If I did not set apl_obj.price explicitly, would calls to apl_obj.price return 3 or 5?", "id": "jgc3pqq", "owner_tier": 0.7, "score": 0.9999999975}], "link": "https://www.reddit.com/r/learnpython/comments/12mqjpy/intricacies_of_python_classes/", "question": {"content": "Hi all,\n\nI'm taking the course Crash Course on Python as part of the Coursera Google IT Automation with Python program. I already know a good amount of beginner Python, but it's the first course in the series. Anyway, I'm doing the option week all about classes and the like. While I'm familiar with classes from other languages I've worked with in the past - Java mostly - I have done much with Python.\n\nThere are a few different examples they use to explain concepts, but the most notable one is using a class called Apple, in which there are 2 attributes - flavour and colour. During one video, they create another class for the demonstration and use a list attribute but define it only within the constructor. With the Apple class examples, the attributes were usually defined within the class itself with default values. They then go on to explain why the list attribute wasn't defined within the class by saying the following:\n\nWith the Apple class, if we change one Apple object (they use the term instance instead but I'm used to object) to have a colour different than the default value, it will change for only *that* object. However, if the Apple class had a list attribute that was defined in the class, and one of the object's changed that list, all of the objects would have the same change. Is this because of memory and how simple data types are dealt with when creating class instances? Specifically, I'm assuming that when the class definition is parsed, space in memory is created for it including all its attributes, default values, methods, etc. Then, when an object of that class is created, a copy of all that class data is created at a new location in memory. Thus, when changing one attribute for an object, Python only looks at the memory allocated for that object.\n\nHowever, with lists, I'm assuming pointers are involved. So, if a class definition contains a list attribute, what's really created in memory is a pointer with the attribute name to some other section in memory allocated for the list. So, when an object of that class is created, the class data that's copied includes a copy of the pointer with the same attribute name. In other words, when the list is updated through a specific object, the \"master memory location\" for that list is accessed and modified which is why other objects of the same class will also reflect the modified list attribute. Whereas, if a list is defined in the class constructor, then memory is allocated for the list attribute only when memory is created for a class object, rather than when reading the class definition?\n\nThank you.", "id": "12mqjpy", "title": "Intricacies of Python classes", "traffic_rate": 153.1714814814815}, "saved_time": {"$date": "2024-07-16T03:43:18.725Z"}, "source": "reddit"}, {"answers": [{"content": "You don't need to import ANYTHING! Just use \"self\". Here's how you do this It's this simple. No modules or libraries imported", "id": 56849063, "owner_tier": 0.3, "score": 0.9999999997058824}], "link": "https://stackoverflow.com/questions/328851/printing-all-instances-of-a-class", "question": {"content": "With a class in Python, how do I define a function to print every single instance of the class in a format defined in the function?", "id": 328851, "title": "Printing all instances of a class", "traffic_rate": 21}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python", "class"]}, {"answers": [{"content": "There is no way to define such behavior in a class, because the class assigns a value to a variable after instantiation. There is no way to get the name of the variable during class instantiation, because the variable does not exist yet", "id": 70912592, "owner_tier": 0.1, "score": -1.0000000000000002e-08}, {"content": "you could do the following, if I got you right : Proposal You must copy the global variable dictionary, because otherwise i will be changed with the first instantiation in the for-loop: Result:", "id": 70912502, "owner_tier": 0.3, "score": 0.9999999900000001}], "link": "https://stackoverflow.com/questions/70912343/how-to-print-all-the-instances-of-a-class-in-python", "question": {"content": "I want to get all the instances created for a class.\nIs there any way to get the instances without importing any module ? I tried this way to append self in a class attribute. Output I expect it to print foo,bar,star.\nIs there any way to get it in class without any module?", "id": 70912343, "title": "How to print all the instances of a class in python?", "traffic_rate": 1698}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python", "class", "oop", "attributes", "instance"]}, {"answers": [], "link": "https://stackoverflow.com/questions/69051621/getting-all-instances-of-a-specific-type-within-a-class", "question": {"content": "Is there a way to get a list or return all the instances of a class within a class in python? I've already done some research into it and all the answers that I've seen assume the instances are global variables, not part of an existing class. For example, can I find all instances of Bar that are instantiated within the class Foo below? I want to be able to get mymsg1 and mymsg2 because they are Bar objects, but I don't want any of the other attributes or methods.", "id": 69051621, "title": "Getting all instances of a specific type within a class", "traffic_rate": 96}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python", "class"]}, {"answers": [], "link": "https://stackoverflow.com/questions/61188218/how-to-get-all-instances-of-a-given-class-in-another-module", "question": {"content": "So I'm not sure if this question was answered elsewhere but I couldn't find any viable solution specifically relevant to this case as they were either how to access the instances in the same file (which works fine) or using reload() (which didn't work). I've got two python files, module1.py and module2.py. In module1.py there's a class with a bunch of instances that I need to access from module2.\nI append each instance to a list (as a class variable) on instantiation but when importing module1, the instances haven't been instantiated so this list is empty. This means I can access this list of instances in module1 but in module2 it is empty. module1.py module2.py So how can I access these instances which are created in module1 from module2?", "id": 61188218, "title": "How to get all instances of a given class in another module", "traffic_rate": 262}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python", "oop"]}, {"answers": [], "link": "https://stackoverflow.com/questions/21149708/how-to-get-all-instances-of-a-certain-class-in-python", "question": {"content": "Someone asked a similar one [question]:Printing all instances of a class. \nWhile I am less concerned about printing them, I'd rather to know how many instances are currently \"live\". \nThe reason for this instance capture is more like a setting up a scheduled job, every hour check these \"live\" unprocessed instances and enrich the data. After that, either a flag in this instance is set or just delete this instance. \nTorsten Marek 's answer in [question]:Printing all instances of a class using weakrefs need a call to the base class constructor for every class of this type, is it possible to automate this? Or we can get all instances with some other methods?", "id": 21149708, "title": "How to get all instances of a certain class in python?", "traffic_rate": 3}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python", "class"]}, {"answers": [], "link": "https://stackoverflow.com/questions/57033104/return-all-instances-of-a-class-that-meet-a-criterion", "question": {"content": "I'm completely new to Python so I may not be asking this in the right way and I have tried to find an answer (unsuccessfully, obviously). I am trying to set up a class and then to find all instances of the class that meet a certain criterion. I don't know if a class is the right way to go about this so open to all advice (even if it takes me away from classes). For a simple example (see code below) if I wanted to find all Employee's who are over 30 would the right approach be to make a class method? In reality you'd have DOB rather than age but for simplicity I've gone with age. I'd also want some sort of variable so that I could change 30 to let's say 50. What is the \"right\" way or efficient way to achieve this? For this example above for ages above 30 I'd want the e1 and e3 instances. Any help would be appreciated!", "id": 57033104, "title": "Return all instances of a class that meet a criterion", "traffic_rate": 147}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python"]}, {"answers": [], "link": "https://stackoverflow.com/questions/55544878/how-to-easily-find-a-class-instance-in-a-list-with-a-given-class-attribute", "question": {"content": "I'm a newbie. I am wondering if there is a way to easily find an instance of a class in a list with a given attribute. (Python) basically the set up is as follows: So a is a list with two instances of the class idk. How do I easily find the elements of a with name \"x\"? I am looking for something like:  or ", "id": 55544878, "title": "how to easily find a class instance in a list with a given class attribute?", "traffic_rate": 938}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python", "reference", "class-attributes"]}, {"answers": [], "link": "https://stackoverflow.com/questions/54000173/how-to-get-all-instances-of-a-class", "question": {"content": "I am learning Python as a beginner and I'd like to create a class Person. In the constructor I would want to put every instance I create into a set called 'instances'. Then I'd like the instances() method to return all the instances. How can I do this?", "id": 54000173, "title": "How to get all instances of a class", "traffic_rate": 8717}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python", "set", "instance"]}, {"answers": [], "link": "https://stackoverflow.com/questions/30298350/listing-all-instance-of-a-class", "question": {"content": "I wrote a Python module, with several classes that inherit from a single class called MasterBlock.\nI want to import this module in a script, create several instances of these classes, and then get a list of all the existing instances of all the childrens of this MasterBlock class. I found some solutions with vars()['Blocks.MasterBlock'].__subclasses__() but as the instances I have are child of child of MasterBlock, it doesn't work. Here is some example code: Module: Script: Th ultimate goal is to be able to do:", "id": 30298350, "title": "Listing all instance of a class", "traffic_rate": 427}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python", "class", "python-2.7"]}, {"answers": [], "link": "https://stackoverflow.com/questions/72436380/getting-list-of-all-instances-of-given-class", "question": {"content": "Is it possible in python to get a list of all instances of given class (just like it's done by .get_lines() method in the code below) and by reffering to specific elements of that list (like it's done in twelfth line of below code by reffering to element with index 0 from the list called \"lines\") is it possible to modify these element? Considering that every element of that list will be an instance of some class is it possible to - for example - change value of one of the instance unique variables or create new one and give it some value? For sake of clarity I'll add that I don't mean classes from framework's or libraries like matplotlib but classes that are written by me - from scratch. I'm attaching figures that were generated by below code as a proof that it works fine. \n", "id": 72436380, "title": "Getting list of all instances of given class", "traffic_rate": 84}, "saved_time": 1721102306, "source": "stackoverflow", "tags": ["python", "class", "oop"]}, {"answers": [{"content": "Could you show us some code? The better we understand what you are trying to accomplish, the better advice or pointers we can give you.", "id": "h68nw15", "owner_tier": 0.1, "score": 0.999999995}, {"content": "i think fundamentally u are misunderstanding data. u need to demystify it.\n\na string from a nasa satellite is the same as a string from your tic tac toe game or the input function.\n\npoint is there is nothing strange about a string no matter if it comes form a file, input function or a database. its still a string.\n\n&#x200B;\n\nthen a class is nothing more than a fancy way to describe something.. like a template.\n\ninstances of the class are the objects.\n\nand these objects are initialized with attributes that have different values.\n\nsome of them are strings that come from this database.\n\n&#x200B;\n\nthey could also come from a file or input function or just something else that returns or gets solved into a string.\n\n&#x200B;\n\nclass is the template.. instance of the class is the actual object created following the template.\n\nex:\n\nfood recipe.. vs actual food.actual food is the instance of the class..\n\nthe food recipe is the class .\n\n&#x200B;\n\nand almost all 'objects' in python are of a class. this is why we can do 'methods'.\n\nso if u don't know how to store class objects.. u were doing it all along.\n\n&#x200B;\n\n&#x200B;\n\nwhat is left is to figure out the actual interactions with the database.. but that's just an API call like any other API call.\n\nu can literally use the libs like an api.", "id": "h68cjrq", "owner_tier": 0.3, "score": -5e-09}], "link": "https://www.reddit.com/r/learnpython/comments/opyw9c/storing_class_instances/", "question": {"content": "Hello everyone,\n\nSay I have a class named \"Employees\", and a database (created using sqlite if it is important) that stores the employees in a company. How can I create an instance for each employee in the database?\n\nMy first thought is to iterate through the entire database and create an instance for everyone, which works. However, there is one thing I don't understand. How do I store these instances?\n\nI am relatively new to classes, and in every example I see, the person does something like\n\n    emp_1 = Employees(foo, bar)\n\nI obviously can't write a new variable for each one manually. I thought of creating an empty list first, and doing something like:\n\n    for employee in database:\n        list.append(Class(employee))\n\nso that every instance is stored in the list. I maay be wrong, but I feel like this is a dangerous way of doing things. (I am literally putting all my eggs in one basket.) \n\nI should add that I have googled this already and found some answers, but I didn't understand many of them, and the ones I understood didn't really satisfy me.\n\nMy second question is, and perhaps this shows a huge misunderstanding of programming on my part,  suppose I do indeed store all instances in a list as I said above. Now, any time I run this code, it recreates an empty list, creates an instance for each employee from scratch, and adds it to the list. If the database was massive, this would take a while every time and that is not desirable. Is there a way to create a list once, and then use it any time I want without going through the whole process of creating it again?\n\nThis might be a very different process, but to clarify, here's an example: When I created a database in sqlite, I used the command\n\n    execute(\"CREATE TABLE Employees ...\")\n\nonce, and after that the table was created. I then deleted that code and the database is still there. I don't need to create the table and insert everything again at the start of my program each time.\n\nThank you for your replies.", "id": "opyw9c", "title": "Storing Class Instances", "traffic_rate": 153.13037037037037}, "saved_time": 1721102306, "source": "reddit", "tags": []}, {"answers": [{"content": "#Please ensure that:\n\n+ Your *code* is *properly formatted* as *code block* - see the *sidebar* (About on mobile) for instructions\n+ You include *any and all error messages* in full - best also formatted as code block\n+ You ask *clear questions*\n+ You *demonstrate effort* in solving your question/problem - plain posting your assignments is forbidden (and such posts will be removed) as is asking for or giving solutions.\n    \n\n**If any of the above points is not met, your post can and will be removed without further warning.**\n\nCode is to be formatted as **code block** (*old reddit/markdown editor:* empty line before the code, each code line indented by 4 spaces, *new reddit:* https://imgur.com/a/fgoFFis) \nor linked via an external *code hoster*, like *pastebin.com*, *github gist*, *github*, *bitbucket*, *gitlab*, etc. \n\nPlease, **do not use** triple backticks (\\`\\`\\`) as they will only render properly on *new reddit*, not on *old reddit*.  \n\nCode blocks look like this:\n\n    public class HelloWorld {\n\n        public static void main(String[] args) {\n            System.out.println(\"Hello World!\");\n        }\n    }\n\nYou do not need to repost unless your post has been removed by a moderator. Just use the *edit function* of reddit to make sure your post complies with the above. \n\nIf your post has remained in violation of these rules for a prolonged period of time (at least an hour), a moderator may remove it at their discretion. In this case, they will comment with an explanation on why it has been removed, and you will be required to resubmit the entire post following the proper procedures.\n\n#To potential helpers\n\nPlease, **do not help** if any of the above points are not met, rather *report* the post. We are trying to improve the quality of posts here. \nIn helping people who can't be bothered to comply with the above points, you are doing the community a disservice. \n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnjava) if you have any questions or concerns.*", "id": "hwzjoe3", "owner_tier": 0.1, "score": 0.14285714142857142}, {"content": "The main program should keep track of your instances in a single list of an interface you define. This allows you to easily add more classes you might want to support and ensure those classes all have the specific method by having a loose coupling.\n\nThis interface should have all methods all of your classes share so in your case at least a method that returns the instance data as string. So you're implicitly trusting the interface to force all concrete classes to have specific methods you want to call. This enables flexibility as you program towards behaviour (defined in interfaces) instead of relying on concrete information. See [here](https://softwareengineering.stackexchange.com/questions/232359/understanding-programming-to-an-interface/232366#232366).\n\nIn turn you can simply add any of your classes to the list and you're able to call methods from your interface.\n\nThank you!", "id": "hx0k7gl", "owner_tier": 0.3, "score": 0.9999999985714286}, {"content": "I'd go with option 1, as using static collections may lead to memory leaks. To make it less coupled, create a new class like `ObjectsStorage` that would contain a `HashMap<Class<?>, List<?>>`. To add a new object, simply do `computeIfAbsent` and create empty `ArrayList` in the default value supplier, then add new value to the list. To get all objects, you will need to `getOrDefault` by class and then cast the list to whatever object type it contains like:\n\n```\nList<T> findAllObjects(Class<T> targetClass) {\n    return Collections.unmodifiableList((List<T>) classToAllObjects.getOrDefault(targetClass, Collections.emptyList()));\n}\n```\n\n`unmodifiableList` ensures no new entries may be added from outside our storage class by accident. Also, you may need to add `@SuppressWarnings(\"unchecked\")` because even though we _know_ the list is of correct type, the compiler cannot guarantee it.\n\nThis sounds really good.  Thank you", "id": "hx0l3v2", "owner_tier": 0.7, "score": 0.57142857}, {"content": "I would split the functionality into two:\n\n1. The original class of the instances you want to create. Let's call it `Foo`.\n2. The storage for those instances. Let's call it `FooStorage`.\n\nAt the initialization of your program, create one instance of `FooStorage` \\- if you want you can even make `FooStorage` a singleton, but that's not really necessary. Inside `FooStorage` keep a set or list of `Foo` and a method that will create a `Foo` instance, add it to the set/list inside the storage, and also return a reference to it. Now, instead of calling the `Foo` constructor, you will call this method. It will create the instances of `Foo` but in the same time you will be able to keep track of all of them, because you will have references to them in the storage.\n\nSomething like:\n\n    public record Foo (...) { ... }\n    \n    public class FooStorage {\n      private final Set<Foo> foos = new HashSet<Foo>();\n    \n      public FooStorage() { ... }\n    \n      // use `createFoo(...)` instead of `new Foo(...)`\n      public Foo createFoo(...) {\n        final var foo = new Foo(...);\n        foos.add(foo);\n        return foo;\n      }\n    \n      public Set<Foo> getFoos() {\n        return foos;\n      }\n    \n    \n     // here put other methods that use `foos`\n    }\n    \n    final var fooStorage = new FooStorage();\n    final var foo1 = fooStorage.createFoo(...);\n    final var foo2 = fooStorage.createFoo(...);\n    final var foos = fooStorage.getFoos(); // contains both foos\n\nGreat idea. Thanks", "id": "hx18fno", "owner_tier": 0.5, "score": 0.4285714271428572}, {"content": "As a junior programmer in Java, I think both of your options are very convoluted.\n\nLet's say the Class the user can make is called Input, and the user makes three instances of that class, a, b and c.\n\nI would add these three instances in an Array like you say, and then simply loop over them:\n\n    for (Input input : inputArray) {\n        System.out.println(input.attribute1);\n    }\n\nYou can obviously pack this into a function that you either put in the class where you're asking for input, or you can put it as a function in the Input class to keep it tidy.", "id": "hx0e0yp", "owner_tier": 0.5, "score": -1.4285714285714286e-09}, {"content": "My preferred option would be option one if I only access them within the CLI class and option two if I need access to all instances from within each instance. Since you're just printing out an attribute of all instances here, option one makes the most sense to me", "id": "hx0hyrj", "owner_tier": 0.1, "score": 0.14285714142857142}], "link": "https://www.reddit.com/r/learnjava/comments/sssc0p/best_practice_for_storing_all_instances_of_a_class/", "question": {"content": "I have a fair amount of programming experience but very little in Java/OOP so I apologize in advance if some of my terminology is wrong.  I'm working on a project without a GUI or database, just a simple infinite CLI that waits for user input.  That is to say, I'm trying to keep this very simple and not looking for any suggestions of frameworks or external solutions.  I'm doing this to learn pure Java.\n\nThe user can use the command prompt to create a number of classes, we'll say the classes are called A, B, and C.  I would like to be able to print identifying attributes from all instances of those classes on demand.\n\nWhich of these methods is preferred in your opinion?\n\n1. In the class that runs the infinite CLI loop, create an array for each different type of class (or a hash map that stores the type of class as a key and the array of instances as a value).  Any time a new class is instantiated, add it to its respective array.  Then I could just have a method in this main class that loops through whichever array I want to display.\n2. In each class, maybe have a static attribute that is an array called all\\_instances and automatically add any new instantiated class to that array.  Then there could be a static method that could loop through all the instances and print out whichever identifying  attribute I wanted.\n\nMy instinct is to go with Option number 2, but I'm questioning it because of my limited OOP history.  Also open to any 3rd option if there is something better.", "id": "sssc0p", "title": "Best practice for storing all instances of a class?", "traffic_rate": 31.737494916632777}, "saved_time": 1721102306, "source": "reddit", "tags": []}, {"answers": [{"content": "This is a common pitfall in Python.  Don't put mutable objects (like lists) in default arguments, as here:\n\n     def __init__(self, hit, cap, roster = [], ...\n\nInstead you should do this\n\n     def __init__(self, hit, cap, roster = None, ...\n         if roster is None:\n             roster = []\n\nThis is because default arguments are evaluated just once, and so all instances of that class are using that single list.  Appending to one shows up in them all.\n\nIn the second way, each instance gets its own list.\n\n^ right he is.\n\nTo elaborate a bit, assigning one object to a variable does not make copies of that object: it creates a variable which tags that position in memory for quick access. Since the list in the default value is only made once, it is simply tagged in all instances, similar to this example:\n\n    a = [5]\n    b = a\n    a[0] = 7\n    b\n    >> [7]\n\nThe `a` list has been changed, and since `b` points to the same list, they both reflect that change.\n\nI changed the Class to:\n\n    class Team:\n\t    def __init__(self, hit, cap, roster = None, hit_roster = None, pitch_roster = None, \n\tneeds = None, money= None):\n\t\t\n\t\t    self.hit = hit\n\t\t    self.roster = roster\n\t\t    self.hit_roster = hit_roster\n\t\t    self.pitch_roster = pitch_roster\n\t\t    self.cap = cap\n\t\t    self.needs = needs\n\t\t    self.money = money\n\t\t    if roster is None:\n\t\t\t    roster = []\n\t\t    if hit_roster is None:\n\t\t\t    hit_roster = []\n\t\t    if pitch_roster is None:\n\t\t\t    pitch_roster = []\n\t\t    if needs is None:\n\t\t\t    needs = ['C', '1B', '2B', '3B','SS','OF', 'U', 'P']\n\t\t    if money is None:\n\t\t\t    money = 250\n\nBut all of the team.needs are now None and have not changed to the needs in the if statement.\n\nYou're setting `self.needs` equal to `needs` when `needs` is still `None`. When you later possibly change the value of `needs` it has no affect on `self.needs`. The simplest solution is to change the order of the assignments:\n\n    class Team:\n        def __init__(self, hit, cap, needs = None, ...):\n            if needs is None:\n                needs = ['C', '1B', '2B', '3B','SS','OF', 'U', 'P']\n            self.needs = needs\n            ...\n\nIs declaring needs = None and then using the If statement the best approach for this? I feel like its overly verbose.\n\nYou can use an if expression:\n\n    self.needs = ['C', '1B', '2B', '3B','SS','OF', 'U', 'P'] if needs is None else needs\n\n    self.needs = needs or ['default']\n\nThanks. I'm still learning, so just trying to understand :)\n\nIn the class parameter list when you declare needs = [] or needs = None, is this just a default value? And any user input value will overwrite it?\n\nYes. The technical term for this is \"keyword arguments\". Google that for more info.\n\n    def my_print(arg=1):\n        print(arg)\n\n    my_print() # prints 1\n    my_print(2) # prints 2\n\nThank you very much!", "id": "cpremf5", "owner_tier": 0.3, "score": 0.99999999875}, {"content": "It's almost never a good idea to number your variable names.\n\n    teams = [Team(hit=.5, cap=x/100) for x in range(21, 27)]\n\nSo i should not name the teams Team1, Team2 ...? If so what is the reason to avoid numbers in variable names? \n\nCorrect, instead you should put them in a list (as done in my post), so they are \"named\" `teams[0]`, `teams[1]`, etc. This saves duplication of code, compare your lines 31--36 to my code.\n\nThe main problem with numbers in variable names is not the fact that they are numbers, but it hides this deeper problem where you are tempted to iterate over variables that are unrelated except for having similar variable names.\n\nI see you have a variable called `team_list`. I imagine you created this like `team_list = [Team1, Team2, ...]`. Often people who do this end up posting with a question like \"How do I iterate over variables of the form `Team_` where `_` is a number 1--6?\" and then start trying to generate variable names using string formatting.\n\nSo how, in Python, do you refer to a series of things? This is exactly what a list is designed for.\nThe solution is to use a list for a sequence of items, rather than a series of sequentially-named variables. Using sequentially-named variables, Python has no idea that these variables have anything to do with each other. Anytime you want to refer to them as a group you have to type them all out. With a list, you can *either* refer to them individually (using indexing, e.g. `teams[2]`) or as a group (`teams`).\n\nNote that this is unrelated to the problem you posted about, but is up there in top 3 newbie programming mistakes, and it leads to lots and lots of confusion, so I wanted to help. In my experience the moment you understand the difference between these approaches (that containers like lists and dicts are solutions to the problems arising from organizing groups of variables based on their names)  is a moment you start to move out the beginner stage.", "id": "cprfdxm", "owner_tier": 0.3, "score": -1.2499999924031613e-09}], "link": "https://www.reddit.com/r/learnpython/comments/30dln7/iterating_over_a_list_of_class_instances_question/", "question": {"content": "I am trying to set up a system that will draft fantasy baseball players from a list (avail_hit) and place them in the Team class instance that has the highest bid. Here is the function i am using and the Class Team:\n\n    def auction():\n        player = avail_hit[1]\n        position = avail_hit[1][8]\n\t    bidders = []\n\t\n\t\n\t    for team in team_list:\n\t\t    if position in team.needs:\n\t\t\t    bidders.append(team)\n\t    high_bid = bidders[0]\n\t    for team in bidders:\n\t\t    if(team.cap * team.money) > (high_bid.cap * high_bid.money):\n\t\t\t    high_bid = team\n\t    print(high_bid.cap)\n\t    m = high_bid.money\n\t    high_bid.money = m - (high_bid.cap *high_bid.money)\n\t\t\n\t    high_bid.hit_roster.append(position)\n\t    high_bid.roster.append(player)\n\t    del avail_hit[1]\n    class Team:\n\t    def __init__(self, hit, cap, roster = [], hit_roster= [], pitch_roster = [], \n\tneeds=['C', '1B', '2B', '3B','SS','OF', 'U', 'P'], money =250):\n\t\t    self.hit = hit\n\t\t    self.roster = roster\n\t\t    self.hit_roster = hit_roster\n\t\t    self.pitch_roster = pitch_roster\n\t\t    self.cap = cap\n\t\t    self.needs = needs\n\t\t    self.money = money\n    Team1 = Team(hit=.5,cap=.21)\n    Team2 = Team(hit=.5,cap=.22)\n    Team3 = Team(hit=.5,cap=.23)\n    Team4 = Team(hit=.5,cap=.24)\n    Team5 = Team(hit=.5,cap=.25)\n    Team6 = Team(hit=.5,cap=.26)\n    \n    auction()\n\nEverything seems to be working ok until I try to append the player and the position to high_bid.roster and high_bid.hit_roster. When i print out the rosters for all teams after the append the correct play gets put on all the teams not just the team with the highest bid. \n\nI am at a loss on what to do. I have looked on google for quite awhile trying to find out if am misunderstanding how class instances work. Please let me know if you have any idea what i might be doing wrong.\n\nThanks", "id": "30dln7", "title": "Iterating over a list of class instances question", "traffic_rate": 153.13037037037037}, "saved_time": 1721102306, "source": "reddit", "tags": []}, {"answers": [{"content": "The code runs fine here: https://i.imgur.com/kXq6AhX.png\n\naltough I must add that filter has been superseded by list comprehensions, I would advise to use\n\n    filtered_list = [f for f in food_list if f.isfree()]", "id": "htkw2w8", "owner_tier": 0.7, "score": 0.9999999900000002}, {"content": "Is this really your entire code? What version of python are you using?\n\n    $ cat test.py\n    from dataclasses import dataclass\n\n    @dataclass\n    class Food:\n        name : str\n        price : int\n\n        def isfree(self):\n            return self.price == 0\n\n    food_list = [Food(name = \"curry\", price = 5), Food(name = \"sushi\", price = 0)]\n    filtered_list = filter(Food.isfree, food_list) \n    print(list(filtered_list))\n    $ python3 --version\n    Python 3.8.2\n    $ python3 test.py\n    [Food(name='sushi', price=0)]\n\nHowever it would be more proper to pass a function which would call the proper boundmethod of the instance being passed to the delegated filter function.\n\n    $cat test.py\n    from dataclasses import dataclass\n\n    @dataclass\n    class Food:\n        name : str\n        price : int\n\n        def isfree(self):\n            return self.price == 0\n\n    food_list = [Food(name = \"curry\", price = 5), Food(name = \"sushi\", price = 0)]\n    filtered_list = filter(lambda food: food.isfree(), food_list)\n    print(list(filtered_list))\n    $ python3 test.py\n    [Food(name='sushi', price=0)]", "id": "htkwram", "owner_tier": 0.5, "score": 0.9999999900000002}], "link": "https://www.reddit.com/r/learnpython/comments/s9702h/python_filter_a_list_of_class_objects_by_class/", "question": {"content": "Like ok... the title said it all. For example : I have a list filled by class name Food. The class uniqueness are defined by name and price attribute. And I create a method to check if the Food is free. the question is how do I use the method to filter the list of Food class using the free checking method of food class?   \n\n\n    @dataclass\n    class Food:\n        name : str\n        price : int\n    \n        def isfree(self):\n            return self.price == 0\n    \n    food_list = [Food(name = \"curry\", price = 5), Food(name = \"sushi\", price = 0)]\n    filtered_list = filter(Food.isfree, food_list) # got error TypeError: isfree() takes 0 positional arguments but 2 were given", "id": "s9702h", "title": "Python filter a list of class objects by class method using Filter built-in function problem", "traffic_rate": 153.13037037037037}, "saved_time": 1721102306, "source": "reddit", "tags": []}, {"answers": [{"content": "I think you're supposed to use `__str__` instead of `__repr__`:\n\n`def __str__(self):`\n\nEDIT - Probably not though, they appear to be the same thing\n\n> EDIT - Probably not though, they appear to be the same thing\n\nNo they aren't. `__str__` provides for the `str()` function and `__repr__` provides for the `repr()` function:\n\n    class Test:\n    \tdef __str__(self):\n    \t\treturn \"I'm the Test __str__ method\"\n    \t\t\n    \tdef __repr__(self):\n    \t\treturn \"I'm the Test __repr__ method\"\n    \t\t\n    t = Test()\n    print str(t) #output: I'm the Test __str__ method\n    print repr(t)#output: I'm the Test __repr__ method\n    #print calls str automagically.\n    print t #output: I'm the Test __str__ method\n\nThe idea is that \"repr(your_instance)\" should return a string that `eval()` can use to remake the class. It's a string REPResentation of the instance.\n\nIf your class does not define `__str__`, then python uses `__repr__` instead.\n\n    class Test2:\n    \tdef __repr__(self):\n    \t\treturn \"I'm the Test2 __repr__ method\"\n    \t\t\n    t = Test2()\n    print str(t)#output: I'm the Test2 __repr__ method\n    print repr(t)#output: I'm the Test2 __repr__ method\n    print t #output: I'm the Test2 __repr__ method\n\nYa it did not work. Thanks though\n\nahhhhhhhh ok I see, so while I have you, what situations do you use each for?\n\nFigured it out, you have the `__repr__` function in the wrong class, you need to put it in the group class:\n\n    class group:\n        def __init__(self,group_name):\n            self.group_name=group_name\n            self.per_loc_list=[]\n    \n        def __repr__(self):\n            return self.group_name\n\nAs a super simple example:\n\n\tclass Distance:\n\t\tdef __init__(self, value=0, unit=\"meters\"):\n\t\t\tself.value = value\n\t\t\tself.unit = unit\n\t\t\t\n\t\tdef __str__(self):\n\t\t\t'''Human string'''\n\t\t\treturn \"{} {}\".format(self.value, self.unit)\n\t\t\t\n\t\tdef __repr__(self):\n\t\t\t'''Computer string'''\n\t\t\treturn \"Distance(value={}, unit={})\".format(self.value, self.unit)\n\nThe idea here is that you can take the output of `repr(instance)` and save it to a text file or something. Then later you can recreate your instance with `eval(loaded_text)`. I've yet to see anyone actually do that, but that's the idea.\n\nTake a look at the code for `collections.namedtuple` (/usr/lib/python2.7/collections.py for me) to see this in action.\n\n\nThe repr form is for the REPL. The str form is for print.\n\nThank you! Just curious what did you read that lead you to this conclusion? I have been googling around for a couple of hours and could not find this solution. I would just like to know what I missed.\n\nok I think I understand it better now. Thanks for the explanation.\n\nYou didn't miss anything. I was googling like crazy and I was completely stumped. I decided to take a closer look at the lines where you're initiating the classes:\n\n    peter=user(\"pete\",\"name\",\"ptp\")\n    ruc=group(\"ruc\")\n    peter.add_group(ruc)\nAnd a light bulb went off, I realized the element(s) of the list were coming from `ruc=group(\"ruc\")`, which is the group class, not the user class, so it was the group class that needed to return the object as a string. The user class is just returning a list, not an object.\n\nIt makes sense now that I see the solution. Complete fog before though", "id": "d30p6j0", "owner_tier": 0.3, "score": 0.9999999993333333}, {"content": "Sorry I could not get underscore to work!!", "id": "d30p9h7", "owner_tier": 0.1, "score": -6.666666626150194e-10}, {"content": "    def __str__(self):\n        return str([g.group_name for g in self.group_list])\n\nThen call it like this:\n\n    print(peter)\n\nor \n\n    print(str(peter))", "id": "d30r456", "owner_tier": 0.7, "score": -6.666666626150194e-10}, {"content": "Why are these classes instead of basic dictionaries?\n\nI am in the beginning stages of creating a program (web app?) that will get weather data for a group of people and give the forecast of each member in a group on a graph. It will send out an email to the user for each group they have created. Maybe something could have been better but this is what I know for now. \n\nYou'll find it easier and more productive to use built-in collections and functions. Define classes later, after you know for sure they will improve your code. As you're finding, building a good class can often require writing a fair amount of code to teach it how to do all sorts of basic tasks -- display and compare at the least. And if your class only has one real method, you probably are just slowing your program down for no benefit.", "id": "d30ya90", "owner_tier": 0.5, "score": 0.13333333266666667}], "link": "https://www.reddit.com/r/learnpython/comments/4isdtr/help_with_printing_out_a_list_of_objects_from_a/", "question": {"content": "I am having an issue with showing what is actually in peter.group_list. It gives me this [<__main__.group at 0x813e80>] bit. I understand that this is location that list object is stored but I want to print out the list. I was trying to play with the repr but could not get it to work.\n\nclass user:\n    \"\"\" This will be the person creating groups. The user can create multiple\n    groups to get weather data from for ease of use. They can add people to \n    groups and delete people from their groups. They must give an eamil address\n    so they can be emailed.\"\"\"\n    \n    def __init__(self,first_name,last_name,email):\n        self.first_name=first_name\n        self.last_name=last_name\n        self.email=email\n        self.group_list=[]\n    \n    def add_group(self,group):\n        self.group_list.append(group)\n        \n    def __repr__(self):\n        return self.group_list\n        \nclass group:\n    \"\"\"this will be a group of people or locations. The goal is to have \n    different weather reports for each group.\"\"\"\n    \n    def __init__(self,group_name):\n        self.group_name=group_name\n        self.per_loc_list=[]\n    \nclass per_loc:\n     \"\"\" this will be the location of which to get weather information.\"\"\"\n    \n    def __init__(self,city,state,zip_code,first_name=None,last_name=None):\n        self.first_name=first_name\n        self.last_name=last_name\n        self.city=city\n        self.state=state\n        self.zip_code=zip_code\n        \n        \npeter=user(\"pete\",\"name\",\"ptp\")  \nruc=group(\"ruc\")  \npeter.add_group(ruc)\n\n\npeter.group_list  \nOut[94]: [<__main__.group at 0x813e80>]\n\npeter.__repr__()  \nOut[95]: [<__main__.group at 0x813e80>]  \n\nI would really like it to print out  \n[ruc]  \n\nSo where did I go wrong?", "id": "4isdtr", "title": "Help with printing out a list of objects from a class?", "traffic_rate": 153.13037037037037}, "saved_time": 1721102306, "source": "reddit", "tags": []}, {"answers": [{"content": "Perhaps this will help\n\nhttps://pypi.python.org/pypi/astdump/4.2\n> Extract information from Python modules without importing\n\nEven with this I think you're going to have a tough time getting what you want, as things can be defined in a module dynamically such that they don't exist as \"plain names\" *until the module is executed/imported*\n\n\nThanks very much for the direction, I'll certainly play around with astdump.  I am concerned that I'll run into the issue of dynamically created objects on import as you mention... will have to give that some thought.", "id": "cnbbzpv", "owner_tier": 0.3, "score": 0.399999998}, {"content": "You're probably looking for dir. On my phone right now, but I think:\n  \n    >>> import sys\n\n    >>> dir(sys.modules[modulename])\n\n\nEdit: tested it out - http://imgur.com/vxLZZlo\n\nEdit: whoops, forgot that sys.modules just gives you what is in the current interpreter namespace. So that method does require importing.\n\n\nSo, why is it important to find the  defined methods without importing? A hacky way to do it (if you have the filepath) would be to open it as a file and search for lines starting in class/def. Someone may have written it already though; just haven't seen that in my searches.\n\nIt still has to have been imported in the runtime, even if it's not imported into your own namespace.\n\nGood point, looks like the module I chose is one that is precached by the interpreter.", "id": "cnbaaie", "owner_tier": 0.3, "score": 0.599999998}, {"content": "I don't know why you can't import it - if you need to make sure it doesn't execute any code, this won't work, but if the only issue is that you only have the module name as a string / filename, try importlib or just \\_\\_import\\_\\_\n\nThe problem with importing is because Python doesn't allow you to unload a module once it's imported.  Loading every single module available in full and having them sit in memory for the entire lifetime of the application is not practical.  If I could import and then unload them that would be great, but my understanding is that Python does not allow this.  What I'm trying to do is create an environment similar to Smalltalk 'images' with a System Browser that lets you easily look through all of the modules/classes/etc available to you.\n\nWhat if you wrote an independent program that imports a module, dumps information about it into standard output, and then read it into your main program.\n\nAlso, try deleting it from sys.modules - I've seen various posts claiming that this will correctly unload pure-python modules (but not C extension modules). \n\nPerhaps you could write a script that imports a given module(s) and spits out the contents, and then call that script in a subprocess from your main program.  The script will run, import the module, give you the contents (serialized) and then the process will end (releasing the memory)\n\nEdit:  I see this was suggested above, I guess I didn't refresh\n\nThat is a very good idea!  Thank you for it!  I don't know why I hadn't considered just executing a separate instance of the interpreter and getting input back from it!  \n\nAs for unloading modules, there are several questions about it on StackOverflow with pointers to old issues raised with the Python developers and the bottom line is 'Python doesn't support unloading modules, and making it so you could unload a module would be tremendously difficult'.  All of the content I could find was specifically about pre-3 Python though.  It is possible that the way modules are handled was changed enough in 3+ to make it workable, but I wasn't able to find any specifics about it one way or the other.", "id": "cnbfznd", "owner_tier": 0.7, "score": 0.9999999980000001}, {"content": "With the ast module, you can easily traverse the source code and filter the classes.\n\n    >>> import ast\n    >>> import _ast\n    >>> tree = ast.parse(source_code)\n    >>> classes = [cls for cls in tree.body if isinstance(cls, _ast.ClassDef)]\n    >>> classes[0].name\n    SomeClass\n\nFor nested classes/functions you'd have to look into the body of those classes and functions recursively.", "id": "cnbi3m6", "owner_tier": 0.1, "score": -1.999999987845058e-09}, {"content": "If you check out the David Beazley talk about metaprogramming. Towards the end he describes some methods for hijacking/making a custom importer. [link](http://youtu.be/sPiWg5jSoZI)\n\nThat is an extremely interesting talk!  Thank you very much for pointing it out for me, I am watching it now.  I haven't done much metaprogramming beyond some simple decorators, so I'm learning a lot.", "id": "cncrc5w", "owner_tier": 0.3, "score": 0.199999998}], "link": "https://www.reddit.com/r/learnpython/comments/2r0j3j/easy_way_to_list_classesfunctions_defined_in/", "question": {"content": "It is easy to enumerate the various available modules.  Is there an easy way to take a module name and, without importing it (this is important), get a list of the classes, functions, etc defined in the module?  I'm thinking I should start looking into the compiler or ast modules, but not sure they will do what I need.  I'd appreciate even vague pointers toward where I might want to go digging.  Thanks in advance!", "id": "2r0j3j", "title": "Easy way to list classes/functions defined in module without importing it?", "traffic_rate": 153.13037037037037}, "saved_time": 1721102306, "source": "reddit", "tags": []}, {"answers": [{"content": ">The output for displaying the whole inventory does not display the desired output\n\nThat is because you have to print each item individually. At the moment you print a list. If you print the items individually by looping over it it will use the \\_\\_str\\_\\_ method that was overwritten.\n\n&#x200B;\n\n`inventory.append(ItemInventory(new_item))` this does not really make sense. Why create a ItemInventory first and then create a new one with the existing instance as parameter?\n\n&#x200B;\n\nAlso I would suggest to not put get\\_input inside the ItemInventory class. Instead have get\\_input fetch the desired values and then instantiate a new ItemInventory that you can add to your list. Something like `my_item = ItemInventory(input_name, input_count, input_cost, input_category)`\n\n&#x200B;\n\n&#x200B;\n\n>TypeError: arugment of type 'InventoryItem' is not iterable\n\nThis is because of the line `if category_name in item:` you would need to do something like `if item.category == category_name`.\n\n&#x200B;\n\nAlso if you want to be extra fancy you could think about modelling your categories as an Enum ;)\n\n>you would need to do something like `if item.category == category_name`.\n\nI changed that and it doesn't give me an error anymore, so thank you! \n\n&#x200B;\n\n>`inventory.append(ItemInventory(new_item))` this does not really make sense. Why create a ItemInventory first and then create a new one with the existing instance as parameter?\n\nYou're right. I was looking at examples from my textbook and one did something like that so I figured I'd give it a try but obviously that didn't work out the way I wanted to.", "id": "k7e6crh", "owner_tier": 0.1, "score": 0.33333333000000004}, {"content": "Instead of inventory.append(ItemInventory(new_item)) you should use inventory.append(new_item).    \nnew_item is already an instance of ItemInventory.", "id": "k7ea755", "owner_tier": 0.5, "score": -3.3333333130750966e-09}, {"content": "You're missing colon : in the \\_\\_init\\_\\_ line\n\n2-4th lines of get\\_input are missing indent each, but I'm guessing it might have been lost after pasting.\n\nReturned string requires parentheses or \\\\ symbol if you want to split it into multiple lines:\n\n    return (\n        f\"{self.name}\\n\"\n        f\"\\tCount: {self.count}, Cost: {self.cost}\\n\"\n        f\"\\tCategory: {self.category}\"\n    )\n\nor \n\n    return f\"{self.name}\\n\" \\\n           f\"\\tCount: {self.count}, Cost: {self.cost}\\n\" \\\n           f\"\\tCategory: {self.category}\" \\\n\nYou get <inventory_item.InventoryItem object at 0x000001B8F8D4C390> instead of __str__ return, because __repr__ is used when a list, a tuple, etc. is printed with your object inside. Try to define __repr__ instead of __str__ (just rename it). Though the result may still not look like you'd expect\\want it to with multiple items in a list. Simple idea to try is adding \\n:\n\n    f\"\\tCategory: {self.category}\\n\"\n\nOR just print using a loop:\n\n    for item in items:\n        print(item)\n\nIf you don't define __str__, __repr__ gets called by default in cases where __str__ would be normally called, like when just printing the item instead of printing in a list.\n\nIn display_inventory, you have print(Inventory) instead of print(inventory). The upper/lower case difference matters in Python.\n\nInventoryItem and ItemInventory names seem to be swapped.\n\nI'm guessing the code you've given isn't exactly the same as you're running, which is not right. You should share it the same, even one wrong letter or blank can make a difference.\n\nYou get TypeError: arugment of type 'InventoryItem' is not iterable, because you're trying if category_name in item. You should probably just check item.category == category_name\n\n>You're missing colon : in the \\_\\_init\\_\\_ line\r  \n\r  \n2-4th lines of get\\_input are missing indent each, but I'm guessing it might have been lost after pasting.\n\nYes, I am not copying the program verbatim since I wouldn't want to get penalized for it, so I made some changes. I appreciate your patience!\n\n&#x200B;\n\nThe loop worked and it is now showing me my desired output :) thank you.", "id": "k7e7bhs", "owner_tier": 0.5, "score": -3.3333333130750966e-09}, {"content": "First off, before anything: based on typos in the code and error messages that you provided here, it seems to me that you're manually re-typing what you're posting here. Please don't create unnecessary work for yourself \u2014 your computer has a copy/paste function for a reason.\n\n>     inventory.append(ItemInventory(new_item))\n\nWhy are you doing this? `new_item` is already an object of `ItemInventory`, you don't need to create yet another object from it.\n\nAnd because your `__init__` is designed to take four properties rather than another instance, this creates a pretty invalid object, where the old instance becomes the \"name\" of the new one and all the other properties of the new one are left at their default state.\n\nCheck this out:\n\n    In [2]: a = ItemInventory()\n    \n    In [3]: a.get_input()\n    Enter item name: something\n    Enter item count: 1\n    Enter unit cost: 2\n    Enter category: Merch\n    \n    In [4]: a.name\n    Out[4]: 'something'\n    \n    In [5]: a.count\n    Out[5]: 1\n    \n    In [6]: a.category\n    Out[6]: 'Merch'\n    \n    In [7]: b = ItemInventory(a)  # b is what you're appending in your code!\n    \n    In [8]: b.name\n    Out[8]: <__main__.ItemInventory at 0x7f201c630d10>\n    \n    In [9]: a\n    Out[9]: <__main__.ItemInventory at 0x7f201c630d10>\n    \n    In [10]: b.count\n    Out[10]: 0\n    \n    In [11]: b.cost\n    Out[11]: 0.0\n    \n    In [12]: b.category\n    Out[12]: ''\n    \nDo you see the problem?\n\nJust append `new_item`.\n\n> The output for displaying the whole inventory does not display the desired output, which is something like this: [...]\n\nThat is because when you print a list, it uses the `__repr__` of each of its elements, not the `__str__`.\n\nCheck this out:\n\n    In [1]: class Something:\n       ...:     def __str__(self):\n       ...:         return \"Something's str\"\n       ...:     def __repr__(self):\n       ...:         return \"Something's repr\"\n       ...: \n    \n    In [2]: a = Something()\n    \n    In [3]: a\n    Out[3]: Something's repr\n    \n    In [4]: print(a)\n    Something's str\n    \n    In [5]: str(a)\n    Out[5]: \"Something's str\"\n    \n    In [6]: print([a])\n    [Something's repr]\n    \nDefine `__repr__` to be the same as `__str__`. This can be done as easily as `__repr__ = __str__` in the class declaration.\n\n> I am given this message \"TypeError: arugment of type 'InventoryItem' is not iterable\" in my display_category()\n\nThe problem is with your `if category_name in item`. The `in` operator is only defined for classes that define the `__contains__` magic method. Because yours doesn't, it's meaningless to try and check if something is `in` it.\n\nIf you want to check if the item's category is `category_name`, *just do that*. Simply `if item.category == category_name`.\n\n> Should I have appended each new_item in the inventory list differently?\n\nWell, yeah, as I said before. But that isn't the cause of this specific error.\n\n>First off, before anything: based on typos in the code and error messages that you provided here, it seems to me that you're manually re-typing what you're posting here. Please don't create unnecessary work for yourself \u2014 your computer has a copy/paste function for a reason.\n\nYes, I didn't want to paste the whole program verbatim so I made some changes (my class prohibits me from copy/pasting any part of the materials they gave me; I wouldn't want to be penalized for it).\n\n&#x200B;\n\n>The problem is with your if category\\_name in item. The in operator is only defined for classes that define the \\_\\_contains\\_\\_ magic method. Because yours doesn't, it's meaningless to try and check if something is in it.\n\nOh man, I've never heard of `__contains__` method. Looked it up and will be using that in the future!\n\n&#x200B;\n\n>If you want to check if the item's category is category\\_name, just do that. Simply if item.category == category\\_name.\n\nI made this change and it finally worked. Thank you\n\nWhen you have some free time, you should definitely consider just spending some of it browsing the Python documentation. You can learn all sorts of useful things like what magic methods exist, and what they're used for. Beyond that you can also get a better understanding of what the standard library offers beyond the limited set of things your classes teach.\n\nI'll definitely do that, thank you for the tip!", "id": "k7e88x7", "owner_tier": 0.7, "score": 0.9999999966666667}], "link": "https://www.reddit.com/r/learnpython/comments/17lhaj7/first_time_working_with_classes_how_do_i_append/", "question": {"content": "I'm currently writing this program for my class homework and I'm having a hard time dealing with classes.\n\nIn this program, I am creating an inventory in which I enter an item `name`, its `count`, `cost`, and `category` (restricted to `'Food'`, `'Drink'`, and `'Merch'`).\n\n&#x200B;\n\nI have to make a class that has 4 attributes (`name`, `count`, `cost`, `category`) and 3 methods:\n\n1. `__init__()`\n2. `get_input()`: this method asks for the name, count, cost and category\n3. `__str__`\n\n&#x200B;\n\nHere is the class I created:\n\n    class ItemInventory:\n        def __init__(self, name='', count=0, cost=0.0, category='')\n            self.name = name\n            self.count = count\n            self.cost = cost\n            self.category = category\n    \n        def get_input(self):\n            self.name = input('Enter item name: ')\n            self.count = int(input('Enter item count: '))\n            self.cost = float(input('Enter unit cost: '))\n            self.category = input('Enter category: ')\n    \n        def __str__(self):\n            return f\"{self.name}\\n\"\n                   f\"\\tCount: {self.count}, Cost: {self.cost}\\n\"\n                   f\"\\tCategory: {self.category}\"\n\n&#x200B;\n\nHere is the rest of the program:\n\n    category_list = ['Food', 'Drink', 'Merch']\n    \n    def main():\n        inventory = []\n        \n        # Create a loop in which the user can add multiple items in inventory list.\n        answer = ''\n        while answer.lower() != 'n':\n                # Create an object, ask the user for item input using object's method,\n                # then append object to inventory lsit.\n                new_item = ItemInventory()\n                new_item.get_input()\n                inventory.append(ItemInventory(new_item))\n    \n                answer = input('Enter more items? ')\n    \n        # I need to print the items in each category. I'm required to have a \n        # specific function for this.\n        for category in category_list:\n            display_category(category, inventory)\n    \n        # One more function that displays ALL items in inventory.\n        display_inventory(inventory)\n    \n    \n    main()\n\n&#x200B;\n\nHere are the functions:\n\n    def display_category(category_name, inventory):\n        header = f'Items in {category_name}'\n        divider = len(header) * '-'\n        print(header)\n        print(divider)\n        \n        for item in inventory:\n            if category_name in item:\n                print(item)\n            else:\n                return 'Category empty.'\n    \n    def display_inventory(inventory):\n        print()\n        print('Current Inventory')\n        print('-----------------')\n        if len(inventory) == 0:\n            print('Inventory empty.')\n        else:\n            print(Inventory)\n\n&#x200B;\n\nI have a few problems here:\n\n* The output for displaying the whole `inventory` does not display the desired output, which is something like this:\n\n&#x200B;\n\n    Croissant\n        Count: 5, Cost: 2.90\n        Category: Food\n\nInstead, I get something like this:\n\n    [<inventory_item.InventoryItem object at 0x000001B8F8D4C390>], etc.......\n\n&#x200B;\n\n* I am given this message \"`TypeError: arugment of type 'InventoryItem' is not iterable`\" in my `display_category()` function. I don't know how to search a list of objects. Should I have appended each new\\_item in the inventory list differently?\n\n&#x200B;\n\nAny help would be greatly appreciated. I'm really at a loss here. Thanks in advance.", "id": "17lhaj7", "title": "First time working with classes. How do I append an object to a list and how do I find a specific value in each object in the list?", "traffic_rate": 153.17203703703703}, "saved_time": 1721102306, "source": "reddit", "tags": []}, {"answers": [{"content": "They only mean what they are defined to mean. There's no other meaning than what's in this code.\n\nEach instance of NewNode has a member called next. It stores another instance of NewNode, the next item in the linked list. Head is the first instance of NewNode in your list, and if you call .next on it, it will give you the next instance of newNode in the list. To visit each item in your list, you keep calling next on each instance until there are no more instances (.next returns None). When you reach None, you know you've reached the end of your list.\n\nIf you were to draw it like this:\n\nN(head)->N(1)->N(2)->None\n\nThen .next is like the arrows in the drawing, it is the link between each item in the list, but it only goes in the forward direction.\n\nSay newNode.next, what does that mean? Is newNode referring to self, and next comes from the Node class?\n\nNext is just an attribute or the newNode class instance.in the context of knowing this is a class that implements a linked list it means morez but that's not relevant to the nuts and bolts if an arbitrary python class. It's just some data.\n\n\\[line 17\\] for example :\n\n`newNode.next = self.head`\n\nIs calling the `next` attribute of `newNode`  \nwhich in this case we need to look at the value assigned to `newNode` to understand  \\[line 12\\]: \n\n`newNode = Node(data)`\n\n`Node(data)` is a call to the first class defined. \\[line 1\\]. \n\nSo `newNode.next` is calling the next method of the `Node` class and assigning it a value of `self.head`\n\nIf newNode is an instead of the Node class, then yes, it is calling the \"next\" method that is defined in the class definition for Node.\n\nIf you're using the interactive interpreter, you can do \"help(newNode)\" to get a print out if the documentation for the object, if it exists.\n\nOr if you're using a halfway decent IDE, it can provide all sorts of documentation and hints as you go.\n\nNo, newNode is not referring to self. You can see what it refers to in the code because you can see where that is defined.\n\nI use IDLE, is that good enough?\n\nIDLE is fine for small projects. I've used it in the pinch when it's the only thing on a computer and I don't have internet access. My preferred IDE is Pycharm for Python projects. Or at the very least VS Code, which you can add plugins to for extra functionality.\n\nI\u2019ll take a look at PyCharm, I\u2019ve heard that it\u2019s good for Python development only while VS Code is more universal. Thanks\n\nPycharm has some plugins to handle other languages, and has some built in support for certain other common file types, so it's not completely option only.\n\nIt does have fewer overall plugins for different languages compared to VSCode. However, of you're just working with Python and some other common stuff, Pycharm requires less initial configuration compared to VSCode.\n\nBecause vscode was designed to be language agnostic, there is no code there to automatically detect what's versions of python you have and where they're installed, there's no built in support for managing virtual environments for your project, there's no built in package manager UI, there's less refactoring support...\n\nVSCode's language agnostic approach means it's usually a worse experience than using an editor dedicated to the language you're using (unless you're using some obscure language where vscode is the only editor that supports it at all). I use VSCode as my editor of last resort. If I've got nothing better to use, then I'll use VSCode.\n\nThe one make advantage other than the large number of plugins I will give VSCode is that it's often faster/more responsive than heavy IDEs like visual studio, the Jetbrains IDEs (Pycharm, Clion, etc. etc.) And some people really value having a quick lightweight editor. Personally if I'm just looking for the bare minimum I use Notepad++ though.", "id": "ksgfdxy", "owner_tier": 0.5, "score": 0.9999999994736841}, {"content": "The dot notation is used to access attributes of objects. An attribute is a value bound to an object.\n\nFor example, in this context `current.next` is accessing the `next` attribute of the current node instance. It could be `None`, or it could be another node object.\n\n`current.next` could alternatively be written as `getattr(current, \"next\")`, which itself is really just accessing `current`'s internal dictionary (every class in Python is kind of a fancy wrapper around a dictionary, and the dictionary holds the attributes of the instance) and fetching the value from the `\"next\"` key.\n\nIn short, though, don't think about it too hard.\n\nWait so .next is just a thing in Python? Because when I googled Python .next I found the method .next() which is used to point towards the next item in a list for example \n\nHowever in this case you aren\u2019t pointing to the next item, you are creating a new item under .next\n\n'next' is not special, it's just what the coder picked as a suitable name for that bit of data\nThe new item isn't \"under\" that value. It'll be a reference to another equally valid object unlike simple strings etc, class instance reference each others it's not a separate copy.\n\nNo, there's nothing special about `next`, I just happened to use it as an example. Perhaps I should've used something else instead.\n\nOkay, consider this dead simple class:\n\n    class Person:\n        def __init__(self, name: str, age: int):\n            self.name = name\n            self.age = age\n\n    character = Person(\"Utena\", 14)\n\nIt has two attributes, `name` and `age`. You can access them via the dot notation.\n\n    print(character.name)  # Utena\n    print(character.age)  # 14\n\nThe names themselves do not have any special meaning to Python, they could be anything (as long as you don't use invalid symbols). I could have just as well used `foo` and `bar`, but having a name that tells the developer something about it is useful.\n\nAgain, I could have also written the same as\n\n    print(getattr(character, \"name\"))\n\nbut that's more writing for no benefit in this case. The dot notation should generally be preferred.", "id": "ksggvv0", "owner_tier": 0.7, "score": 0.5263157889473684}, {"content": "Head and next are just standard linked list lingo meaning exactly what the words say. Nothing to do with syntax. The only syntactic part \u201c.\u201d OTOH is not specific to linked lists but simply the way to navigate from the object on the LHS of the operator to its attribute or method on the RHS.", "id": "ksh1an2", "owner_tier": 0.5, "score": 0.052631578421052636}, {"content": "`current.next` is an attribute lookup. It's taking the `object that `newNode` refers to, and getting the `next` attribute on it. In this case, that's fetching the node that comes after the `current` node.\n\nOr, in other words, `a.b` is used to access the `b` data inside of `a`.\n\nSo it\u2019s like a given attribute within Python classes? It\u2019s not something that has to be explicitly created?\n\nIt *should* be set in the `__init__` in `Node` using something like `self.next = None`, but it doesn't have to. By default, Python classes are backed by dictionaries and allow you to add arbitrary attributes at runtime.\n\nThis is more advanced, but you can explicitly set what instance attributes are allowed on an instance of a class using [`__slots__`](https://docs.python.org/3/reference/datamodel.html#slots).\n\nWait I did set self.next = None in Node\n\nSo I can set it and use it universally?\n\nIt's some data that's attached to the object, and ya, can be accessed externally.", "id": "ksggqnq", "owner_tier": 0.9, "score": 0.31578947315789474}, {"content": "I\u2019m general, you can inspect attributes using help() or dir(), you need to import the specific package(s) to make sure they do not overwrite python based functions - as you can simply assign help to a variable, and render it useless in your code", "id": "ksh46da", "owner_tier": 0.1, "score": -5.263157862750153e-10}, {"content": "Ok, so there's a few things we need to go through.\n\n# Classes in general\n\nBefore we continue, out seems like you're struggling with the concept of how classes work in general, so let's go over what a class is.\n\nA class is a template or a blueprint. It's a way to group data together into a more meaningful structure, and it lets us as behavior to that collection of data.\n\nWhen we define a class, we use `__init__` to define what information is needed to create a new object based off this blueprint (the raw materials). `__init__` also explains what to do with those raw materials in order to actually get a proper object out of them. Of course, because these instructions need to work for every object we create based on this blueprint, we need a way to talk about whatever object were currently working with, regardless of what variable name it might be assigned to later on after it's been created.\n\nThis is where `self` comes on. `self` is a convention, technically your can use whatever name you want, but every method (that is, a function attached to a class) automatically gets the object the method is being called on passed as the first argument to the method. By convention we call this argument `self`. This is what allows us to refer to whatever object were constructing inside `__init__` as well as every other method within that class.\n\n# The linked List classes\n\nWe have two classes here: `LL` which represents the linked list itself, and `Node`, which acts as a container for each piece of data you will add or remove from the list.\n\n# The class structure\n\n`LL` contains one piece of data: the first item in our list, as well as several methods for adding and removing items from the list.\n\n`Node` contains one piece of data, and also keeps track of what the next `Node` in the list is (if there is one).\n\n# The methods\n\nAll these methods are part of the `LL` class, so that means they all have a `self` variable that refers to whatever `LL` object you've created.\n\nLet's look at `insert_start`:\n\nIt creates a `Node` object, passing the data into that object and then assigning it the name `newNode`. Then it checks if the current linked list object has None assigned to its `.head`, and either replaces the None with `newNode`, or if there is already a node assigned to `.head`, it sounds that to `newNode`'s `.next` variable, then replaces the current list's `.head` with `newNode`.\n\n# Putting things together\n\nLet's say you create 2 linked list objects:\n\n    my_list1 = LL()\n    my_list2 = LL()\n\nThen suppose you called `my_list1.insert_start(5)`. What happens is the insert_start function gets the linked list object you assigned to the name `my_list1` passed as the first argument, and the `5` passed as the second one. This means that inside the method code `self` refers to the same object that `my_list1` does.\n\nIf I then call `my_list2.insert_start(\"monkey\")` what happens is similar, except that this time the arguments are `my_list2` and `\"monkey\"`. This means this second time around, `self` refers to a different object. it refers to `my_list2`.\n\n# Conclusion\n\nHopefully this helps you understand how this stuff works together a bit better.", "id": "kshzgl4", "owner_tier": 0.7, "score": -5.263157862750153e-10}], "link": "https://www.reddit.com/r/learnpython/comments/1b1qz3q/how_do_i_understand_what_all_the_variables_are_in/", "question": {"content": "Currently learning a linked list, and I keep coming across stuff like current.next, self.head etc. \nWhat do all these mean? I understand the logic of the code but I don't understand the syntax. I can't just memorise it either as it probably won't help me much.\n\n```\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\nclass LL:\n    def __init__(self):\n        self.head = None\n\n\n    def insert_start(self, data):\n        newNode = Node(data)\n        if self.head == None:\n            self.head = newNode\n            return\n        else:\n            newNode.next = self.head\n            self.head = newNode\n\n\n    def insert_pos(self, data, pos):\n        newNode = Node(data)\n        current = self.head\n        index = 0\n        if index == pos:\n            self.insert_start(data)\n        else:\n            while(current != None and index + 1 != index):\n                index += 1\n                current = current.next\n\n            if current != None:\n                newNode.next = current.next\n                current.next = newNode\n            else:\n                return False\n\n    def insert_end(self, data):\n        newNode = Node(data)\n        if self.head == None:\n            self.head = newNode\n            return\n    \n        current = self.head\n        while (current.next):\n            current = current.next\n\n        current.next = newNode\n\n```\n\nSay this block of code. How do I understand what all the stuff with \".\" means?", "id": "1b1qz3q", "title": "How do I understand what all the \".\" variables are in a class?", "traffic_rate": 153.17203703703703}, "saved_time": 1721102306, "source": "reddit", "tags": []}, {"answers": [{"content": "This is exactly what the `shelve` module was designed to do. It's baked by `pickle` which means it can store nearly any arbitrary class type. It also means you can store executable code, so you need to be careful that you only open files that you created.\n\nWhat's the difference between shelve and pickling a file?\n\nNot sure what you mean with \"pickling a file\". We don't do that. If you mean \"creating a pickle file\" aka \"pickling an object\" then yeah, shelve does exactly the same thing, but in an easy, dictionary-based interface. `shelve` is pretty lightweight; you could easily rewrite it yourself if you wanted to.\n\nSorry, ya I meant to say pickling an object. I'll check the module out. Thanks btw", "id": "gty0xhc", "owner_tier": 0.7, "score": 0.9999999975}, {"content": "You need to serialize and deserialize your instance somehow. You can either use pickle to do that, or add your own serialization methods. Dumping to a DB is one example of that. You could also add `to_dict` / `from_dict` methods and use those to dump and load the class as a json-able type.", "id": "gty26jj", "owner_tier": 0.5, "score": -2.4999999848063226e-09}], "link": "https://www.reddit.com/r/learnpython/comments/mnkiqr/whats_the_best_way_to_store_a_class_instance/", "question": {"content": "So currently I have a program that mocks a grocery store inventory manager system. Each item is represented by a class instance and currently I'm storing each instance within a list, and that list is a value within a dictionary.  The key is the name of the category.\n\nUser enters in the category they want to add their item to,  they then add in attributes such as the name of their product and the price, this then get's saved as an instance and then it gets appended to the list of the category that they entered.  (Category being the key, list being the value of that key.\n\n    \n    fruit = []\n    canned_goods = [] home_products = []\n    \n    categories_dict = {\n    \n    'Fruit': fruit, \n    'Canned Goods': canned_goods, \n    'Home Products': home_products\n    }\n\n&#x200B;\n\n&#x200B;\n\nI'm having some trouble trying to write this dictionary file into a JSON file so I can load it up every time the program starts.  I haven't tried pickling the file yet but I wouldn't mind  totally avoiding pickling and getting rid of my dictionary entirely and storing it all within SQLite if that's possible. Would that be an efficient way of getting it done? Or would there be any other better options with storing instances persistently?", "id": "mnkiqr", "title": "What's the best way to store a class instance persistently?", "traffic_rate": 153.17203703703703}, "saved_time": 1721102306, "source": "reddit", "tags": []}, {"answers": [{"content": "\r\n    You need to create a weapon class with the two attributes. Also you need to add the two mentioned methods of the character class: Replace_weapon(w) and List_weapons(). As far as I can see that is all that is required. Once you have that you can create a character object, add some weapons and list them, something like:\nPython\n\r\nfighter = character() # create an object of the class\r\naxe = weapon(\"axe\", 20)\r\nfighter.Replace_weapon(axe) # the replace method needs to replace the weakest existing weapon\r\nfighter.List_weapons()\r\nSee also 9. Classes \u2014 Python 3.11.0 documentation[^].\r\n", "id": "2_5345804_2", "owner_tier": 0.7, "score": 0}], "link": "https://www.codeproject.com/Questions/5345774/Can-you-help-me-to-solve-this-Python-question", "question": {"content": "\n\n\r\nImagine that you are a character who is in a video game. You have two hands with which you can hold at maximum two weapons (one per hand). Using object-oriented programming, have your character pick up the objects that they find in the wild. Have your character choose the weapon that has the maximum strength. The weapons should have the following attributes:\r\n\r\n- Name (string)\r\n\r\n- Strength (number)\r\n\r\nThe character should have the following attributes:\r\n\r\n- Left_hand_weapon (weapon)\r\n\r\n- Right_hand_weapon (weapon)\r\n\r\nThe character should have the following methods:\r\n\r\n- Replace_weapon(w), where w is the weapon that was found. It will replace left hand or right hand weapon, depending on which weapon is weaker. If the weapon is weaker than both weapons the character is holding, the weapon will not be replaced.\r\n\r\n- List_weapons(), which will list the name and strength of the weapons.\r\n\r\n\r\n\r\nsome tip:\r\n\r\ncreate a class called Character\r\n\r\nadd member variables Left_hand_weapon, Right_hand_weapon as dictionaries having Name and strength as properties/keys\r\n\r\nExample variable:left_hand_weapon = {name: \"katana\", strength: 20}Step2/2\r\n\r\nadd methods to the class\r\n\r\nExplanation:\r\n\r\nreplace_weapon - will replace right or left hand weapon based on whose strength is lesser or if given weapon strength is lesser than both no replacement will be done\r\n\r\nlist_weapons - prints the list of all the weapons available till now\nclick here for output image\n\nWhat I have tried:\n\r\nHonestly, i tried this little thing but i dunno how to complete it\n\n\r\nclass character:\r\n    Left_hand_weapon = {\r\n        'weapon': 'katana',\r\n        'strength': 10\r\n    }  \r\n    while True:\r\n     weapon = input(\"Please enter the name of the weapon you found (enter Quit to quit): \")\r\n     strength = input(\"Please enter the strength of the weapon you found (enter Quit to quit): \")\r\n     if (weapon or strength) in Left_hand_weapon.values():\r\n       print(f'Left: {weapon} has strength {strength}')\r\n     else:\r\n      print('That value is not in the dictionary.')\n", "id": "5345774", "title": "Can you help me to solve this Python question?", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["Python"]}, {"answers": [{"content": "\r\n    Basically, the best approach is collecting all of the instances in some container. Wait a minute, not so fast. There is a possibility that your thinking is to abuse the garbage-collected architecture. But maybe not. Let's sort it out.\n\r\nYou cannot just \"remove instance\", as there is no such thing in managed application. You only need to remove the referenced to the instances, and they are, again, are stored in some container. So, in the simplest case, you simply need to clear the container.\n\r\nI hope you already understand this, but it need some clarification. Any object on heap will be destructed and removed from memory by the Garbage Collector (GC) if your object lost its reachability. Reachability is not a simple concept at all. For example, if three objects are referencing each other in cycle (A -> B -> C -> A), but there no more references to either of them, they will be garbage-collected anyway.\n\r\nI can imagine that your picture is more complex. There are many different containers, nesting containers, each containing objects of different types, polymorphous or not. Usually, you should recursively traverse all your containers and clear them. This is the best way.\n\r\nLet's imaging that this is difficult for you, by whatever reason. Then you could collect all the child-parent relationship to be cleared in some separate container. The storing is not trivial; you will need to store some data and references needed to remove an object from its parent container. Maybe, it should be just the collection of containers. It depends on your design which I don't know. My thing is to give you the right idea.\n\r\nThe problem here is this: this extra collection itself will hold objects and thus will keep them from collection. There are two ways to work around this problem. 1) You will need to clean this extra collection itself when the work is done; 2) you can hold not \"real\" references, but \"weak references\", which can be used for referencing by will allow garbage collection.\n\r\nThe problem of weak referencing is resolved using the class System.WeakReference, please see http://msdn.microsoft.com/en-us/library/system.weakreference.aspx[^].\n\r\nI would also recommend to read the interesting articles by CodeProject author Paulo Zemec:\nCreating a Weak List[^],\nWeakReferences, GCHandles, and WeakArrays[^],\nCreating a weak event[^].\n\n\u2014SA\n", "id": "2_316780_1", "owner_tier": 0.9, "score": 5.0}], "link": "https://www.codeproject.com/Questions/316737/Best-way-to-remove-all-instances-of-a-class", "question": {"content": "\r\n\t\t\t    I was wondering if you could give me a hint on what's the best way of approaching this ..\n\r\nI have a custom control(class) (It's actually a button) that I initialize multiple times during run time..\r\nCurrently to apply changes to the buttons, I need to restart the application - but now I'm getting tired of doing so  - therefore I would prefer to remove all Instances of the class (including the handles that I initialized during creation) and then clear new instances after wards with the new settings\n\r\nWhat would be the best approach to do so ??\r\nShould I just hold a ref to the control in a hash table or collection  and then just clear them from there ?\n\r\nI also thought there was a function that returns all initialized instances of a class - but I could not find anything pointing in that direction anymore\n\r\nAny Imput would be appropriated\r\n\t\t    ", "id": "316737", "title": "Best way to remove all instances of a class ?", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["VB"]}, {"answers": [{"content": "\r\n    It is simpler than that. You need a static field as counter, and be sure to make all constructors increment it, and the destructor decrement it (be aware of the garbage collector) - but this later part is not needed in you case as I see.\r\nThe c# template is the follwoing:\nC#\n\r\nclass MyClass\r\n{\r\n    static int counter = 0;\r\n\r\n    public MyClass()\r\n    {\r\n        Interlocked.Increment(ref counter);\r\n    }\r\n\r\n    public ~MyClass()\r\n    {\r\n        Interlocked.Decrement(ref counter);\r\n    }\r\n}\r\nThe VB.NET version would be:\nVB\n\r\nClass [MyClass]\r\n    Shared counter As Integer = 0\r\n\r\n    Public Sub New()\r\n        Interlocked.Increment(counter)\r\n    End Sub\r\n\r\n    Protected Overrides Sub Finalize()\r\n        Try\r\n            Interlocked.Decrement(counter)\r\n        Finally\r\n            MyBase.Finalize()\r\n        End Try\r\n    End Sub\r\nEnd Class\n\r\nThe list part is a little bit more complicated because of the same garbage collector (source[^])\nC#\n\r\npublic class MyClass\r\n{\r\n    private static List<WeakReference> instances = new List<WeakReference>();\r\n\r\n    public MyClass()\r\n    {\r\n         instances.Add(new WeakReference(this));\r\n    }\r\n\r\n    public static IList<MyClass> GetInstances()\r\n    {\r\n        List<MyClass> realInstances = new List<MyClass>();\r\n        List<WeakReference> toDelete = new List<WeakReference>();\r\n\r\n        foreach(WeakReference reference in instances)\r\n        {\r\n            if(reference.IsAlive)\r\n            {\r\n                realInstances.Add((MyClass)reference.Target);\r\n            }\r\n            else\r\n            {\r\n                toDelete.Add(reference);\r\n            }\r\n        }\r\n\r\n        foreach(WeakReference reference in toDelete) instances.Remove(reference);\r\n\r\n        return realInstances;\r\n    }\r\n}\r\nBut can be simpler if the usage of the list let's you make it simpler.\n\r\n[Update: working exampe]\nC#\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\n\r\nnamespace listed\r\n{\r\n\tpublic class MyClass\r\n\t{\r\n\t\t#region instance collection\r\n\t\tprivate static List<WeakReference> instances = new List<WeakReference>();\r\n\t\t\r\n\t\tpublic IList<WeakReference> Instances \r\n\t\t{\r\n\t\t\tget \r\n\t\t\t{\r\n\t\t\t\treturn instances.AsReadOnly();\r\n\t\t\t}\r\n\t\t}\r\n\t \r\n\t    public static IList<MyClass> GetInstances()\r\n\t    {\r\n\t        List<MyClass> realInstances = new List<MyClass>();\r\n\t        List<WeakReference> toDelete = new List<WeakReference>();\r\n\t \r\n\t        foreach(WeakReference reference in instances)\r\n\t        {\r\n\t            if(reference.IsAlive)\r\n\t            {\r\n\t                realInstances.Add((MyClass)reference.Target);\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t                toDelete.Add(reference);\r\n\t            }\r\n\t        }\r\n\t \r\n\t        foreach(WeakReference reference in toDelete) instances.Remove(reference);\r\n\t \r\n\t        return realInstances;\r\n\t    }\r\n\t    #endregion\r\n\t    \r\n\t    #region instance specific\r\n\t    public int instanceIndex { get; private set; }\r\n\t    public string baseTitle { get; private set; }\r\n\t    \r\n\t    public string Title \r\n\t    {\r\n\t    \tget \r\n\t    \t{\r\n\t    \t\treturn string.Format(\"{0}{1}\", this.baseTitle, this.instanceIndex);\r\n\t    \t}\r\n\t    }\r\n\t    \r\n\t    public MyClass(string title) \r\n\t    {\r\n\t        this.baseTitle = title;\r\n\t        this.instanceIndex = instances.Count(x => ((MyClass)x.Target).baseTitle == title) + 1;\r\n\t        \t\r\n\t    \tinstances.Add(new WeakReference(this));\r\n\t    }\r\n\t    #endregion\r\n\t}\r\n\t\r\n\tclass Program\r\n\t{\r\n\t\tpublic static void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar o1 = new MyClass(\"List\");\r\n\t\t\tConsole.WriteLine(o1.Title);\r\n\t\t\t\r\n\t\t\tvar o2 = new MyClass(\"SampleList\");\r\n\t\t\tConsole.WriteLine(o2.Title);\r\n\t\t\t\r\n\t\t\tvar o3 = new MyClass(\"List\");\r\n\t\t\tConsole.WriteLine(o3.Title);\r\n\t\t\t\r\n\t\t\tvar o4 = new MyClass(\"SampleList\");\r\n\t\t\tConsole.WriteLine(o4.Title);\r\n\t\t\t\r\n\t\t\tvar o5 = new MyClass(\"List\");\r\n\t\t\tConsole.WriteLine(o5.Title);\r\n\t\t\t\r\n\t\t\tConsole.Write(\"Press any key to continue . . . \");\r\n\t\t\tConsole.ReadKey(true);\r\n\t\t}\r\n\t}\r\n}\n", "id": "2_650244_2", "owner_tier": 0.3, "score": 3.0}], "link": "https://www.codeproject.com/Questions/650233/Gather-a-collection-of-Class-instances", "question": {"content": "\r\n\t\t\t    Hey guys,\r\n  I've done a little bit of searching for this but I'm either not finding the answer or simly not understanding it.\n\r\nSeveral instance of a particular class are use in my application. All instances have A String property [Title] that needs to remain unique. To do this, I've decided to add a number Property \r\nto the class and increment it when a title is set to the same value as another instance of this\r\nClass.\r\nIn order to that, I need to count every instance of the class that contains the same value for [title_]\n\r\nPlease examine the fallowing code under HELP \n\n\r\nUltimately I'm planning on listing all of these instances for the user the choose from.\n\r\nI know there is a way to gather open forms in the application under System.windows.application.Openforms And then check form type using gettype()but I'm not sure \r\nif it's possible to do the same with class instances.\n\r\nThe Class' GetTitleValue() Procedure will be called to check for matching strings.\n\r\nThank you for all feedback.\n\nVB\n\r\nPublic Class MyClass\r\n\r\n Private Title_ As String = \"Sample List\"\r\n Private SimmilarlyNamedInstanceNumber as integer = 0\r\n\r\n    Public Property Title() As String\r\n        Set(NewTitle As String)\r\n            Dim cnt As Integer = 1\r\n\r\n\r\n               '-------------  HELP  ------------------\r\n               'Need to count the number of instances of this class\r\n               'That have the same [Title] Value (ignoring Casing)\r\n               'and set SimmilarlyNamedInstanceNumber as that value + 1\r\n               '------------ End Help ------------------\r\n\r\n\r\n            Title_ = NewTitle\r\n        End Set\r\n        Get\r\n           'Return The Name of this Instance and Unique Number for the name\r\n            Return Title_ & \" \" & SimmilarlyNamedInstanceNumber.ToString\r\n        End Get\r\n\r\n   'Used to return the un-altered title value of the class in order to check for duplicates.\r\n   Public Function GetTitleValue() as string\r\n      Return Title_\r\n   End Sub\r\nend class\n", "id": "650233", "title": "Gather a collection of Class instances", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["VB"]}, {"answers": [{"content": "\nQuote:You may not use Python lists anywhere, except in the initializer and the to_list() method. Your LinkedList class may not store a Python list in any attribute. Also, generators are not allowed in this assignment.\r\nIt's pretty clear: you cannot use a List except where he specifically allowed it. This is to ensure that you are genuinely creating and traversing links instead of storing them in a Python collection and using it's inbuilt access methods.\r\nGenerators you have not studied yet - they are coming later - so if \"your\" code includes them because you copy'n'paste an example from the internet you will fail the exercise. So if you do plagiarise (which is a really bad idea anyway) you will need to understand the code you steal in very good detail before you submit it. It'll be a lot easier to write your own code anyway because then you can't use elements you haven't met yet!\r\n", "id": "2_5377829_1", "owner_tier": 0.9, "score": 1.5}], "link": "https://www.codeproject.com/Questions/5377814/How-to-solve-this-question", "question": {"content": "\n\n\r\nWrite a class LinkedList that holds a linked list of values. Your class should be in a source file named linked_list.py, and should support the following operations:\r\n\r\nLinkedList(list) - create a LinkedList that initially holds the values in the given Python list\r\n\r\nl.to_list() - return a Python list containing the values in this LinkedList\r\n\r\nl.len() - return the number of nodes in a LinkedList\r\n\r\nl.get(n) - return the value in the nth node, where nodes are numbered from 0. You may assume that 0 <= n < l.len().\r\n\r\nl.has(x) - true if the list includes the value x\r\n\r\nl.delete(x) - delete the first occurrence (if any) of the value x\r\n\r\nl.rotate() - move the last node in the list to the head of the list; does nothing if the list is empty\r\n\r\nl.starts_with(m) - true if the elements of the LinkedList m appear at the beginning of l\r\n\r\nl.contains(m) - true if the elements of the LinkedList m appear in succession anywhere in l\r\n\r\nl.ends_with(m) - true if the elements of the LinkedList m appear in succession at the end of l\r\n\r\nImportant: You may not use Python lists anywhere, except in the initializer and the to_list() method. Your LinkedList class may not store a Python list in any attribute. Also, generators (which we will study later in Programming 1) are not allowed in this assignment.\r\n\r\nYou do not need to read any input or write any output; simply submit a file linked_list.py containing the class described above.\r\n\r\nSample usage #1:\r\n\r\n>>> l = LinkedList([2, 7, 4, 9, 18, 19, 22])\r\n>>> l.to_list()\r\n[2, 7, 4, 9, 18, 19, 22]\r\n>>> l.len()\r\n7\r\n>>> l.get(3)\r\n9\r\n>>> l.has(17)\r\nFalse\r\n>>> o = LinkedList([7])\r\n>>> o.to_list()\r\n[7]\r\n>>> o.len()\r\n1\r\n>>> e = LinkedList([])\r\n>>> e.to_list()\r\n[]\r\n>>> e.len()\r\n0\r\nSample usage #2:\r\n\r\n>>> l = LinkedList([2, 7, 6, 4])\r\n>>> l.delete(2)\r\n>>> l.delete(5)\r\n>>> l.delete(4)\r\n>>> l.to_list()\r\n[7, 6]\r\n>>> l.delete(6)\r\n>>> l.delete(7)\r\n>>> l.to_list()\r\n[]\r\n>>> l.delete(8)\r\n>>> l.to_list()\r\n[]\n\nWhat I have tried:\n\n\n\r\nclass Node:\r\n    def __init__(self, value):\r\n        self.value = value\r\n        self.next = None\r\n\r\nclass LinkedList:\r\n    def __init__(self, values):\r\n        self.head = None\r\n        self.length = 0  # Track the length of the linked list\r\n        for value in values:\r\n            self.append(value)\r\n\r\n    def append(self, value):\r\n        new_node = Node(value)\r\n        if not self.head:\r\n            self.head = new_node\r\n        else:\r\n            current = self.head\r\n            while current.next:\r\n                current = current.next\r\n            current.next = new_node\r\n        self.length += 1\r\n\r\n    def to_list(self):\r\n        result = []\r\n        current = self.head\r\n        while current:\r\n            result.append(current.value)\r\n            current = current.next\r\n        return result\r\n\r\n    def len(self):\r\n        return self.length\r\n\r\n    def get(self, n):\r\n        if n < 0 or n >= self.length:\r\n            raise IndexError(\"Index out of range\")\r\n        current = self.head\r\n        for _ in range(n):\r\n            current = current.next\r\n        return current.value\r\n\r\n    def has(self, x):\r\n        current = self.head\r\n        while current:\r\n            if current.value == x:\r\n                return True\r\n            current = current.next\r\n        return False\r\n\r\n    def delete(self, x):\r\n        if not self.head:\r\n            return\r\n        if self.head.value == x:\r\n            self.head = self.head.next\r\n            self.length -= 1\r\n            return\r\n        current = self.head\r\n        while current.next:\r\n            if current.next.value == x:\r\n                current.next = current.next.next\r\n                self.length -= 1\r\n                return\r\n            current = current.next\r\n\r\n    def rotate(self):\r\n        if not self.head or not self.head.next:\r\n            return\r\n        current = self.head\r\n        while current.next.next:\r\n            current = current.next\r\n        current.next.next = self.head\r\n        self.head = current.next\r\n        current.next = None\r\n\r\n    def starts_with(self, m):\r\n        current_l = self.head\r\n        current_m = m.head\r\n        while current_l and current_m:\r\n            if current_l.value != current_m.value:\r\n                return False\r\n            current_l = current_l.next\r\n            current_m = current_m.next\r\n        return not current_m\r\n\r\n    def contains(self, m):\r\n        current_l = self.head\r\n        while current_l:\r\n            if self.starts_with_helper(current_l, m):\r\n                return True\r\n            current_l = current_l.next\r\n        return False\r\n\r\n    def starts_with_helper(self, l, m):\r\n        current_l = l\r\n        current_m = m.head\r\n        while current_l and current_m:\r\n            if current_l.value != current_m.value:\r\n                return False\r\n            current_l = current_l.next\r\n            current_m = current_m.next\r\n        return not current_m\r\n\r\n    def ends_with(self, m):\r\n        current_l = self.head\r\n        current_m = m.head\r\n        if not current_m:\r\n            return True\r\n        while current_l.next:\r\n            current_l = current_l.next\r\n        while current_m.next:\r\n            current_m = current_m.next\r\n        while current_l and current_m:\r\n            if current_l.value != current_m.value:\r\n                return False\r\n            current_l = current_l.next\r\n            current_m = current_m.next\r\n        return not current_m\n", "id": "5377814", "title": "How to solve this question?", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["Python"]}, {"answers": [{"content": "\r\n    Hi,\n\r\nyou must declare the List as a property. To access the list from an other class you must give an instance from your List to the other class.\n\n\r\nThe classes where you must give an instance from your  List to access it:\nC#\n\r\n//FilterHistory.xaml.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class FilterHistory : ChildWindow\r\n    {\r\n        private List<filterHistory> histList;\r\n        public FilterHistory(List<filterHistory> histListLink)\r\n        {\r\n            InitializeComponent();  \r\n            histList = histListLink;\r\n            this.HistoryList.ItemsSource=histList;          \r\n        }\r\n \r\n        private void OKButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            ...\r\n        }\r\n \r\n        private void CancelButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            ...\r\n        }\r\n \r\n    }\r\n}\r\n \r\n//SaveFilterHistory.xaml.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class SaveFilterHistory : ChildWindow\r\n    {\r\n        private List<filterHistory> histList;\r\n        public SaveFilterHistory(List<filterHistory> histListLink)\r\n        {\r\n            InitializeComponent();\r\n            histList = histListLink;\r\n        }\r\n \r\n        private void OKButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            //here's where i wanna add anew filterHistory\r\n            histList.Add(new filterHistory(){FilterName=\"Filter1\", Date=new DateTime(2011, 04, 30)});\r\n            this.DialogResult = true;\r\n        }\r\n \r\n        private void CancelButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            this.DialogResult = false;\r\n        }\r\n    }\r\n}\n\r\nThe class with the List:\nC#\n\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class Screen_2 : UserControl\r\n    {\r\n        private List<filterHistory> hist {get;set;}\r\n        public Screen_2()\r\n        {\r\n            InitializeComponent();\r\n            history();\r\n        }\r\n        private void viewFilterHistory(object sender, System.Windows.RoutedEventArgs e)\r\n        {\r\n            FilterHistory history = new FilterHistory(hist);\r\n            history.Show();\r\n        }\r\n        private void saveFilterHistory(object sender, System.Windows.RoutedEventArgs e)\r\n        {\r\n            SaveFilterHistory history = new SaveFilterHistory(hist);\r\n            history.Show();\r\n        }\r\n        public void history()\r\n        {\r\n            hist = new List<filterHistory>()\r\n            {\r\n                new filterHistory(){FilterName=\"Filter1\", Date=new DateTime(2010, 12, 20)},\r\n                new filterHistory(){FilterName=\"Filter2\", Date=new DateTime(2011, 04, 20)}\r\n            };\r\n        }\r\n    }\r\n}\n\n\r\nyou must pull out the filterHistory class out of your partial class and paste it simply in the namespace or in a separate .cs file\nC#\n\r\npublic class filterHistory\r\n{\r\n   public string FilterName { get; set; }\r\n   public DateTime Date { get; set; }\r\n}\n\n\r\nHope it helps\r\n", "id": "2_189139_7", "owner_tier": 0.1, "score": 3.0}, {"content": "\r\n    Hi,,\n\r\n  Declare a property with type \"List\"\n\n\r\nfor eg:\r\npublic  List<filterhistory> List\r\n{\r\nget;set;\r\n}\n\n\r\nu can assign values into this property and access this list property from another class...\r\n", "id": "2_189142_1", "owner_tier": 0.1, "score": 5.0}], "link": "https://www.codeproject.com/Questions/189128/access-a-list-from-another-class", "question": {"content": "\r\n\t\t\t    hi, please help me with this one.\r\ni have a list in one class and i want to access that list from another class to add another value to that list.\n\n\nC++\n\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class Screen_2 : UserControl\r\n    {\r\n        public Screen_2()\r\n        {\r\n        `   InitializeComponent();\r\n        }\r\n        private void viewFilterHistory(object sender, System.Windows.RoutedEventArgs e)\r\n        {\r\n            FilterHistory history = new FilterHistory();\r\n            history.Show();\r\n        }\r\n\r\n        private void saveFilterHistory(object sender, System.Windows.RoutedEventArgs e)\r\n        {\r\n            SaveFilterHistory history = new SaveFilterHistory(hist);\r\n            history.Show();\r\n        }\r\n    }\r\n}\r\n\r\n//FilterHistory.xaml.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class FilterHistory : ChildWindow\r\n    {\r\n        private List<filterHistory> hist {get;set;}\r\n        public FilterHistory()\r\n        {\r\n            InitializeComponent();\r\n            history();\r\n        }\r\n\r\n        private void OKButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            ...\r\n        }\r\n\r\n        private void CancelButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            ...\r\n        }\r\n\r\n        public class filterHistory\r\n        {\r\n            public string FilterName { get; set; }\r\n            public DateTime Date { get; set; }\r\n        }\r\n\r\n        public void history()\r\n        {\r\n            List<filterHistory> hist = new List<filterHistory>()\r\n            {\r\n                new filterHistory(){FilterName=\"Filter1\", Date=new DateTime(2010, 12, 20)},\r\n                new filterHistory(){FilterName=\"Filter2\", Date=new DateTime(2011, 04, 20)}\r\n            };\r\n            this.HistoryList.ItemsSource=hist;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n//SaveFilterHistory.xaml.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class SaveFilterHistory : ChildWindow\r\n    {\r\n        private List<filterHistory> histList;\r\n        public SaveFilterHistory(List<filterHistory> histListLink)\r\n        {\r\n            InitializeComponent();\r\n            histList = histListLink;\r\n        }\r\n\r\n        private void OKButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            //here's where i wanna add anew filterHistory\r\n            histList.Add(new filterHistory(){FilterName=\"Filter1\", Date=new DateTime(2011, 04, 30)});\r\n            this.DialogResult = true;\r\n        }\r\n\r\n        private void CancelButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            this.DialogResult = false;\r\n        }\r\n    }\r\n}\r\n\r\n//FilterHistory.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public class filterHistory\r\n    {\r\n        public string FilterName { get; set; }\r\n        public DateTime Date { get; set; }\r\n    }\r\n}\n", "id": "189128", "title": "access a list from another class", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["C#", "MS-Access"]}, {"answers": [{"content": "\r\n    Classes;\n\nC#\n\r\npublic abstract class BaseTest\r\n{\r\n    public abstract string SaySomething();\r\n}\r\n\r\npublic class Test1 : BaseTest\r\n{\r\n    public override string SaySomething()\r\n    {\r\n        return \"Hello from Test1\";\r\n    }\r\n}\r\n\r\npublic class Test2 : BaseTest\r\n{\r\n    public override string SaySomething()\r\n    {\r\n        return \"Hello from Test2\";\r\n    }\r\n}\r\n    \r\npublic class Test3 : BaseTest\r\n{\r\n    public override string SaySomething()\r\n    {\r\n        return \"Hello from Test3\";\r\n    }\r\n}\n\r\nCode;\n\nC#\n\r\nList<BaseTest> myClasses = new List<BaseTest>();\r\n\r\nvar myTypes = AppDomain.CurrentDomain.GetAssemblies().SelectMany(a => a.GetTypes()).Where(t => t.IsSubclassOf(typeof(BaseTest)));\r\n\r\nforeach (Type t in myTypes)\r\n{\r\n    myClasses.Add((BaseTest)Activator.CreateInstance(t));\r\n}\r\n\r\nforeach (BaseTest bt in myClasses)\r\n{\r\n    Console.WriteLine(\"Type is \" + bt.GetType().FullName);\r\n    Console.WriteLine(bt.SaySomething());\r\n}\n\r\nOutput\n\n \n\r\nType is ConsoleApplication1.Test1\r\nHello from Test1\r\nType is ConsoleApplication1.Test2\r\nHello from Test2\r\nType is ConsoleApplication1.Test3\r\nHello from Test3\n", "id": "2_1122026_1", "owner_tier": 0.5, "score": 2.0}, {"content": "\r\n    In addition to solution 1 by F-ES Sitecore[^], please read this:\nInheritance (C# Programming Guide)[^]\nPolymorphism (C# Programming Guide)[^]\nAbstract and Sealed Classes and Class Members (C# Programming Guide)[^]\nHow to: Define Abstract Properties (C# Programming Guide)[^].\r\n", "id": "2_1122136_1", "owner_tier": 0.5, "score": 0}], "link": "https://www.codeproject.com/Questions/1122007/Generate-list-of-objects-from-derived-classes-at-r", "question": {"content": "\nBACKGROUND\n\r\nI have a class called \"Tests.cs\" which contains an abstract base class called \"Test\" and then I have a bunch more classes written which all derive from Test.\n\r\nAt runtime, I want to be able to choose instances of these derived classes and add them to a list which I then save to disk for recall at another time.\n\nADVICE\n\r\nThe obvious way to do this is to hard-code one instance of each Test class and add it to a master list, so that at run-time I can generate a table from this list which the user can then choose from to make their custom list of test objects that they will save to disk.\n\r\nThis is an acceptable solution (it works) but my expectation is that new test classes will be developed during the product's life and in order for this new software to be available for use in the program I will have to remember to add an instance of it to the master list each time.\r\nI am wondering if there is some way of generating a list of the derived test classes at run-time which is not reliant upon a hard-coded list of class instances.\n\nWhat I have tried:\n\r\nI've tried creating a master list containing one instance of each test class which is read from at run-time.  This works but I would like to understand if there are better ways to go about it.\r\n\t\t    ", "id": "1122007", "title": "Generate list of objects from derived classes at run-time", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["C#"]}, {"answers": [{"content": "\r\n    From your code sample, it is apparent that you can use this list through the instance of A, because you made it an instance field of this class and it is public. In this respect, the problem solved.\n\r\nBoth things are no good: 1) it's bad to make a field non-private; you should better use the property; 2) it's not good to provide more access then requires, so, if you use some class and member in a different type of the same assembly, use internal instead of public.\n\n\u2014SA\n", "id": "2_543926_1", "owner_tier": 0.9, "score": 0}, {"content": "\r\n    You need to make your list a DependencyProperty[^] most likely. I have only knowledge of WPF, not Silverlight. But I can tell you that an ObservableCollection<t></t>[^] should work for objects. For ObservableCollection<string></string>, it's more difficult because string objects doesn't implement INotifyPropertyChanged. You would need a wrapper around the string object.\n\nC#\n\r\npublic class MyClass\r\n{\r\n  public static DependencyProperty MyListProperty = DependencyProperty.register(\"MyList\", typeof(ObservableCollection<object>, typeof(Myclass));\r\n\r\n  public ObservableCollection<object> MyList\r\n  {\r\n    get { return (ObservableCollection<object>)this.GetValue(MyListProperty); }\r\n    set { this.SetValue(MyListProperty, value); }\r\n  }\r\n}</object></object>\n", "id": "2_543103_1", "owner_tier": 0.1, "score": 1.0}], "link": "https://www.codeproject.com/Questions/542811/accesspluslistplusofplusoneplusclassplusfromplusan", "question": {"content": "\r\n\t\t\t    Hi,\n\r\nI have a member list in my silverlight page class, I get it populated in the from the database in the completed event. Now I have created another class and wants to access this list from there. I have tried making it a property but it returns null.\r\nCan anyone please help.\n\r\nThanks.\nC#\n\r\nnamespace Page\r\n     Class A\r\n     {\r\n         public List _lst<string>;\r\n\r\n         private Populate()\r\n         {\r\n            _lst = GetDataFromDB();\r\n         }\r\n     }\r\n\r\n     Class B:IValueConverter\r\n     {\r\n          //Now here I want to access the data of _lst, cannot make a db call from here.\r\n     }\n", "id": "542811", "title": "access list of one class from another class", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["C#", ".NET", "Silverlight", "C#4.0", ".NET4", "OOP"]}, {"answers": [{"content": "\r\n    There is no difference in the created instance - that is the right hand side of the equals - it's the variable on the left that is different. Because the variable is reference to the interface rather than the concrete class, you can only compile statements that use the interface properties, methods, and fields - you cannot use any methods with are specific to the List<T> class despite the instance the variable actually refers to being a concrete List<T> object.\r\nThis is because as far as the compiler is concerned, the variable may contain any class that implements the IList interface, and not all of them will be List class instances.\n\r\nIt's like saying a Car is a Vehicle:\nC#\n\r\nVehicle v = new Car(\"Ford\", \"Mustang\");When you use the Vehicle next time, you can't even depend on the number of wheels, because I could also say:\nC#\n\r\nv = new Motorcycle(\"Yamaha\", \"R1\");\r\nIf I say:\nC#\n\r\nCar c = new Car(\"Ford\", \"Fiesta\");Then I can depend on the wheel count, because the compiler will complain if I try to say:\nC#\n\r\nc = new Motorcycle(\"Honda\", \"Fireblade\");Because it knows that a Motorcycle is not a Car.\r\n", "id": "2_739822_1", "owner_tier": 0.9, "score": 5.0}, {"content": "\r\n    Nice Explanation by Lee\n\nThere are two rules I follow:\n\r\n    Accept the most basic type that will work\r\n    Return the richest type your user will need\n\r\nSo when writing a function or method that takes a collection, write it not to take a List, but an IList<T>, an ICollection<T>, or IEnumerable<T>. The generic interfaces will still work even for heterogenous lists because System.Object can be a T too. Doing this will save you headache if you decide to use a Stack or some other data structure further down the road. If all you need to do in the function is foreach through it, IEnumerable<T> is really all you should be asking for.\n\r\nOn the other hand, when returning an object out of a function, you want to give the user the richest possible set of operations without them having to cast around. So in that case, if it's a List<T> internally, return a copy as a List<T>.\n\nReference :\nhttp://stackoverflow.com/questions/17170/when-to-use-ilist-and-when-to-use-list[^]\r\n", "id": "2_739818_3", "owner_tier": 0.3, "score": 4.0}], "link": "https://www.codeproject.com/Questions/739802/Difference-b-w-creating-the-instance-over-IList-an", "question": {"content": "\nDifference b/w creating the instance over IList and List\n\nEx :: \n\n \n\r\nIList<Customer> objIlistCust = new List<Customer>();  \r\nList<Customer> objListCustomer = new List<Customer>();\n", "id": "739802", "title": "Difference b/w creating the instance over IList and List", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["C#", "ASP.NET"]}, {"answers": [{"content": "\nPython\n\r\ndef __init__(self,dept):\r\n    self.department = dept\r\n\r\n__budget = 1000\r\n\r\n#------------ In java --------------#\r\n#Employee[] emp_obj = new Employee[6]\r\n#counter=0\r\n#-----------------------------------#\r\n\r\nempnames = []\r\n\r\nYou have defined __budget and empnames as class variables[^], so they are shared by all instances of the class. You should define them inside the __init__ function instead:\nPython\n\r\ndef __init__(self, dept):\r\n    self.department = dept\r\n    self.empnames = []\r\n    self. __budget = 1000\n", "id": "2_1230557_1", "owner_tier": 0.1, "score": 3.0}, {"content": "\r\n    Try this:\nPython\n\r\nclass Employee:\r\n    def __init__(self,emp_name,emp_grade):\r\n        self.emp_name = emp_name\r\n        self.emp_grade = emp_grade\r\n\r\n    def emp_info(self):\r\n        return self.emp_name + \"(\" + str(self.emp_grade) + \")\"\r\n\r\nclass Department:\r\n\r\n    def __init__(self,dept):\r\n        self.department = dept\r\n        self.__budget = 1000\r\n        self.employees = []\r\n        \r\n    def addEmployee(self, employee):\r\n\r\n        if employee.emp_grade >= 5:\r\n            self.__budget += 1000\r\n        else:\r\n            self.__budget += 500\r\n\r\n        self.employees.append(employee)\r\n\r\n    def describe(self):\r\n        print(\"Dept Name :\", self.department)\r\n        print(\"Budget :\", self.__budget)\r\n\r\n        #-----------------------\r\n\r\n        print(\"\\nEmployees :\")\r\n        for i in self.employees:\r\n            print(\"    \", i.emp_info())\r\n\r\n\r\n#-----------------------------------\r\n\r\nit_dep = Department(\"IT\")\r\nit_dep.addEmployee(Employee(\"john\",3))\r\nit_dep.addEmployee(Employee(\"Krishna\",4))\r\nit_dep.addEmployee(Employee(\"Pawan\",5))\r\n\r\nsales_dep = Department(\"Sales\")\r\nsales_dep.addEmployee(Employee(\"Rahim\",6))\r\nsales_dep.addEmployee(Employee(\"Jessy\",7))\r\nsales_dep.addEmployee(Employee(\"Charan\",2))\r\n\r\nit_dep.describe()\r\nprint(\"\\n\\n\")\r\nsales_dep.describe()\n", "id": "2_1230567_3", "owner_tier": 0.7, "score": 3.0}], "link": "https://www.codeproject.com/Questions/1230537/How-to-store-objects-in-a-list-of-class-type", "question": {"content": "\r\n\t\t\t    I am having problem storing class objects in a list(of class type).\n\r\nIn the below code, i get employee details(name and grade) of all.. instead of the called object.\n\r\nI am looking for python alternative to 'Employee[] emp_obj = new Employee[6]' of java.\n\n\n\r\nExpected o/p :\n \n\r\n#(when it_dep.describe is called, it should print as below )\r\n\r\n# Dept Name : IT\r\n# Budget : 3000\r\n# Employees : john(3),krishna(4),pawan(5)\r\n\r\n#(when sales_dep.describe is called, it should print as below)\r\n\r\n# Dept Name : Sales\r\n# Budget : 3500\r\n# Employees : Rahim(6),Jessy(7),Charan(2)\n\nWhat I have tried:\n\nPython\n\r\nclass Employee:\r\n    def __init__(self,emp_name,emp_grade):\r\n        self.emp_name = emp_name\r\n        self.emp_grade = emp_grade\r\n\r\n    def emp_info(self):\r\n        return self.emp_name + \"(\" + str(self.emp_grade) + \")\"\r\n\r\nclass Department:\r\n\r\n    def __init__(self,dept):\r\n        self.department = dept\r\n\r\n    __budget = 1000\r\n\r\n    #------------ In java --------------#\r\n    #Employee[] emp_obj = new Employee[6]\r\n    #counter=0\r\n    #-----------------------------------#\r\n\r\n    empnames = []\r\n    def addEmployee(self, emp_details):\r\n\r\n        if emp_details.emp_grade >= 5:\r\n            self.__budget += 1000\r\n        else:\r\n            self.__budget += 500\r\n\r\n        employee_name_grade = emp_details.emp_info()\r\n        self.empnames.append(employee_name_grade + \",\")\r\n\r\n        # self.empgrades.append(emp_details.emp_grade)\r\n        # self.name_and_grade = self.empnames + self.empgrades\r\n\r\n#------------------------ Java way of storing emp class objects --------#\r\n        #emp_obj[counter] = emp_details\r\n        #counter += 1\r\n#-----------------------------------------------------------------------#\r\n\r\n    def describe(self):\r\n        temp = \"Dept Name : \" + self.department + \" \\n Budget : \" + str(self.__budget) + \"\\n Employees : \"\r\n\r\n        #-----------------------\r\n\r\n        for i in self.empnames:\r\n            temp += str(i) + \"\"\r\n        print(temp)\r\n\r\nemp1 = Employee(\"john\",3)\r\nemp2 = Employee(\"Krishna\",4)\r\nemp3 = Employee(\"Rahim\",6)\r\nemp4 = Employee(\"Jessy\",7)\r\nemp5 = Employee(\"Charan\",2)\r\nemp6 = Employee(\"Pawan\",5)\r\n\r\n#-----------------------------------\r\n\r\nit_dep = Department(\"IT\")\r\nsales_dep = Department(\"Sales\")\r\n\r\n#-----------------------------------\r\n\r\nit_dep.addEmployee(emp1)\r\nit_dep.addEmployee(emp2)\r\nit_dep.addEmployee(emp6)\r\n\r\nsales_dep.addEmployee(emp3)\r\nsales_dep.addEmployee(emp4)\r\nsales_dep.addEmployee(emp5)\r\n\r\nit_dep.describe()\r\nsales_dep.describe()\n", "id": "1230537", "title": "How to store objects in a list of class type", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["Python"]}, {"answers": [{"content": "\r\n    YOu may use reflection for the purpose, see [^].\r\n :)\r\n", "id": "2_61716_1", "owner_tier": 0.5, "score": 3.0}, {"content": "\r\n    You can use reflection to do this.\r\n", "id": "2_61717_1", "owner_tier": 0.7, "score": 4.0}, {"content": "\r\n    Given that you're trying to save an object's properties to a database, you may want to look at an ORM tool like Linq2SQL or NHibernate instead.  I don't know your situation, so those tools may be overkill.  If so, just use reflection as the other responses have suggested.\n\r\nObject/Relational Mapper (ORM) tools do exactly the type of thing you are trying to do.  They take your classes and map them to your database entities.  ORMs handle more than just your simple property -> database column example.  They generally can handle relationships, lazy or eager loading, and advanced queries.\n\r\nLinq to SQL (also known as Linq2SQL) is built-in with the .Net 3.5 framework and allows you to use Linq queries against the database instead of straight SQL.  You also get to use a drag-and-drop designer in Visual Studio to create the mappings between the database schema and your classes.\n\r\nNHibernate is a free open source ORM tool you can find at https://www.nhibernate.org/[^].  It's mature and very powerful, but definitely has a steeper learning curve than Linq2SQL.  There are many ways to do the mappings with NHibernate.  You can chose between xml files, a fluent interface, or attributes applied to your classes.  Queries can be make using the NHibernate criteria api, HQL (similar to SQL), or even Linq.\n\r\nNaturally, there is far more to any ORM than what I can explain in a quick answer, so I recommend you Google ORM, Linq2SQL/Linq to SQL, and NHibernate for more information.\r\n", "id": "2_61719_2", "owner_tier": 0.1, "score": 2.0}], "link": "https://www.codeproject.com/Questions/61715/How-to-extract-all-members-of-a-class", "question": {"content": "\r\n\t\t\t    Hi,\r\nI need to know how I can extract all members of a class. I have a class and I have a function whose duty is saving a all members of some class variables(from the same class type) in a database. I know what is that class; but I don't want to update the function whenever I change the class.\n\r\nFor example this is my class:\n\n\r\npublic class user\r\n{\r\n     public string username= \"\";\r\n     public string password= \"\";\r\n     public bool KeepSignedIn= false;\r\n     public int TryNumber= 3;\r\n}\n\r\nAnd this is my function:\n\n\r\nvoid SaveInDatabase(params object[] classes_to_be_saved)\r\n{\r\n    // ????\r\n    // ???? What should I write here to extract class members?\r\n    // ???? (I have no problem with database. My problem in the class)\r\n}\n\r\nAnd my implemented codes:\n\n\r\nuser A= new user();\r\nuser B= new user();\r\nuser C= new user();\r\n\r\nA.username=\"Alex\";\r\nA.password=\"ozon#74\";\r\n\r\nB.username=\"manfered\";\r\nB.password=\"zetaRx1388\";\r\nB.KeepSignedIn= true;\r\nB.TryNumber=5;\r\n\r\nC.username=\"perla\";\r\nC.password=\"anathema\";\r\n\r\nSaveInDatabase(A,B,C)\n\r\nAnd the result will be:\n\nusernamepasswordKeepSignedInTryNumber Alex ozon#74 false 3 manfered zetaRx1388 true 5 perla anathema false 3\n\n\r\nWhen I add another member to this class and call the function, the function adds another column to the result automatically(without updating the function regarding to that member).\n\nCPallini wrote:YOu may use reflection for the purpose, see [^].\r\nThanks very much.\r\nThis link was so useful:\r\nhttp://msdn.microsoft.com/en-us/library/system.reflection.fieldinfo(VS.80).aspx\r\nIt solved my problem.\r\n\t\t    ", "id": "61715", "title": "How to extract all members of a class", "traffic_rate": 0}, "saved_time": 1721102306, "source": "codeproject", "tags": ["C#"]}, {"answers": [{"content": "You don't need to import ANYTHING! Just use \"self\". Here's how you do this It's this simple. No modules or libraries imported", "id": 56849063, "owner_tier": 0.3, "score": 0.9999999997058824}], "link": "https://stackoverflow.com/questions/328851/printing-all-instances-of-a-class", "question": {"content": "With a class in Python, how do I define a function to print every single instance of the class in a format defined in the function?", "id": 328851, "title": "Printing all instances of a class", "traffic_rate": 21}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python", "class"]}, {"answers": [{"content": "There is no way to define such behavior in a class, because the class assigns a value to a variable after instantiation. There is no way to get the name of the variable during class instantiation, because the variable does not exist yet", "id": 70912592, "owner_tier": 0.1, "score": -1.0000000000000002e-08}, {"content": "you could do the following, if I got you right : Proposal You must copy the global variable dictionary, because otherwise i will be changed with the first instantiation in the for-loop: Result:", "id": 70912502, "owner_tier": 0.3, "score": 0.9999999900000001}], "link": "https://stackoverflow.com/questions/70912343/how-to-print-all-the-instances-of-a-class-in-python", "question": {"content": "I want to get all the instances created for a class.\nIs there any way to get the instances without importing any module ? I tried this way to append self in a class attribute. Output I expect it to print foo,bar,star.\nIs there any way to get it in class without any module?", "id": 70912343, "title": "How to print all the instances of a class in python?", "traffic_rate": 1698}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python", "class", "oop", "attributes", "instance"]}, {"answers": [], "link": "https://stackoverflow.com/questions/69051621/getting-all-instances-of-a-specific-type-within-a-class", "question": {"content": "Is there a way to get a list or return all the instances of a class within a class in python? I've already done some research into it and all the answers that I've seen assume the instances are global variables, not part of an existing class. For example, can I find all instances of Bar that are instantiated within the class Foo below? I want to be able to get mymsg1 and mymsg2 because they are Bar objects, but I don't want any of the other attributes or methods.", "id": 69051621, "title": "Getting all instances of a specific type within a class", "traffic_rate": 96}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python", "class"]}, {"answers": [], "link": "https://stackoverflow.com/questions/61188218/how-to-get-all-instances-of-a-given-class-in-another-module", "question": {"content": "So I'm not sure if this question was answered elsewhere but I couldn't find any viable solution specifically relevant to this case as they were either how to access the instances in the same file (which works fine) or using reload() (which didn't work). I've got two python files, module1.py and module2.py. In module1.py there's a class with a bunch of instances that I need to access from module2.\nI append each instance to a list (as a class variable) on instantiation but when importing module1, the instances haven't been instantiated so this list is empty. This means I can access this list of instances in module1 but in module2 it is empty. module1.py module2.py So how can I access these instances which are created in module1 from module2?", "id": 61188218, "title": "How to get all instances of a given class in another module", "traffic_rate": 262}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python", "oop"]}, {"answers": [], "link": "https://stackoverflow.com/questions/21149708/how-to-get-all-instances-of-a-certain-class-in-python", "question": {"content": "Someone asked a similar one [question]:Printing all instances of a class. \nWhile I am less concerned about printing them, I'd rather to know how many instances are currently \"live\". \nThe reason for this instance capture is more like a setting up a scheduled job, every hour check these \"live\" unprocessed instances and enrich the data. After that, either a flag in this instance is set or just delete this instance. \nTorsten Marek 's answer in [question]:Printing all instances of a class using weakrefs need a call to the base class constructor for every class of this type, is it possible to automate this? Or we can get all instances with some other methods?", "id": 21149708, "title": "How to get all instances of a certain class in python?", "traffic_rate": 3}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python", "class"]}, {"answers": [], "link": "https://stackoverflow.com/questions/57033104/return-all-instances-of-a-class-that-meet-a-criterion", "question": {"content": "I'm completely new to Python so I may not be asking this in the right way and I have tried to find an answer (unsuccessfully, obviously). I am trying to set up a class and then to find all instances of the class that meet a certain criterion. I don't know if a class is the right way to go about this so open to all advice (even if it takes me away from classes). For a simple example (see code below) if I wanted to find all Employee's who are over 30 would the right approach be to make a class method? In reality you'd have DOB rather than age but for simplicity I've gone with age. I'd also want some sort of variable so that I could change 30 to let's say 50. What is the \"right\" way or efficient way to achieve this? For this example above for ages above 30 I'd want the e1 and e3 instances. Any help would be appreciated!", "id": 57033104, "title": "Return all instances of a class that meet a criterion", "traffic_rate": 147}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python"]}, {"answers": [], "link": "https://stackoverflow.com/questions/55544878/how-to-easily-find-a-class-instance-in-a-list-with-a-given-class-attribute", "question": {"content": "I'm a newbie. I am wondering if there is a way to easily find an instance of a class in a list with a given attribute. (Python) basically the set up is as follows: So a is a list with two instances of the class idk. How do I easily find the elements of a with name \"x\"? I am looking for something like:  or ", "id": 55544878, "title": "how to easily find a class instance in a list with a given class attribute?", "traffic_rate": 938}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python", "reference", "class-attributes"]}, {"answers": [], "link": "https://stackoverflow.com/questions/54000173/how-to-get-all-instances-of-a-class", "question": {"content": "I am learning Python as a beginner and I'd like to create a class Person. In the constructor I would want to put every instance I create into a set called 'instances'. Then I'd like the instances() method to return all the instances. How can I do this?", "id": 54000173, "title": "How to get all instances of a class", "traffic_rate": 8717}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python", "set", "instance"]}, {"answers": [], "link": "https://stackoverflow.com/questions/30298350/listing-all-instance-of-a-class", "question": {"content": "I wrote a Python module, with several classes that inherit from a single class called MasterBlock.\nI want to import this module in a script, create several instances of these classes, and then get a list of all the existing instances of all the childrens of this MasterBlock class. I found some solutions with vars()['Blocks.MasterBlock'].__subclasses__() but as the instances I have are child of child of MasterBlock, it doesn't work. Here is some example code: Module: Script: Th ultimate goal is to be able to do:", "id": 30298350, "title": "Listing all instance of a class", "traffic_rate": 427}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python", "class", "python-2.7"]}, {"answers": [], "link": "https://stackoverflow.com/questions/72436380/getting-list-of-all-instances-of-given-class", "question": {"content": "Is it possible in python to get a list of all instances of given class (just like it's done by .get_lines() method in the code below) and by reffering to specific elements of that list (like it's done in twelfth line of below code by reffering to element with index 0 from the list called \"lines\") is it possible to modify these element? Considering that every element of that list will be an instance of some class is it possible to - for example - change value of one of the instance unique variables or create new one and give it some value? For sake of clarity I'll add that I don't mean classes from framework's or libraries like matplotlib but classes that are written by me - from scratch. I'm attaching figures that were generated by below code as a proof that it works fine. \n", "id": 72436380, "title": "Getting list of all instances of given class", "traffic_rate": 84}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "stackoverflow", "tags": ["python", "class", "oop"]}, {"answers": [{"content": "Could you show us some code? The better we understand what you are trying to accomplish, the better advice or pointers we can give you.", "id": "h68nw15", "owner_tier": 0.1, "score": 0.999999995}, {"content": "i think fundamentally u are misunderstanding data. u need to demystify it.\n\na string from a nasa satellite is the same as a string from your tic tac toe game or the input function.\n\npoint is there is nothing strange about a string no matter if it comes form a file, input function or a database. its still a string.\n\n&#x200B;\n\nthen a class is nothing more than a fancy way to describe something.. like a template.\n\ninstances of the class are the objects.\n\nand these objects are initialized with attributes that have different values.\n\nsome of them are strings that come from this database.\n\n&#x200B;\n\nthey could also come from a file or input function or just something else that returns or gets solved into a string.\n\n&#x200B;\n\nclass is the template.. instance of the class is the actual object created following the template.\n\nex:\n\nfood recipe.. vs actual food.actual food is the instance of the class..\n\nthe food recipe is the class .\n\n&#x200B;\n\nand almost all 'objects' in python are of a class. this is why we can do 'methods'.\n\nso if u don't know how to store class objects.. u were doing it all along.\n\n&#x200B;\n\n&#x200B;\n\nwhat is left is to figure out the actual interactions with the database.. but that's just an API call like any other API call.\n\nu can literally use the libs like an api.", "id": "h68cjrq", "owner_tier": 0.3, "score": -5e-09}], "link": "https://www.reddit.com/r/learnpython/comments/opyw9c/storing_class_instances/", "question": {"content": "Hello everyone,\n\nSay I have a class named \"Employees\", and a database (created using sqlite if it is important) that stores the employees in a company. How can I create an instance for each employee in the database?\n\nMy first thought is to iterate through the entire database and create an instance for everyone, which works. However, there is one thing I don't understand. How do I store these instances?\n\nI am relatively new to classes, and in every example I see, the person does something like\n\n    emp_1 = Employees(foo, bar)\n\nI obviously can't write a new variable for each one manually. I thought of creating an empty list first, and doing something like:\n\n    for employee in database:\n        list.append(Class(employee))\n\nso that every instance is stored in the list. I maay be wrong, but I feel like this is a dangerous way of doing things. (I am literally putting all my eggs in one basket.) \n\nI should add that I have googled this already and found some answers, but I didn't understand many of them, and the ones I understood didn't really satisfy me.\n\nMy second question is, and perhaps this shows a huge misunderstanding of programming on my part,  suppose I do indeed store all instances in a list as I said above. Now, any time I run this code, it recreates an empty list, creates an instance for each employee from scratch, and adds it to the list. If the database was massive, this would take a while every time and that is not desirable. Is there a way to create a list once, and then use it any time I want without going through the whole process of creating it again?\n\nThis might be a very different process, but to clarify, here's an example: When I created a database in sqlite, I used the command\n\n    execute(\"CREATE TABLE Employees ...\")\n\nonce, and after that the table was created. I then deleted that code and the database is still there. I don't need to create the table and insert everything again at the start of my program each time.\n\nThank you for your replies.", "id": "opyw9c", "title": "Storing Class Instances", "traffic_rate": 153.13037037037037}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "reddit"}, {"answers": [{"content": "#Please ensure that:\n\n+ Your *code* is *properly formatted* as *code block* - see the *sidebar* (About on mobile) for instructions\n+ You include *any and all error messages* in full - best also formatted as code block\n+ You ask *clear questions*\n+ You *demonstrate effort* in solving your question/problem - plain posting your assignments is forbidden (and such posts will be removed) as is asking for or giving solutions.\n    \n\n**If any of the above points is not met, your post can and will be removed without further warning.**\n\nCode is to be formatted as **code block** (*old reddit/markdown editor:* empty line before the code, each code line indented by 4 spaces, *new reddit:* https://imgur.com/a/fgoFFis) \nor linked via an external *code hoster*, like *pastebin.com*, *github gist*, *github*, *bitbucket*, *gitlab*, etc. \n\nPlease, **do not use** triple backticks (\\`\\`\\`) as they will only render properly on *new reddit*, not on *old reddit*.  \n\nCode blocks look like this:\n\n    public class HelloWorld {\n\n        public static void main(String[] args) {\n            System.out.println(\"Hello World!\");\n        }\n    }\n\nYou do not need to repost unless your post has been removed by a moderator. Just use the *edit function* of reddit to make sure your post complies with the above. \n\nIf your post has remained in violation of these rules for a prolonged period of time (at least an hour), a moderator may remove it at their discretion. In this case, they will comment with an explanation on why it has been removed, and you will be required to resubmit the entire post following the proper procedures.\n\n#To potential helpers\n\nPlease, **do not help** if any of the above points are not met, rather *report* the post. We are trying to improve the quality of posts here. \nIn helping people who can't be bothered to comply with the above points, you are doing the community a disservice. \n\n\n*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/learnjava) if you have any questions or concerns.*", "id": "hwzjoe3", "owner_tier": 0.1, "score": 0.14285714142857142}, {"content": "The main program should keep track of your instances in a single list of an interface you define. This allows you to easily add more classes you might want to support and ensure those classes all have the specific method by having a loose coupling.\n\nThis interface should have all methods all of your classes share so in your case at least a method that returns the instance data as string. So you're implicitly trusting the interface to force all concrete classes to have specific methods you want to call. This enables flexibility as you program towards behaviour (defined in interfaces) instead of relying on concrete information. See [here](https://softwareengineering.stackexchange.com/questions/232359/understanding-programming-to-an-interface/232366#232366).\n\nIn turn you can simply add any of your classes to the list and you're able to call methods from your interface.\n\nThank you!", "id": "hx0k7gl", "owner_tier": 0.3, "score": 0.9999999985714286}, {"content": "I'd go with option 1, as using static collections may lead to memory leaks. To make it less coupled, create a new class like `ObjectsStorage` that would contain a `HashMap<Class<?>, List<?>>`. To add a new object, simply do `computeIfAbsent` and create empty `ArrayList` in the default value supplier, then add new value to the list. To get all objects, you will need to `getOrDefault` by class and then cast the list to whatever object type it contains like:\n\n```\nList<T> findAllObjects(Class<T> targetClass) {\n    return Collections.unmodifiableList((List<T>) classToAllObjects.getOrDefault(targetClass, Collections.emptyList()));\n}\n```\n\n`unmodifiableList` ensures no new entries may be added from outside our storage class by accident. Also, you may need to add `@SuppressWarnings(\"unchecked\")` because even though we _know_ the list is of correct type, the compiler cannot guarantee it.\n\nThis sounds really good.  Thank you", "id": "hx0l3v2", "owner_tier": 0.7, "score": 0.57142857}, {"content": "I would split the functionality into two:\n\n1. The original class of the instances you want to create. Let's call it `Foo`.\n2. The storage for those instances. Let's call it `FooStorage`.\n\nAt the initialization of your program, create one instance of `FooStorage` \\- if you want you can even make `FooStorage` a singleton, but that's not really necessary. Inside `FooStorage` keep a set or list of `Foo` and a method that will create a `Foo` instance, add it to the set/list inside the storage, and also return a reference to it. Now, instead of calling the `Foo` constructor, you will call this method. It will create the instances of `Foo` but in the same time you will be able to keep track of all of them, because you will have references to them in the storage.\n\nSomething like:\n\n    public record Foo (...) { ... }\n    \n    public class FooStorage {\n      private final Set<Foo> foos = new HashSet<Foo>();\n    \n      public FooStorage() { ... }\n    \n      // use `createFoo(...)` instead of `new Foo(...)`\n      public Foo createFoo(...) {\n        final var foo = new Foo(...);\n        foos.add(foo);\n        return foo;\n      }\n    \n      public Set<Foo> getFoos() {\n        return foos;\n      }\n    \n    \n     // here put other methods that use `foos`\n    }\n    \n    final var fooStorage = new FooStorage();\n    final var foo1 = fooStorage.createFoo(...);\n    final var foo2 = fooStorage.createFoo(...);\n    final var foos = fooStorage.getFoos(); // contains both foos\n\nGreat idea. Thanks", "id": "hx18fno", "owner_tier": 0.5, "score": 0.4285714271428572}, {"content": "As a junior programmer in Java, I think both of your options are very convoluted.\n\nLet's say the Class the user can make is called Input, and the user makes three instances of that class, a, b and c.\n\nI would add these three instances in an Array like you say, and then simply loop over them:\n\n    for (Input input : inputArray) {\n        System.out.println(input.attribute1);\n    }\n\nYou can obviously pack this into a function that you either put in the class where you're asking for input, or you can put it as a function in the Input class to keep it tidy.", "id": "hx0e0yp", "owner_tier": 0.5, "score": -1.4285714285714286e-09}, {"content": "My preferred option would be option one if I only access them within the CLI class and option two if I need access to all instances from within each instance. Since you're just printing out an attribute of all instances here, option one makes the most sense to me", "id": "hx0hyrj", "owner_tier": 0.1, "score": 0.14285714142857142}], "link": "https://www.reddit.com/r/learnjava/comments/sssc0p/best_practice_for_storing_all_instances_of_a_class/", "question": {"content": "I have a fair amount of programming experience but very little in Java/OOP so I apologize in advance if some of my terminology is wrong.  I'm working on a project without a GUI or database, just a simple infinite CLI that waits for user input.  That is to say, I'm trying to keep this very simple and not looking for any suggestions of frameworks or external solutions.  I'm doing this to learn pure Java.\n\nThe user can use the command prompt to create a number of classes, we'll say the classes are called A, B, and C.  I would like to be able to print identifying attributes from all instances of those classes on demand.\n\nWhich of these methods is preferred in your opinion?\n\n1. In the class that runs the infinite CLI loop, create an array for each different type of class (or a hash map that stores the type of class as a key and the array of instances as a value).  Any time a new class is instantiated, add it to its respective array.  Then I could just have a method in this main class that loops through whichever array I want to display.\n2. In each class, maybe have a static attribute that is an array called all\\_instances and automatically add any new instantiated class to that array.  Then there could be a static method that could loop through all the instances and print out whichever identifying  attribute I wanted.\n\nMy instinct is to go with Option number 2, but I'm questioning it because of my limited OOP history.  Also open to any 3rd option if there is something better.", "id": "sssc0p", "title": "Best practice for storing all instances of a class?", "traffic_rate": 31.737494916632777}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "reddit"}, {"answers": [{"content": "This is a common pitfall in Python.  Don't put mutable objects (like lists) in default arguments, as here:\n\n     def __init__(self, hit, cap, roster = [], ...\n\nInstead you should do this\n\n     def __init__(self, hit, cap, roster = None, ...\n         if roster is None:\n             roster = []\n\nThis is because default arguments are evaluated just once, and so all instances of that class are using that single list.  Appending to one shows up in them all.\n\nIn the second way, each instance gets its own list.\n\n^ right he is.\n\nTo elaborate a bit, assigning one object to a variable does not make copies of that object: it creates a variable which tags that position in memory for quick access. Since the list in the default value is only made once, it is simply tagged in all instances, similar to this example:\n\n    a = [5]\n    b = a\n    a[0] = 7\n    b\n    >> [7]\n\nThe `a` list has been changed, and since `b` points to the same list, they both reflect that change.\n\nI changed the Class to:\n\n    class Team:\n\t    def __init__(self, hit, cap, roster = None, hit_roster = None, pitch_roster = None, \n\tneeds = None, money= None):\n\t\t\n\t\t    self.hit = hit\n\t\t    self.roster = roster\n\t\t    self.hit_roster = hit_roster\n\t\t    self.pitch_roster = pitch_roster\n\t\t    self.cap = cap\n\t\t    self.needs = needs\n\t\t    self.money = money\n\t\t    if roster is None:\n\t\t\t    roster = []\n\t\t    if hit_roster is None:\n\t\t\t    hit_roster = []\n\t\t    if pitch_roster is None:\n\t\t\t    pitch_roster = []\n\t\t    if needs is None:\n\t\t\t    needs = ['C', '1B', '2B', '3B','SS','OF', 'U', 'P']\n\t\t    if money is None:\n\t\t\t    money = 250\n\nBut all of the team.needs are now None and have not changed to the needs in the if statement.\n\nYou're setting `self.needs` equal to `needs` when `needs` is still `None`. When you later possibly change the value of `needs` it has no affect on `self.needs`. The simplest solution is to change the order of the assignments:\n\n    class Team:\n        def __init__(self, hit, cap, needs = None, ...):\n            if needs is None:\n                needs = ['C', '1B', '2B', '3B','SS','OF', 'U', 'P']\n            self.needs = needs\n            ...\n\nIs declaring needs = None and then using the If statement the best approach for this? I feel like its overly verbose.\n\nYou can use an if expression:\n\n    self.needs = ['C', '1B', '2B', '3B','SS','OF', 'U', 'P'] if needs is None else needs\n\n    self.needs = needs or ['default']\n\nThanks. I'm still learning, so just trying to understand :)\n\nIn the class parameter list when you declare needs = [] or needs = None, is this just a default value? And any user input value will overwrite it?\n\nYes. The technical term for this is \"keyword arguments\". Google that for more info.\n\n    def my_print(arg=1):\n        print(arg)\n\n    my_print() # prints 1\n    my_print(2) # prints 2\n\nThank you very much!", "id": "cpremf5", "owner_tier": 0.3, "score": 0.99999999875}, {"content": "It's almost never a good idea to number your variable names.\n\n    teams = [Team(hit=.5, cap=x/100) for x in range(21, 27)]\n\nSo i should not name the teams Team1, Team2 ...? If so what is the reason to avoid numbers in variable names? \n\nCorrect, instead you should put them in a list (as done in my post), so they are \"named\" `teams[0]`, `teams[1]`, etc. This saves duplication of code, compare your lines 31--36 to my code.\n\nThe main problem with numbers in variable names is not the fact that they are numbers, but it hides this deeper problem where you are tempted to iterate over variables that are unrelated except for having similar variable names.\n\nI see you have a variable called `team_list`. I imagine you created this like `team_list = [Team1, Team2, ...]`. Often people who do this end up posting with a question like \"How do I iterate over variables of the form `Team_` where `_` is a number 1--6?\" and then start trying to generate variable names using string formatting.\n\nSo how, in Python, do you refer to a series of things? This is exactly what a list is designed for.\nThe solution is to use a list for a sequence of items, rather than a series of sequentially-named variables. Using sequentially-named variables, Python has no idea that these variables have anything to do with each other. Anytime you want to refer to them as a group you have to type them all out. With a list, you can *either* refer to them individually (using indexing, e.g. `teams[2]`) or as a group (`teams`).\n\nNote that this is unrelated to the problem you posted about, but is up there in top 3 newbie programming mistakes, and it leads to lots and lots of confusion, so I wanted to help. In my experience the moment you understand the difference between these approaches (that containers like lists and dicts are solutions to the problems arising from organizing groups of variables based on their names)  is a moment you start to move out the beginner stage.", "id": "cprfdxm", "owner_tier": 0.3, "score": -1.2499999924031613e-09}], "link": "https://www.reddit.com/r/learnpython/comments/30dln7/iterating_over_a_list_of_class_instances_question/", "question": {"content": "I am trying to set up a system that will draft fantasy baseball players from a list (avail_hit) and place them in the Team class instance that has the highest bid. Here is the function i am using and the Class Team:\n\n    def auction():\n        player = avail_hit[1]\n        position = avail_hit[1][8]\n\t    bidders = []\n\t\n\t\n\t    for team in team_list:\n\t\t    if position in team.needs:\n\t\t\t    bidders.append(team)\n\t    high_bid = bidders[0]\n\t    for team in bidders:\n\t\t    if(team.cap * team.money) > (high_bid.cap * high_bid.money):\n\t\t\t    high_bid = team\n\t    print(high_bid.cap)\n\t    m = high_bid.money\n\t    high_bid.money = m - (high_bid.cap *high_bid.money)\n\t\t\n\t    high_bid.hit_roster.append(position)\n\t    high_bid.roster.append(player)\n\t    del avail_hit[1]\n    class Team:\n\t    def __init__(self, hit, cap, roster = [], hit_roster= [], pitch_roster = [], \n\tneeds=['C', '1B', '2B', '3B','SS','OF', 'U', 'P'], money =250):\n\t\t    self.hit = hit\n\t\t    self.roster = roster\n\t\t    self.hit_roster = hit_roster\n\t\t    self.pitch_roster = pitch_roster\n\t\t    self.cap = cap\n\t\t    self.needs = needs\n\t\t    self.money = money\n    Team1 = Team(hit=.5,cap=.21)\n    Team2 = Team(hit=.5,cap=.22)\n    Team3 = Team(hit=.5,cap=.23)\n    Team4 = Team(hit=.5,cap=.24)\n    Team5 = Team(hit=.5,cap=.25)\n    Team6 = Team(hit=.5,cap=.26)\n    \n    auction()\n\nEverything seems to be working ok until I try to append the player and the position to high_bid.roster and high_bid.hit_roster. When i print out the rosters for all teams after the append the correct play gets put on all the teams not just the team with the highest bid. \n\nI am at a loss on what to do. I have looked on google for quite awhile trying to find out if am misunderstanding how class instances work. Please let me know if you have any idea what i might be doing wrong.\n\nThanks", "id": "30dln7", "title": "Iterating over a list of class instances question", "traffic_rate": 153.13037037037037}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "reddit"}, {"answers": [{"content": "The code runs fine here: https://i.imgur.com/kXq6AhX.png\n\naltough I must add that filter has been superseded by list comprehensions, I would advise to use\n\n    filtered_list = [f for f in food_list if f.isfree()]", "id": "htkw2w8", "owner_tier": 0.7, "score": 0.9999999900000002}, {"content": "Is this really your entire code? What version of python are you using?\n\n    $ cat test.py\n    from dataclasses import dataclass\n\n    @dataclass\n    class Food:\n        name : str\n        price : int\n\n        def isfree(self):\n            return self.price == 0\n\n    food_list = [Food(name = \"curry\", price = 5), Food(name = \"sushi\", price = 0)]\n    filtered_list = filter(Food.isfree, food_list) \n    print(list(filtered_list))\n    $ python3 --version\n    Python 3.8.2\n    $ python3 test.py\n    [Food(name='sushi', price=0)]\n\nHowever it would be more proper to pass a function which would call the proper boundmethod of the instance being passed to the delegated filter function.\n\n    $cat test.py\n    from dataclasses import dataclass\n\n    @dataclass\n    class Food:\n        name : str\n        price : int\n\n        def isfree(self):\n            return self.price == 0\n\n    food_list = [Food(name = \"curry\", price = 5), Food(name = \"sushi\", price = 0)]\n    filtered_list = filter(lambda food: food.isfree(), food_list)\n    print(list(filtered_list))\n    $ python3 test.py\n    [Food(name='sushi', price=0)]", "id": "htkwram", "owner_tier": 0.5, "score": 0.9999999900000002}], "link": "https://www.reddit.com/r/learnpython/comments/s9702h/python_filter_a_list_of_class_objects_by_class/", "question": {"content": "Like ok... the title said it all. For example : I have a list filled by class name Food. The class uniqueness are defined by name and price attribute. And I create a method to check if the Food is free. the question is how do I use the method to filter the list of Food class using the free checking method of food class?   \n\n\n    @dataclass\n    class Food:\n        name : str\n        price : int\n    \n        def isfree(self):\n            return self.price == 0\n    \n    food_list = [Food(name = \"curry\", price = 5), Food(name = \"sushi\", price = 0)]\n    filtered_list = filter(Food.isfree, food_list) # got error TypeError: isfree() takes 0 positional arguments but 2 were given", "id": "s9702h", "title": "Python filter a list of class objects by class method using Filter built-in function problem", "traffic_rate": 153.13037037037037}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "reddit"}, {"answers": [{"content": "I think you're supposed to use `__str__` instead of `__repr__`:\n\n`def __str__(self):`\n\nEDIT - Probably not though, they appear to be the same thing\n\n> EDIT - Probably not though, they appear to be the same thing\n\nNo they aren't. `__str__` provides for the `str()` function and `__repr__` provides for the `repr()` function:\n\n    class Test:\n    \tdef __str__(self):\n    \t\treturn \"I'm the Test __str__ method\"\n    \t\t\n    \tdef __repr__(self):\n    \t\treturn \"I'm the Test __repr__ method\"\n    \t\t\n    t = Test()\n    print str(t) #output: I'm the Test __str__ method\n    print repr(t)#output: I'm the Test __repr__ method\n    #print calls str automagically.\n    print t #output: I'm the Test __str__ method\n\nThe idea is that \"repr(your_instance)\" should return a string that `eval()` can use to remake the class. It's a string REPResentation of the instance.\n\nIf your class does not define `__str__`, then python uses `__repr__` instead.\n\n    class Test2:\n    \tdef __repr__(self):\n    \t\treturn \"I'm the Test2 __repr__ method\"\n    \t\t\n    t = Test2()\n    print str(t)#output: I'm the Test2 __repr__ method\n    print repr(t)#output: I'm the Test2 __repr__ method\n    print t #output: I'm the Test2 __repr__ method\n\nYa it did not work. Thanks though\n\nahhhhhhhh ok I see, so while I have you, what situations do you use each for?\n\nFigured it out, you have the `__repr__` function in the wrong class, you need to put it in the group class:\n\n    class group:\n        def __init__(self,group_name):\n            self.group_name=group_name\n            self.per_loc_list=[]\n    \n        def __repr__(self):\n            return self.group_name\n\nAs a super simple example:\n\n\tclass Distance:\n\t\tdef __init__(self, value=0, unit=\"meters\"):\n\t\t\tself.value = value\n\t\t\tself.unit = unit\n\t\t\t\n\t\tdef __str__(self):\n\t\t\t'''Human string'''\n\t\t\treturn \"{} {}\".format(self.value, self.unit)\n\t\t\t\n\t\tdef __repr__(self):\n\t\t\t'''Computer string'''\n\t\t\treturn \"Distance(value={}, unit={})\".format(self.value, self.unit)\n\nThe idea here is that you can take the output of `repr(instance)` and save it to a text file or something. Then later you can recreate your instance with `eval(loaded_text)`. I've yet to see anyone actually do that, but that's the idea.\n\nTake a look at the code for `collections.namedtuple` (/usr/lib/python2.7/collections.py for me) to see this in action.\n\n\nThe repr form is for the REPL. The str form is for print.\n\nThank you! Just curious what did you read that lead you to this conclusion? I have been googling around for a couple of hours and could not find this solution. I would just like to know what I missed.\n\nok I think I understand it better now. Thanks for the explanation.\n\nYou didn't miss anything. I was googling like crazy and I was completely stumped. I decided to take a closer look at the lines where you're initiating the classes:\n\n    peter=user(\"pete\",\"name\",\"ptp\")\n    ruc=group(\"ruc\")\n    peter.add_group(ruc)\nAnd a light bulb went off, I realized the element(s) of the list were coming from `ruc=group(\"ruc\")`, which is the group class, not the user class, so it was the group class that needed to return the object as a string. The user class is just returning a list, not an object.\n\nIt makes sense now that I see the solution. Complete fog before though", "id": "d30p6j0", "owner_tier": 0.3, "score": 0.9999999993333333}, {"content": "Sorry I could not get underscore to work!!", "id": "d30p9h7", "owner_tier": 0.1, "score": -6.666666626150194e-10}, {"content": "    def __str__(self):\n        return str([g.group_name for g in self.group_list])\n\nThen call it like this:\n\n    print(peter)\n\nor \n\n    print(str(peter))", "id": "d30r456", "owner_tier": 0.7, "score": -6.666666626150194e-10}, {"content": "Why are these classes instead of basic dictionaries?\n\nI am in the beginning stages of creating a program (web app?) that will get weather data for a group of people and give the forecast of each member in a group on a graph. It will send out an email to the user for each group they have created. Maybe something could have been better but this is what I know for now. \n\nYou'll find it easier and more productive to use built-in collections and functions. Define classes later, after you know for sure they will improve your code. As you're finding, building a good class can often require writing a fair amount of code to teach it how to do all sorts of basic tasks -- display and compare at the least. And if your class only has one real method, you probably are just slowing your program down for no benefit.", "id": "d30ya90", "owner_tier": 0.5, "score": 0.13333333266666667}], "link": "https://www.reddit.com/r/learnpython/comments/4isdtr/help_with_printing_out_a_list_of_objects_from_a/", "question": {"content": "I am having an issue with showing what is actually in peter.group_list. It gives me this [<__main__.group at 0x813e80>] bit. I understand that this is location that list object is stored but I want to print out the list. I was trying to play with the repr but could not get it to work.\n\nclass user:\n    \"\"\" This will be the person creating groups. The user can create multiple\n    groups to get weather data from for ease of use. They can add people to \n    groups and delete people from their groups. They must give an eamil address\n    so they can be emailed.\"\"\"\n    \n    def __init__(self,first_name,last_name,email):\n        self.first_name=first_name\n        self.last_name=last_name\n        self.email=email\n        self.group_list=[]\n    \n    def add_group(self,group):\n        self.group_list.append(group)\n        \n    def __repr__(self):\n        return self.group_list\n        \nclass group:\n    \"\"\"this will be a group of people or locations. The goal is to have \n    different weather reports for each group.\"\"\"\n    \n    def __init__(self,group_name):\n        self.group_name=group_name\n        self.per_loc_list=[]\n    \nclass per_loc:\n     \"\"\" this will be the location of which to get weather information.\"\"\"\n    \n    def __init__(self,city,state,zip_code,first_name=None,last_name=None):\n        self.first_name=first_name\n        self.last_name=last_name\n        self.city=city\n        self.state=state\n        self.zip_code=zip_code\n        \n        \npeter=user(\"pete\",\"name\",\"ptp\")  \nruc=group(\"ruc\")  \npeter.add_group(ruc)\n\n\npeter.group_list  \nOut[94]: [<__main__.group at 0x813e80>]\n\npeter.__repr__()  \nOut[95]: [<__main__.group at 0x813e80>]  \n\nI would really like it to print out  \n[ruc]  \n\nSo where did I go wrong?", "id": "4isdtr", "title": "Help with printing out a list of objects from a class?", "traffic_rate": 153.13037037037037}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "reddit"}, {"answers": [{"content": "Perhaps this will help\n\nhttps://pypi.python.org/pypi/astdump/4.2\n> Extract information from Python modules without importing\n\nEven with this I think you're going to have a tough time getting what you want, as things can be defined in a module dynamically such that they don't exist as \"plain names\" *until the module is executed/imported*\n\n\nThanks very much for the direction, I'll certainly play around with astdump.  I am concerned that I'll run into the issue of dynamically created objects on import as you mention... will have to give that some thought.", "id": "cnbbzpv", "owner_tier": 0.3, "score": 0.399999998}, {"content": "You're probably looking for dir. On my phone right now, but I think:\n  \n    >>> import sys\n\n    >>> dir(sys.modules[modulename])\n\n\nEdit: tested it out - http://imgur.com/vxLZZlo\n\nEdit: whoops, forgot that sys.modules just gives you what is in the current interpreter namespace. So that method does require importing.\n\n\nSo, why is it important to find the  defined methods without importing? A hacky way to do it (if you have the filepath) would be to open it as a file and search for lines starting in class/def. Someone may have written it already though; just haven't seen that in my searches.\n\nIt still has to have been imported in the runtime, even if it's not imported into your own namespace.\n\nGood point, looks like the module I chose is one that is precached by the interpreter.", "id": "cnbaaie", "owner_tier": 0.3, "score": 0.599999998}, {"content": "I don't know why you can't import it - if you need to make sure it doesn't execute any code, this won't work, but if the only issue is that you only have the module name as a string / filename, try importlib or just \\_\\_import\\_\\_\n\nThe problem with importing is because Python doesn't allow you to unload a module once it's imported.  Loading every single module available in full and having them sit in memory for the entire lifetime of the application is not practical.  If I could import and then unload them that would be great, but my understanding is that Python does not allow this.  What I'm trying to do is create an environment similar to Smalltalk 'images' with a System Browser that lets you easily look through all of the modules/classes/etc available to you.\n\nWhat if you wrote an independent program that imports a module, dumps information about it into standard output, and then read it into your main program.\n\nAlso, try deleting it from sys.modules - I've seen various posts claiming that this will correctly unload pure-python modules (but not C extension modules). \n\nPerhaps you could write a script that imports a given module(s) and spits out the contents, and then call that script in a subprocess from your main program.  The script will run, import the module, give you the contents (serialized) and then the process will end (releasing the memory)\n\nEdit:  I see this was suggested above, I guess I didn't refresh\n\nThat is a very good idea!  Thank you for it!  I don't know why I hadn't considered just executing a separate instance of the interpreter and getting input back from it!  \n\nAs for unloading modules, there are several questions about it on StackOverflow with pointers to old issues raised with the Python developers and the bottom line is 'Python doesn't support unloading modules, and making it so you could unload a module would be tremendously difficult'.  All of the content I could find was specifically about pre-3 Python though.  It is possible that the way modules are handled was changed enough in 3+ to make it workable, but I wasn't able to find any specifics about it one way or the other.", "id": "cnbfznd", "owner_tier": 0.7, "score": 0.9999999980000001}, {"content": "With the ast module, you can easily traverse the source code and filter the classes.\n\n    >>> import ast\n    >>> import _ast\n    >>> tree = ast.parse(source_code)\n    >>> classes = [cls for cls in tree.body if isinstance(cls, _ast.ClassDef)]\n    >>> classes[0].name\n    SomeClass\n\nFor nested classes/functions you'd have to look into the body of those classes and functions recursively.", "id": "cnbi3m6", "owner_tier": 0.1, "score": -1.999999987845058e-09}, {"content": "If you check out the David Beazley talk about metaprogramming. Towards the end he describes some methods for hijacking/making a custom importer. [link](http://youtu.be/sPiWg5jSoZI)\n\nThat is an extremely interesting talk!  Thank you very much for pointing it out for me, I am watching it now.  I haven't done much metaprogramming beyond some simple decorators, so I'm learning a lot.", "id": "cncrc5w", "owner_tier": 0.3, "score": 0.199999998}], "link": "https://www.reddit.com/r/learnpython/comments/2r0j3j/easy_way_to_list_classesfunctions_defined_in/", "question": {"content": "It is easy to enumerate the various available modules.  Is there an easy way to take a module name and, without importing it (this is important), get a list of the classes, functions, etc defined in the module?  I'm thinking I should start looking into the compiler or ast modules, but not sure they will do what I need.  I'd appreciate even vague pointers toward where I might want to go digging.  Thanks in advance!", "id": "2r0j3j", "title": "Easy way to list classes/functions defined in module without importing it?", "traffic_rate": 153.13037037037037}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "reddit"}, {"answers": [{"content": ">The output for displaying the whole inventory does not display the desired output\n\nThat is because you have to print each item individually. At the moment you print a list. If you print the items individually by looping over it it will use the \\_\\_str\\_\\_ method that was overwritten.\n\n&#x200B;\n\n`inventory.append(ItemInventory(new_item))` this does not really make sense. Why create a ItemInventory first and then create a new one with the existing instance as parameter?\n\n&#x200B;\n\nAlso I would suggest to not put get\\_input inside the ItemInventory class. Instead have get\\_input fetch the desired values and then instantiate a new ItemInventory that you can add to your list. Something like `my_item = ItemInventory(input_name, input_count, input_cost, input_category)`\n\n&#x200B;\n\n&#x200B;\n\n>TypeError: arugment of type 'InventoryItem' is not iterable\n\nThis is because of the line `if category_name in item:` you would need to do something like `if item.category == category_name`.\n\n&#x200B;\n\nAlso if you want to be extra fancy you could think about modelling your categories as an Enum ;)\n\n>you would need to do something like `if item.category == category_name`.\n\nI changed that and it doesn't give me an error anymore, so thank you! \n\n&#x200B;\n\n>`inventory.append(ItemInventory(new_item))` this does not really make sense. Why create a ItemInventory first and then create a new one with the existing instance as parameter?\n\nYou're right. I was looking at examples from my textbook and one did something like that so I figured I'd give it a try but obviously that didn't work out the way I wanted to.", "id": "k7e6crh", "owner_tier": 0.1, "score": 0.33333333000000004}, {"content": "Instead of inventory.append(ItemInventory(new_item)) you should use inventory.append(new_item).    \nnew_item is already an instance of ItemInventory.", "id": "k7ea755", "owner_tier": 0.5, "score": -3.3333333130750966e-09}, {"content": "You're missing colon : in the \\_\\_init\\_\\_ line\n\n2-4th lines of get\\_input are missing indent each, but I'm guessing it might have been lost after pasting.\n\nReturned string requires parentheses or \\\\ symbol if you want to split it into multiple lines:\n\n    return (\n        f\"{self.name}\\n\"\n        f\"\\tCount: {self.count}, Cost: {self.cost}\\n\"\n        f\"\\tCategory: {self.category}\"\n    )\n\nor \n\n    return f\"{self.name}\\n\" \\\n           f\"\\tCount: {self.count}, Cost: {self.cost}\\n\" \\\n           f\"\\tCategory: {self.category}\" \\\n\nYou get <inventory_item.InventoryItem object at 0x000001B8F8D4C390> instead of __str__ return, because __repr__ is used when a list, a tuple, etc. is printed with your object inside. Try to define __repr__ instead of __str__ (just rename it). Though the result may still not look like you'd expect\\want it to with multiple items in a list. Simple idea to try is adding \\n:\n\n    f\"\\tCategory: {self.category}\\n\"\n\nOR just print using a loop:\n\n    for item in items:\n        print(item)\n\nIf you don't define __str__, __repr__ gets called by default in cases where __str__ would be normally called, like when just printing the item instead of printing in a list.\n\nIn display_inventory, you have print(Inventory) instead of print(inventory). The upper/lower case difference matters in Python.\n\nInventoryItem and ItemInventory names seem to be swapped.\n\nI'm guessing the code you've given isn't exactly the same as you're running, which is not right. You should share it the same, even one wrong letter or blank can make a difference.\n\nYou get TypeError: arugment of type 'InventoryItem' is not iterable, because you're trying if category_name in item. You should probably just check item.category == category_name\n\n>You're missing colon : in the \\_\\_init\\_\\_ line\r  \n\r  \n2-4th lines of get\\_input are missing indent each, but I'm guessing it might have been lost after pasting.\n\nYes, I am not copying the program verbatim since I wouldn't want to get penalized for it, so I made some changes. I appreciate your patience!\n\n&#x200B;\n\nThe loop worked and it is now showing me my desired output :) thank you.", "id": "k7e7bhs", "owner_tier": 0.5, "score": -3.3333333130750966e-09}, {"content": "First off, before anything: based on typos in the code and error messages that you provided here, it seems to me that you're manually re-typing what you're posting here. Please don't create unnecessary work for yourself \u2014 your computer has a copy/paste function for a reason.\n\n>     inventory.append(ItemInventory(new_item))\n\nWhy are you doing this? `new_item` is already an object of `ItemInventory`, you don't need to create yet another object from it.\n\nAnd because your `__init__` is designed to take four properties rather than another instance, this creates a pretty invalid object, where the old instance becomes the \"name\" of the new one and all the other properties of the new one are left at their default state.\n\nCheck this out:\n\n    In [2]: a = ItemInventory()\n    \n    In [3]: a.get_input()\n    Enter item name: something\n    Enter item count: 1\n    Enter unit cost: 2\n    Enter category: Merch\n    \n    In [4]: a.name\n    Out[4]: 'something'\n    \n    In [5]: a.count\n    Out[5]: 1\n    \n    In [6]: a.category\n    Out[6]: 'Merch'\n    \n    In [7]: b = ItemInventory(a)  # b is what you're appending in your code!\n    \n    In [8]: b.name\n    Out[8]: <__main__.ItemInventory at 0x7f201c630d10>\n    \n    In [9]: a\n    Out[9]: <__main__.ItemInventory at 0x7f201c630d10>\n    \n    In [10]: b.count\n    Out[10]: 0\n    \n    In [11]: b.cost\n    Out[11]: 0.0\n    \n    In [12]: b.category\n    Out[12]: ''\n    \nDo you see the problem?\n\nJust append `new_item`.\n\n> The output for displaying the whole inventory does not display the desired output, which is something like this: [...]\n\nThat is because when you print a list, it uses the `__repr__` of each of its elements, not the `__str__`.\n\nCheck this out:\n\n    In [1]: class Something:\n       ...:     def __str__(self):\n       ...:         return \"Something's str\"\n       ...:     def __repr__(self):\n       ...:         return \"Something's repr\"\n       ...: \n    \n    In [2]: a = Something()\n    \n    In [3]: a\n    Out[3]: Something's repr\n    \n    In [4]: print(a)\n    Something's str\n    \n    In [5]: str(a)\n    Out[5]: \"Something's str\"\n    \n    In [6]: print([a])\n    [Something's repr]\n    \nDefine `__repr__` to be the same as `__str__`. This can be done as easily as `__repr__ = __str__` in the class declaration.\n\n> I am given this message \"TypeError: arugment of type 'InventoryItem' is not iterable\" in my display_category()\n\nThe problem is with your `if category_name in item`. The `in` operator is only defined for classes that define the `__contains__` magic method. Because yours doesn't, it's meaningless to try and check if something is `in` it.\n\nIf you want to check if the item's category is `category_name`, *just do that*. Simply `if item.category == category_name`.\n\n> Should I have appended each new_item in the inventory list differently?\n\nWell, yeah, as I said before. But that isn't the cause of this specific error.\n\n>First off, before anything: based on typos in the code and error messages that you provided here, it seems to me that you're manually re-typing what you're posting here. Please don't create unnecessary work for yourself \u2014 your computer has a copy/paste function for a reason.\n\nYes, I didn't want to paste the whole program verbatim so I made some changes (my class prohibits me from copy/pasting any part of the materials they gave me; I wouldn't want to be penalized for it).\n\n&#x200B;\n\n>The problem is with your if category\\_name in item. The in operator is only defined for classes that define the \\_\\_contains\\_\\_ magic method. Because yours doesn't, it's meaningless to try and check if something is in it.\n\nOh man, I've never heard of `__contains__` method. Looked it up and will be using that in the future!\n\n&#x200B;\n\n>If you want to check if the item's category is category\\_name, just do that. Simply if item.category == category\\_name.\n\nI made this change and it finally worked. Thank you\n\nWhen you have some free time, you should definitely consider just spending some of it browsing the Python documentation. You can learn all sorts of useful things like what magic methods exist, and what they're used for. Beyond that you can also get a better understanding of what the standard library offers beyond the limited set of things your classes teach.\n\nI'll definitely do that, thank you for the tip!", "id": "k7e88x7", "owner_tier": 0.7, "score": 0.9999999966666667}], "link": "https://www.reddit.com/r/learnpython/comments/17lhaj7/first_time_working_with_classes_how_do_i_append/", "question": {"content": "I'm currently writing this program for my class homework and I'm having a hard time dealing with classes.\n\nIn this program, I am creating an inventory in which I enter an item `name`, its `count`, `cost`, and `category` (restricted to `'Food'`, `'Drink'`, and `'Merch'`).\n\n&#x200B;\n\nI have to make a class that has 4 attributes (`name`, `count`, `cost`, `category`) and 3 methods:\n\n1. `__init__()`\n2. `get_input()`: this method asks for the name, count, cost and category\n3. `__str__`\n\n&#x200B;\n\nHere is the class I created:\n\n    class ItemInventory:\n        def __init__(self, name='', count=0, cost=0.0, category='')\n            self.name = name\n            self.count = count\n            self.cost = cost\n            self.category = category\n    \n        def get_input(self):\n            self.name = input('Enter item name: ')\n            self.count = int(input('Enter item count: '))\n            self.cost = float(input('Enter unit cost: '))\n            self.category = input('Enter category: ')\n    \n        def __str__(self):\n            return f\"{self.name}\\n\"\n                   f\"\\tCount: {self.count}, Cost: {self.cost}\\n\"\n                   f\"\\tCategory: {self.category}\"\n\n&#x200B;\n\nHere is the rest of the program:\n\n    category_list = ['Food', 'Drink', 'Merch']\n    \n    def main():\n        inventory = []\n        \n        # Create a loop in which the user can add multiple items in inventory list.\n        answer = ''\n        while answer.lower() != 'n':\n                # Create an object, ask the user for item input using object's method,\n                # then append object to inventory lsit.\n                new_item = ItemInventory()\n                new_item.get_input()\n                inventory.append(ItemInventory(new_item))\n    \n                answer = input('Enter more items? ')\n    \n        # I need to print the items in each category. I'm required to have a \n        # specific function for this.\n        for category in category_list:\n            display_category(category, inventory)\n    \n        # One more function that displays ALL items in inventory.\n        display_inventory(inventory)\n    \n    \n    main()\n\n&#x200B;\n\nHere are the functions:\n\n    def display_category(category_name, inventory):\n        header = f'Items in {category_name}'\n        divider = len(header) * '-'\n        print(header)\n        print(divider)\n        \n        for item in inventory:\n            if category_name in item:\n                print(item)\n            else:\n                return 'Category empty.'\n    \n    def display_inventory(inventory):\n        print()\n        print('Current Inventory')\n        print('-----------------')\n        if len(inventory) == 0:\n            print('Inventory empty.')\n        else:\n            print(Inventory)\n\n&#x200B;\n\nI have a few problems here:\n\n* The output for displaying the whole `inventory` does not display the desired output, which is something like this:\n\n&#x200B;\n\n    Croissant\n        Count: 5, Cost: 2.90\n        Category: Food\n\nInstead, I get something like this:\n\n    [<inventory_item.InventoryItem object at 0x000001B8F8D4C390>], etc.......\n\n&#x200B;\n\n* I am given this message \"`TypeError: arugment of type 'InventoryItem' is not iterable`\" in my `display_category()` function. I don't know how to search a list of objects. Should I have appended each new\\_item in the inventory list differently?\n\n&#x200B;\n\nAny help would be greatly appreciated. I'm really at a loss here. Thanks in advance.", "id": "17lhaj7", "title": "First time working with classes. How do I append an object to a list and how do I find a specific value in each object in the list?", "traffic_rate": 153.17203703703703}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "reddit"}, {"answers": [{"content": "They only mean what they are defined to mean. There's no other meaning than what's in this code.\n\nEach instance of NewNode has a member called next. It stores another instance of NewNode, the next item in the linked list. Head is the first instance of NewNode in your list, and if you call .next on it, it will give you the next instance of newNode in the list. To visit each item in your list, you keep calling next on each instance until there are no more instances (.next returns None). When you reach None, you know you've reached the end of your list.\n\nIf you were to draw it like this:\n\nN(head)->N(1)->N(2)->None\n\nThen .next is like the arrows in the drawing, it is the link between each item in the list, but it only goes in the forward direction.\n\nSay newNode.next, what does that mean? Is newNode referring to self, and next comes from the Node class?\n\nNext is just an attribute or the newNode class instance.in the context of knowing this is a class that implements a linked list it means morez but that's not relevant to the nuts and bolts if an arbitrary python class. It's just some data.\n\n\\[line 17\\] for example :\n\n`newNode.next = self.head`\n\nIs calling the `next` attribute of `newNode`  \nwhich in this case we need to look at the value assigned to `newNode` to understand  \\[line 12\\]: \n\n`newNode = Node(data)`\n\n`Node(data)` is a call to the first class defined. \\[line 1\\]. \n\nSo `newNode.next` is calling the next method of the `Node` class and assigning it a value of `self.head`\n\nIf newNode is an instead of the Node class, then yes, it is calling the \"next\" method that is defined in the class definition for Node.\n\nIf you're using the interactive interpreter, you can do \"help(newNode)\" to get a print out if the documentation for the object, if it exists.\n\nOr if you're using a halfway decent IDE, it can provide all sorts of documentation and hints as you go.\n\nNo, newNode is not referring to self. You can see what it refers to in the code because you can see where that is defined.\n\nI use IDLE, is that good enough?\n\nIDLE is fine for small projects. I've used it in the pinch when it's the only thing on a computer and I don't have internet access. My preferred IDE is Pycharm for Python projects. Or at the very least VS Code, which you can add plugins to for extra functionality.\n\nI\u2019ll take a look at PyCharm, I\u2019ve heard that it\u2019s good for Python development only while VS Code is more universal. Thanks\n\nPycharm has some plugins to handle other languages, and has some built in support for certain other common file types, so it's not completely option only.\n\nIt does have fewer overall plugins for different languages compared to VSCode. However, of you're just working with Python and some other common stuff, Pycharm requires less initial configuration compared to VSCode.\n\nBecause vscode was designed to be language agnostic, there is no code there to automatically detect what's versions of python you have and where they're installed, there's no built in support for managing virtual environments for your project, there's no built in package manager UI, there's less refactoring support...\n\nVSCode's language agnostic approach means it's usually a worse experience than using an editor dedicated to the language you're using (unless you're using some obscure language where vscode is the only editor that supports it at all). I use VSCode as my editor of last resort. If I've got nothing better to use, then I'll use VSCode.\n\nThe one make advantage other than the large number of plugins I will give VSCode is that it's often faster/more responsive than heavy IDEs like visual studio, the Jetbrains IDEs (Pycharm, Clion, etc. etc.) And some people really value having a quick lightweight editor. Personally if I'm just looking for the bare minimum I use Notepad++ though.", "id": "ksgfdxy", "owner_tier": 0.5, "score": 0.9999999994736841}, {"content": "The dot notation is used to access attributes of objects. An attribute is a value bound to an object.\n\nFor example, in this context `current.next` is accessing the `next` attribute of the current node instance. It could be `None`, or it could be another node object.\n\n`current.next` could alternatively be written as `getattr(current, \"next\")`, which itself is really just accessing `current`'s internal dictionary (every class in Python is kind of a fancy wrapper around a dictionary, and the dictionary holds the attributes of the instance) and fetching the value from the `\"next\"` key.\n\nIn short, though, don't think about it too hard.\n\nWait so .next is just a thing in Python? Because when I googled Python .next I found the method .next() which is used to point towards the next item in a list for example \n\nHowever in this case you aren\u2019t pointing to the next item, you are creating a new item under .next\n\n'next' is not special, it's just what the coder picked as a suitable name for that bit of data\nThe new item isn't \"under\" that value. It'll be a reference to another equally valid object unlike simple strings etc, class instance reference each others it's not a separate copy.\n\nNo, there's nothing special about `next`, I just happened to use it as an example. Perhaps I should've used something else instead.\n\nOkay, consider this dead simple class:\n\n    class Person:\n        def __init__(self, name: str, age: int):\n            self.name = name\n            self.age = age\n\n    character = Person(\"Utena\", 14)\n\nIt has two attributes, `name` and `age`. You can access them via the dot notation.\n\n    print(character.name)  # Utena\n    print(character.age)  # 14\n\nThe names themselves do not have any special meaning to Python, they could be anything (as long as you don't use invalid symbols). I could have just as well used `foo` and `bar`, but having a name that tells the developer something about it is useful.\n\nAgain, I could have also written the same as\n\n    print(getattr(character, \"name\"))\n\nbut that's more writing for no benefit in this case. The dot notation should generally be preferred.", "id": "ksggvv0", "owner_tier": 0.7, "score": 0.5263157889473684}, {"content": "Head and next are just standard linked list lingo meaning exactly what the words say. Nothing to do with syntax. The only syntactic part \u201c.\u201d OTOH is not specific to linked lists but simply the way to navigate from the object on the LHS of the operator to its attribute or method on the RHS.", "id": "ksh1an2", "owner_tier": 0.5, "score": 0.052631578421052636}, {"content": "`current.next` is an attribute lookup. It's taking the `object that `newNode` refers to, and getting the `next` attribute on it. In this case, that's fetching the node that comes after the `current` node.\n\nOr, in other words, `a.b` is used to access the `b` data inside of `a`.\n\nSo it\u2019s like a given attribute within Python classes? It\u2019s not something that has to be explicitly created?\n\nIt *should* be set in the `__init__` in `Node` using something like `self.next = None`, but it doesn't have to. By default, Python classes are backed by dictionaries and allow you to add arbitrary attributes at runtime.\n\nThis is more advanced, but you can explicitly set what instance attributes are allowed on an instance of a class using [`__slots__`](https://docs.python.org/3/reference/datamodel.html#slots).\n\nWait I did set self.next = None in Node\n\nSo I can set it and use it universally?\n\nIt's some data that's attached to the object, and ya, can be accessed externally.", "id": "ksggqnq", "owner_tier": 0.9, "score": 0.31578947315789474}, {"content": "I\u2019m general, you can inspect attributes using help() or dir(), you need to import the specific package(s) to make sure they do not overwrite python based functions - as you can simply assign help to a variable, and render it useless in your code", "id": "ksh46da", "owner_tier": 0.1, "score": -5.263157862750153e-10}, {"content": "Ok, so there's a few things we need to go through.\n\n# Classes in general\n\nBefore we continue, out seems like you're struggling with the concept of how classes work in general, so let's go over what a class is.\n\nA class is a template or a blueprint. It's a way to group data together into a more meaningful structure, and it lets us as behavior to that collection of data.\n\nWhen we define a class, we use `__init__` to define what information is needed to create a new object based off this blueprint (the raw materials). `__init__` also explains what to do with those raw materials in order to actually get a proper object out of them. Of course, because these instructions need to work for every object we create based on this blueprint, we need a way to talk about whatever object were currently working with, regardless of what variable name it might be assigned to later on after it's been created.\n\nThis is where `self` comes on. `self` is a convention, technically your can use whatever name you want, but every method (that is, a function attached to a class) automatically gets the object the method is being called on passed as the first argument to the method. By convention we call this argument `self`. This is what allows us to refer to whatever object were constructing inside `__init__` as well as every other method within that class.\n\n# The linked List classes\n\nWe have two classes here: `LL` which represents the linked list itself, and `Node`, which acts as a container for each piece of data you will add or remove from the list.\n\n# The class structure\n\n`LL` contains one piece of data: the first item in our list, as well as several methods for adding and removing items from the list.\n\n`Node` contains one piece of data, and also keeps track of what the next `Node` in the list is (if there is one).\n\n# The methods\n\nAll these methods are part of the `LL` class, so that means they all have a `self` variable that refers to whatever `LL` object you've created.\n\nLet's look at `insert_start`:\n\nIt creates a `Node` object, passing the data into that object and then assigning it the name `newNode`. Then it checks if the current linked list object has None assigned to its `.head`, and either replaces the None with `newNode`, or if there is already a node assigned to `.head`, it sounds that to `newNode`'s `.next` variable, then replaces the current list's `.head` with `newNode`.\n\n# Putting things together\n\nLet's say you create 2 linked list objects:\n\n    my_list1 = LL()\n    my_list2 = LL()\n\nThen suppose you called `my_list1.insert_start(5)`. What happens is the insert_start function gets the linked list object you assigned to the name `my_list1` passed as the first argument, and the `5` passed as the second one. This means that inside the method code `self` refers to the same object that `my_list1` does.\n\nIf I then call `my_list2.insert_start(\"monkey\")` what happens is similar, except that this time the arguments are `my_list2` and `\"monkey\"`. This means this second time around, `self` refers to a different object. it refers to `my_list2`.\n\n# Conclusion\n\nHopefully this helps you understand how this stuff works together a bit better.", "id": "kshzgl4", "owner_tier": 0.7, "score": -5.263157862750153e-10}], "link": "https://www.reddit.com/r/learnpython/comments/1b1qz3q/how_do_i_understand_what_all_the_variables_are_in/", "question": {"content": "Currently learning a linked list, and I keep coming across stuff like current.next, self.head etc. \nWhat do all these mean? I understand the logic of the code but I don't understand the syntax. I can't just memorise it either as it probably won't help me much.\n\n```\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\nclass LL:\n    def __init__(self):\n        self.head = None\n\n\n    def insert_start(self, data):\n        newNode = Node(data)\n        if self.head == None:\n            self.head = newNode\n            return\n        else:\n            newNode.next = self.head\n            self.head = newNode\n\n\n    def insert_pos(self, data, pos):\n        newNode = Node(data)\n        current = self.head\n        index = 0\n        if index == pos:\n            self.insert_start(data)\n        else:\n            while(current != None and index + 1 != index):\n                index += 1\n                current = current.next\n\n            if current != None:\n                newNode.next = current.next\n                current.next = newNode\n            else:\n                return False\n\n    def insert_end(self, data):\n        newNode = Node(data)\n        if self.head == None:\n            self.head = newNode\n            return\n    \n        current = self.head\n        while (current.next):\n            current = current.next\n\n        current.next = newNode\n\n```\n\nSay this block of code. How do I understand what all the stuff with \".\" means?", "id": "1b1qz3q", "title": "How do I understand what all the \".\" variables are in a class?", "traffic_rate": 153.17203703703703}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "reddit"}, {"answers": [{"content": "This is exactly what the `shelve` module was designed to do. It's baked by `pickle` which means it can store nearly any arbitrary class type. It also means you can store executable code, so you need to be careful that you only open files that you created.\n\nWhat's the difference between shelve and pickling a file?\n\nNot sure what you mean with \"pickling a file\". We don't do that. If you mean \"creating a pickle file\" aka \"pickling an object\" then yeah, shelve does exactly the same thing, but in an easy, dictionary-based interface. `shelve` is pretty lightweight; you could easily rewrite it yourself if you wanted to.\n\nSorry, ya I meant to say pickling an object. I'll check the module out. Thanks btw", "id": "gty0xhc", "owner_tier": 0.7, "score": 0.9999999975}, {"content": "You need to serialize and deserialize your instance somehow. You can either use pickle to do that, or add your own serialization methods. Dumping to a DB is one example of that. You could also add `to_dict` / `from_dict` methods and use those to dump and load the class as a json-able type.", "id": "gty26jj", "owner_tier": 0.5, "score": -2.4999999848063226e-09}], "link": "https://www.reddit.com/r/learnpython/comments/mnkiqr/whats_the_best_way_to_store_a_class_instance/", "question": {"content": "So currently I have a program that mocks a grocery store inventory manager system. Each item is represented by a class instance and currently I'm storing each instance within a list, and that list is a value within a dictionary.  The key is the name of the category.\n\nUser enters in the category they want to add their item to,  they then add in attributes such as the name of their product and the price, this then get's saved as an instance and then it gets appended to the list of the category that they entered.  (Category being the key, list being the value of that key.\n\n    \n    fruit = []\n    canned_goods = [] home_products = []\n    \n    categories_dict = {\n    \n    'Fruit': fruit, \n    'Canned Goods': canned_goods, \n    'Home Products': home_products\n    }\n\n&#x200B;\n\n&#x200B;\n\nI'm having some trouble trying to write this dictionary file into a JSON file so I can load it up every time the program starts.  I haven't tried pickling the file yet but I wouldn't mind  totally avoiding pickling and getting rid of my dictionary entirely and storing it all within SQLite if that's possible. Would that be an efficient way of getting it done? Or would there be any other better options with storing instances persistently?", "id": "mnkiqr", "title": "What's the best way to store a class instance persistently?", "traffic_rate": 153.17203703703703}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "reddit"}, {"answers": [{"content": "\r\n    You need to create a weapon class with the two attributes. Also you need to add the two mentioned methods of the character class: Replace_weapon(w) and List_weapons(). As far as I can see that is all that is required. Once you have that you can create a character object, add some weapons and list them, something like:\nPython\n\r\nfighter = character() # create an object of the class\r\naxe = weapon(\"axe\", 20)\r\nfighter.Replace_weapon(axe) # the replace method needs to replace the weakest existing weapon\r\nfighter.List_weapons()\r\nSee also 9. Classes \u2014 Python 3.11.0 documentation[^].\r\n", "id": "2_5345804_2", "owner_tier": 0.7, "score": 0}], "link": "https://www.codeproject.com/Questions/5345774/Can-you-help-me-to-solve-this-Python-question", "question": {"content": "\n\n\r\nImagine that you are a character who is in a video game. You have two hands with which you can hold at maximum two weapons (one per hand). Using object-oriented programming, have your character pick up the objects that they find in the wild. Have your character choose the weapon that has the maximum strength. The weapons should have the following attributes:\r\n\r\n- Name (string)\r\n\r\n- Strength (number)\r\n\r\nThe character should have the following attributes:\r\n\r\n- Left_hand_weapon (weapon)\r\n\r\n- Right_hand_weapon (weapon)\r\n\r\nThe character should have the following methods:\r\n\r\n- Replace_weapon(w), where w is the weapon that was found. It will replace left hand or right hand weapon, depending on which weapon is weaker. If the weapon is weaker than both weapons the character is holding, the weapon will not be replaced.\r\n\r\n- List_weapons(), which will list the name and strength of the weapons.\r\n\r\n\r\n\r\nsome tip:\r\n\r\ncreate a class called Character\r\n\r\nadd member variables Left_hand_weapon, Right_hand_weapon as dictionaries having Name and strength as properties/keys\r\n\r\nExample variable:left_hand_weapon = {name: \"katana\", strength: 20}Step2/2\r\n\r\nadd methods to the class\r\n\r\nExplanation:\r\n\r\nreplace_weapon - will replace right or left hand weapon based on whose strength is lesser or if given weapon strength is lesser than both no replacement will be done\r\n\r\nlist_weapons - prints the list of all the weapons available till now\nclick here for output image\n\nWhat I have tried:\n\r\nHonestly, i tried this little thing but i dunno how to complete it\n\n\r\nclass character:\r\n    Left_hand_weapon = {\r\n        'weapon': 'katana',\r\n        'strength': 10\r\n    }  \r\n    while True:\r\n     weapon = input(\"Please enter the name of the weapon you found (enter Quit to quit): \")\r\n     strength = input(\"Please enter the strength of the weapon you found (enter Quit to quit): \")\r\n     if (weapon or strength) in Left_hand_weapon.values():\r\n       print(f'Left: {weapon} has strength {strength}')\r\n     else:\r\n      print('That value is not in the dictionary.')\n", "id": "5345774", "title": "Can you help me to solve this Python question?", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["Python"]}, {"answers": [{"content": "\r\n    Basically, the best approach is collecting all of the instances in some container. Wait a minute, not so fast. There is a possibility that your thinking is to abuse the garbage-collected architecture. But maybe not. Let's sort it out.\n\r\nYou cannot just \"remove instance\", as there is no such thing in managed application. You only need to remove the referenced to the instances, and they are, again, are stored in some container. So, in the simplest case, you simply need to clear the container.\n\r\nI hope you already understand this, but it need some clarification. Any object on heap will be destructed and removed from memory by the Garbage Collector (GC) if your object lost its reachability. Reachability is not a simple concept at all. For example, if three objects are referencing each other in cycle (A -> B -> C -> A), but there no more references to either of them, they will be garbage-collected anyway.\n\r\nI can imagine that your picture is more complex. There are many different containers, nesting containers, each containing objects of different types, polymorphous or not. Usually, you should recursively traverse all your containers and clear them. This is the best way.\n\r\nLet's imaging that this is difficult for you, by whatever reason. Then you could collect all the child-parent relationship to be cleared in some separate container. The storing is not trivial; you will need to store some data and references needed to remove an object from its parent container. Maybe, it should be just the collection of containers. It depends on your design which I don't know. My thing is to give you the right idea.\n\r\nThe problem here is this: this extra collection itself will hold objects and thus will keep them from collection. There are two ways to work around this problem. 1) You will need to clean this extra collection itself when the work is done; 2) you can hold not \"real\" references, but \"weak references\", which can be used for referencing by will allow garbage collection.\n\r\nThe problem of weak referencing is resolved using the class System.WeakReference, please see http://msdn.microsoft.com/en-us/library/system.weakreference.aspx[^].\n\r\nI would also recommend to read the interesting articles by CodeProject author Paulo Zemec:\nCreating a Weak List[^],\nWeakReferences, GCHandles, and WeakArrays[^],\nCreating a weak event[^].\n\n\u2014SA\n", "id": "2_316780_1", "owner_tier": 0.9, "score": 5.0}], "link": "https://www.codeproject.com/Questions/316737/Best-way-to-remove-all-instances-of-a-class", "question": {"content": "\r\n\t\t\t    I was wondering if you could give me a hint on what's the best way of approaching this ..\n\r\nI have a custom control(class) (It's actually a button) that I initialize multiple times during run time..\r\nCurrently to apply changes to the buttons, I need to restart the application - but now I'm getting tired of doing so  - therefore I would prefer to remove all Instances of the class (including the handles that I initialized during creation) and then clear new instances after wards with the new settings\n\r\nWhat would be the best approach to do so ??\r\nShould I just hold a ref to the control in a hash table or collection  and then just clear them from there ?\n\r\nI also thought there was a function that returns all initialized instances of a class - but I could not find anything pointing in that direction anymore\n\r\nAny Imput would be appropriated\r\n\t\t    ", "id": "316737", "title": "Best way to remove all instances of a class ?", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["VB"]}, {"answers": [{"content": "\r\n    It is simpler than that. You need a static field as counter, and be sure to make all constructors increment it, and the destructor decrement it (be aware of the garbage collector) - but this later part is not needed in you case as I see.\r\nThe c# template is the follwoing:\nC#\n\r\nclass MyClass\r\n{\r\n    static int counter = 0;\r\n\r\n    public MyClass()\r\n    {\r\n        Interlocked.Increment(ref counter);\r\n    }\r\n\r\n    public ~MyClass()\r\n    {\r\n        Interlocked.Decrement(ref counter);\r\n    }\r\n}\r\nThe VB.NET version would be:\nVB\n\r\nClass [MyClass]\r\n    Shared counter As Integer = 0\r\n\r\n    Public Sub New()\r\n        Interlocked.Increment(counter)\r\n    End Sub\r\n\r\n    Protected Overrides Sub Finalize()\r\n        Try\r\n            Interlocked.Decrement(counter)\r\n        Finally\r\n            MyBase.Finalize()\r\n        End Try\r\n    End Sub\r\nEnd Class\n\r\nThe list part is a little bit more complicated because of the same garbage collector (source[^])\nC#\n\r\npublic class MyClass\r\n{\r\n    private static List<WeakReference> instances = new List<WeakReference>();\r\n\r\n    public MyClass()\r\n    {\r\n         instances.Add(new WeakReference(this));\r\n    }\r\n\r\n    public static IList<MyClass> GetInstances()\r\n    {\r\n        List<MyClass> realInstances = new List<MyClass>();\r\n        List<WeakReference> toDelete = new List<WeakReference>();\r\n\r\n        foreach(WeakReference reference in instances)\r\n        {\r\n            if(reference.IsAlive)\r\n            {\r\n                realInstances.Add((MyClass)reference.Target);\r\n            }\r\n            else\r\n            {\r\n                toDelete.Add(reference);\r\n            }\r\n        }\r\n\r\n        foreach(WeakReference reference in toDelete) instances.Remove(reference);\r\n\r\n        return realInstances;\r\n    }\r\n}\r\nBut can be simpler if the usage of the list let's you make it simpler.\n\r\n[Update: working exampe]\nC#\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\n\r\nnamespace listed\r\n{\r\n\tpublic class MyClass\r\n\t{\r\n\t\t#region instance collection\r\n\t\tprivate static List<WeakReference> instances = new List<WeakReference>();\r\n\t\t\r\n\t\tpublic IList<WeakReference> Instances \r\n\t\t{\r\n\t\t\tget \r\n\t\t\t{\r\n\t\t\t\treturn instances.AsReadOnly();\r\n\t\t\t}\r\n\t\t}\r\n\t \r\n\t    public static IList<MyClass> GetInstances()\r\n\t    {\r\n\t        List<MyClass> realInstances = new List<MyClass>();\r\n\t        List<WeakReference> toDelete = new List<WeakReference>();\r\n\t \r\n\t        foreach(WeakReference reference in instances)\r\n\t        {\r\n\t            if(reference.IsAlive)\r\n\t            {\r\n\t                realInstances.Add((MyClass)reference.Target);\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t                toDelete.Add(reference);\r\n\t            }\r\n\t        }\r\n\t \r\n\t        foreach(WeakReference reference in toDelete) instances.Remove(reference);\r\n\t \r\n\t        return realInstances;\r\n\t    }\r\n\t    #endregion\r\n\t    \r\n\t    #region instance specific\r\n\t    public int instanceIndex { get; private set; }\r\n\t    public string baseTitle { get; private set; }\r\n\t    \r\n\t    public string Title \r\n\t    {\r\n\t    \tget \r\n\t    \t{\r\n\t    \t\treturn string.Format(\"{0}{1}\", this.baseTitle, this.instanceIndex);\r\n\t    \t}\r\n\t    }\r\n\t    \r\n\t    public MyClass(string title) \r\n\t    {\r\n\t        this.baseTitle = title;\r\n\t        this.instanceIndex = instances.Count(x => ((MyClass)x.Target).baseTitle == title) + 1;\r\n\t        \t\r\n\t    \tinstances.Add(new WeakReference(this));\r\n\t    }\r\n\t    #endregion\r\n\t}\r\n\t\r\n\tclass Program\r\n\t{\r\n\t\tpublic static void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar o1 = new MyClass(\"List\");\r\n\t\t\tConsole.WriteLine(o1.Title);\r\n\t\t\t\r\n\t\t\tvar o2 = new MyClass(\"SampleList\");\r\n\t\t\tConsole.WriteLine(o2.Title);\r\n\t\t\t\r\n\t\t\tvar o3 = new MyClass(\"List\");\r\n\t\t\tConsole.WriteLine(o3.Title);\r\n\t\t\t\r\n\t\t\tvar o4 = new MyClass(\"SampleList\");\r\n\t\t\tConsole.WriteLine(o4.Title);\r\n\t\t\t\r\n\t\t\tvar o5 = new MyClass(\"List\");\r\n\t\t\tConsole.WriteLine(o5.Title);\r\n\t\t\t\r\n\t\t\tConsole.Write(\"Press any key to continue . . . \");\r\n\t\t\tConsole.ReadKey(true);\r\n\t\t}\r\n\t}\r\n}\n", "id": "2_650244_2", "owner_tier": 0.3, "score": 3.0}], "link": "https://www.codeproject.com/Questions/650233/Gather-a-collection-of-Class-instances", "question": {"content": "\r\n\t\t\t    Hey guys,\r\n  I've done a little bit of searching for this but I'm either not finding the answer or simly not understanding it.\n\r\nSeveral instance of a particular class are use in my application. All instances have A String property [Title] that needs to remain unique. To do this, I've decided to add a number Property \r\nto the class and increment it when a title is set to the same value as another instance of this\r\nClass.\r\nIn order to that, I need to count every instance of the class that contains the same value for [title_]\n\r\nPlease examine the fallowing code under HELP \n\n\r\nUltimately I'm planning on listing all of these instances for the user the choose from.\n\r\nI know there is a way to gather open forms in the application under System.windows.application.Openforms And then check form type using gettype()but I'm not sure \r\nif it's possible to do the same with class instances.\n\r\nThe Class' GetTitleValue() Procedure will be called to check for matching strings.\n\r\nThank you for all feedback.\n\nVB\n\r\nPublic Class MyClass\r\n\r\n Private Title_ As String = \"Sample List\"\r\n Private SimmilarlyNamedInstanceNumber as integer = 0\r\n\r\n    Public Property Title() As String\r\n        Set(NewTitle As String)\r\n            Dim cnt As Integer = 1\r\n\r\n\r\n               '-------------  HELP  ------------------\r\n               'Need to count the number of instances of this class\r\n               'That have the same [Title] Value (ignoring Casing)\r\n               'and set SimmilarlyNamedInstanceNumber as that value + 1\r\n               '------------ End Help ------------------\r\n\r\n\r\n            Title_ = NewTitle\r\n        End Set\r\n        Get\r\n           'Return The Name of this Instance and Unique Number for the name\r\n            Return Title_ & \" \" & SimmilarlyNamedInstanceNumber.ToString\r\n        End Get\r\n\r\n   'Used to return the un-altered title value of the class in order to check for duplicates.\r\n   Public Function GetTitleValue() as string\r\n      Return Title_\r\n   End Sub\r\nend class\n", "id": "650233", "title": "Gather a collection of Class instances", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["VB"]}, {"answers": [{"content": "\nQuote:You may not use Python lists anywhere, except in the initializer and the to_list() method. Your LinkedList class may not store a Python list in any attribute. Also, generators are not allowed in this assignment.\r\nIt's pretty clear: you cannot use a List except where he specifically allowed it. This is to ensure that you are genuinely creating and traversing links instead of storing them in a Python collection and using it's inbuilt access methods.\r\nGenerators you have not studied yet - they are coming later - so if \"your\" code includes them because you copy'n'paste an example from the internet you will fail the exercise. So if you do plagiarise (which is a really bad idea anyway) you will need to understand the code you steal in very good detail before you submit it. It'll be a lot easier to write your own code anyway because then you can't use elements you haven't met yet!\r\n", "id": "2_5377829_1", "owner_tier": 0.9, "score": 1.5}], "link": "https://www.codeproject.com/Questions/5377814/How-to-solve-this-question", "question": {"content": "\n\n\r\nWrite a class LinkedList that holds a linked list of values. Your class should be in a source file named linked_list.py, and should support the following operations:\r\n\r\nLinkedList(list) - create a LinkedList that initially holds the values in the given Python list\r\n\r\nl.to_list() - return a Python list containing the values in this LinkedList\r\n\r\nl.len() - return the number of nodes in a LinkedList\r\n\r\nl.get(n) - return the value in the nth node, where nodes are numbered from 0. You may assume that 0 <= n < l.len().\r\n\r\nl.has(x) - true if the list includes the value x\r\n\r\nl.delete(x) - delete the first occurrence (if any) of the value x\r\n\r\nl.rotate() - move the last node in the list to the head of the list; does nothing if the list is empty\r\n\r\nl.starts_with(m) - true if the elements of the LinkedList m appear at the beginning of l\r\n\r\nl.contains(m) - true if the elements of the LinkedList m appear in succession anywhere in l\r\n\r\nl.ends_with(m) - true if the elements of the LinkedList m appear in succession at the end of l\r\n\r\nImportant: You may not use Python lists anywhere, except in the initializer and the to_list() method. Your LinkedList class may not store a Python list in any attribute. Also, generators (which we will study later in Programming 1) are not allowed in this assignment.\r\n\r\nYou do not need to read any input or write any output; simply submit a file linked_list.py containing the class described above.\r\n\r\nSample usage #1:\r\n\r\n>>> l = LinkedList([2, 7, 4, 9, 18, 19, 22])\r\n>>> l.to_list()\r\n[2, 7, 4, 9, 18, 19, 22]\r\n>>> l.len()\r\n7\r\n>>> l.get(3)\r\n9\r\n>>> l.has(17)\r\nFalse\r\n>>> o = LinkedList([7])\r\n>>> o.to_list()\r\n[7]\r\n>>> o.len()\r\n1\r\n>>> e = LinkedList([])\r\n>>> e.to_list()\r\n[]\r\n>>> e.len()\r\n0\r\nSample usage #2:\r\n\r\n>>> l = LinkedList([2, 7, 6, 4])\r\n>>> l.delete(2)\r\n>>> l.delete(5)\r\n>>> l.delete(4)\r\n>>> l.to_list()\r\n[7, 6]\r\n>>> l.delete(6)\r\n>>> l.delete(7)\r\n>>> l.to_list()\r\n[]\r\n>>> l.delete(8)\r\n>>> l.to_list()\r\n[]\n\nWhat I have tried:\n\n\n\r\nclass Node:\r\n    def __init__(self, value):\r\n        self.value = value\r\n        self.next = None\r\n\r\nclass LinkedList:\r\n    def __init__(self, values):\r\n        self.head = None\r\n        self.length = 0  # Track the length of the linked list\r\n        for value in values:\r\n            self.append(value)\r\n\r\n    def append(self, value):\r\n        new_node = Node(value)\r\n        if not self.head:\r\n            self.head = new_node\r\n        else:\r\n            current = self.head\r\n            while current.next:\r\n                current = current.next\r\n            current.next = new_node\r\n        self.length += 1\r\n\r\n    def to_list(self):\r\n        result = []\r\n        current = self.head\r\n        while current:\r\n            result.append(current.value)\r\n            current = current.next\r\n        return result\r\n\r\n    def len(self):\r\n        return self.length\r\n\r\n    def get(self, n):\r\n        if n < 0 or n >= self.length:\r\n            raise IndexError(\"Index out of range\")\r\n        current = self.head\r\n        for _ in range(n):\r\n            current = current.next\r\n        return current.value\r\n\r\n    def has(self, x):\r\n        current = self.head\r\n        while current:\r\n            if current.value == x:\r\n                return True\r\n            current = current.next\r\n        return False\r\n\r\n    def delete(self, x):\r\n        if not self.head:\r\n            return\r\n        if self.head.value == x:\r\n            self.head = self.head.next\r\n            self.length -= 1\r\n            return\r\n        current = self.head\r\n        while current.next:\r\n            if current.next.value == x:\r\n                current.next = current.next.next\r\n                self.length -= 1\r\n                return\r\n            current = current.next\r\n\r\n    def rotate(self):\r\n        if not self.head or not self.head.next:\r\n            return\r\n        current = self.head\r\n        while current.next.next:\r\n            current = current.next\r\n        current.next.next = self.head\r\n        self.head = current.next\r\n        current.next = None\r\n\r\n    def starts_with(self, m):\r\n        current_l = self.head\r\n        current_m = m.head\r\n        while current_l and current_m:\r\n            if current_l.value != current_m.value:\r\n                return False\r\n            current_l = current_l.next\r\n            current_m = current_m.next\r\n        return not current_m\r\n\r\n    def contains(self, m):\r\n        current_l = self.head\r\n        while current_l:\r\n            if self.starts_with_helper(current_l, m):\r\n                return True\r\n            current_l = current_l.next\r\n        return False\r\n\r\n    def starts_with_helper(self, l, m):\r\n        current_l = l\r\n        current_m = m.head\r\n        while current_l and current_m:\r\n            if current_l.value != current_m.value:\r\n                return False\r\n            current_l = current_l.next\r\n            current_m = current_m.next\r\n        return not current_m\r\n\r\n    def ends_with(self, m):\r\n        current_l = self.head\r\n        current_m = m.head\r\n        if not current_m:\r\n            return True\r\n        while current_l.next:\r\n            current_l = current_l.next\r\n        while current_m.next:\r\n            current_m = current_m.next\r\n        while current_l and current_m:\r\n            if current_l.value != current_m.value:\r\n                return False\r\n            current_l = current_l.next\r\n            current_m = current_m.next\r\n        return not current_m\n", "id": "5377814", "title": "How to solve this question?", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["Python"]}, {"answers": [{"content": "\r\n    Hi,\n\r\nyou must declare the List as a property. To access the list from an other class you must give an instance from your List to the other class.\n\n\r\nThe classes where you must give an instance from your  List to access it:\nC#\n\r\n//FilterHistory.xaml.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class FilterHistory : ChildWindow\r\n    {\r\n        private List<filterHistory> histList;\r\n        public FilterHistory(List<filterHistory> histListLink)\r\n        {\r\n            InitializeComponent();  \r\n            histList = histListLink;\r\n            this.HistoryList.ItemsSource=histList;          \r\n        }\r\n \r\n        private void OKButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            ...\r\n        }\r\n \r\n        private void CancelButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            ...\r\n        }\r\n \r\n    }\r\n}\r\n \r\n//SaveFilterHistory.xaml.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class SaveFilterHistory : ChildWindow\r\n    {\r\n        private List<filterHistory> histList;\r\n        public SaveFilterHistory(List<filterHistory> histListLink)\r\n        {\r\n            InitializeComponent();\r\n            histList = histListLink;\r\n        }\r\n \r\n        private void OKButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            //here's where i wanna add anew filterHistory\r\n            histList.Add(new filterHistory(){FilterName=\"Filter1\", Date=new DateTime(2011, 04, 30)});\r\n            this.DialogResult = true;\r\n        }\r\n \r\n        private void CancelButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            this.DialogResult = false;\r\n        }\r\n    }\r\n}\n\r\nThe class with the List:\nC#\n\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class Screen_2 : UserControl\r\n    {\r\n        private List<filterHistory> hist {get;set;}\r\n        public Screen_2()\r\n        {\r\n            InitializeComponent();\r\n            history();\r\n        }\r\n        private void viewFilterHistory(object sender, System.Windows.RoutedEventArgs e)\r\n        {\r\n            FilterHistory history = new FilterHistory(hist);\r\n            history.Show();\r\n        }\r\n        private void saveFilterHistory(object sender, System.Windows.RoutedEventArgs e)\r\n        {\r\n            SaveFilterHistory history = new SaveFilterHistory(hist);\r\n            history.Show();\r\n        }\r\n        public void history()\r\n        {\r\n            hist = new List<filterHistory>()\r\n            {\r\n                new filterHistory(){FilterName=\"Filter1\", Date=new DateTime(2010, 12, 20)},\r\n                new filterHistory(){FilterName=\"Filter2\", Date=new DateTime(2011, 04, 20)}\r\n            };\r\n        }\r\n    }\r\n}\n\n\r\nyou must pull out the filterHistory class out of your partial class and paste it simply in the namespace or in a separate .cs file\nC#\n\r\npublic class filterHistory\r\n{\r\n   public string FilterName { get; set; }\r\n   public DateTime Date { get; set; }\r\n}\n\n\r\nHope it helps\r\n", "id": "2_189139_7", "owner_tier": 0.1, "score": 3.0}, {"content": "\r\n    Hi,,\n\r\n  Declare a property with type \"List\"\n\n\r\nfor eg:\r\npublic  List<filterhistory> List\r\n{\r\nget;set;\r\n}\n\n\r\nu can assign values into this property and access this list property from another class...\r\n", "id": "2_189142_1", "owner_tier": 0.1, "score": 5.0}], "link": "https://www.codeproject.com/Questions/189128/access-a-list-from-another-class", "question": {"content": "\r\n\t\t\t    hi, please help me with this one.\r\ni have a list in one class and i want to access that list from another class to add another value to that list.\n\n\nC++\n\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class Screen_2 : UserControl\r\n    {\r\n        public Screen_2()\r\n        {\r\n        `   InitializeComponent();\r\n        }\r\n        private void viewFilterHistory(object sender, System.Windows.RoutedEventArgs e)\r\n        {\r\n            FilterHistory history = new FilterHistory();\r\n            history.Show();\r\n        }\r\n\r\n        private void saveFilterHistory(object sender, System.Windows.RoutedEventArgs e)\r\n        {\r\n            SaveFilterHistory history = new SaveFilterHistory(hist);\r\n            history.Show();\r\n        }\r\n    }\r\n}\r\n\r\n//FilterHistory.xaml.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class FilterHistory : ChildWindow\r\n    {\r\n        private List<filterHistory> hist {get;set;}\r\n        public FilterHistory()\r\n        {\r\n            InitializeComponent();\r\n            history();\r\n        }\r\n\r\n        private void OKButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            ...\r\n        }\r\n\r\n        private void CancelButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            ...\r\n        }\r\n\r\n        public class filterHistory\r\n        {\r\n            public string FilterName { get; set; }\r\n            public DateTime Date { get; set; }\r\n        }\r\n\r\n        public void history()\r\n        {\r\n            List<filterHistory> hist = new List<filterHistory>()\r\n            {\r\n                new filterHistory(){FilterName=\"Filter1\", Date=new DateTime(2010, 12, 20)},\r\n                new filterHistory(){FilterName=\"Filter2\", Date=new DateTime(2011, 04, 20)}\r\n            };\r\n            this.HistoryList.ItemsSource=hist;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n//SaveFilterHistory.xaml.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public partial class SaveFilterHistory : ChildWindow\r\n    {\r\n        private List<filterHistory> histList;\r\n        public SaveFilterHistory(List<filterHistory> histListLink)\r\n        {\r\n            InitializeComponent();\r\n            histList = histListLink;\r\n        }\r\n\r\n        private void OKButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            //here's where i wanna add anew filterHistory\r\n            histList.Add(new filterHistory(){FilterName=\"Filter1\", Date=new DateTime(2011, 04, 30)});\r\n            this.DialogResult = true;\r\n        }\r\n\r\n        private void CancelButton_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            this.DialogResult = false;\r\n        }\r\n    }\r\n}\r\n\r\n//FilterHistory.cs\r\nnamespace ReportsUIScreens\r\n{\r\n    public class filterHistory\r\n    {\r\n        public string FilterName { get; set; }\r\n        public DateTime Date { get; set; }\r\n    }\r\n}\n", "id": "189128", "title": "access a list from another class", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["C#", "MS-Access"]}, {"answers": [{"content": "\r\n    Classes;\n\nC#\n\r\npublic abstract class BaseTest\r\n{\r\n    public abstract string SaySomething();\r\n}\r\n\r\npublic class Test1 : BaseTest\r\n{\r\n    public override string SaySomething()\r\n    {\r\n        return \"Hello from Test1\";\r\n    }\r\n}\r\n\r\npublic class Test2 : BaseTest\r\n{\r\n    public override string SaySomething()\r\n    {\r\n        return \"Hello from Test2\";\r\n    }\r\n}\r\n    \r\npublic class Test3 : BaseTest\r\n{\r\n    public override string SaySomething()\r\n    {\r\n        return \"Hello from Test3\";\r\n    }\r\n}\n\r\nCode;\n\nC#\n\r\nList<BaseTest> myClasses = new List<BaseTest>();\r\n\r\nvar myTypes = AppDomain.CurrentDomain.GetAssemblies().SelectMany(a => a.GetTypes()).Where(t => t.IsSubclassOf(typeof(BaseTest)));\r\n\r\nforeach (Type t in myTypes)\r\n{\r\n    myClasses.Add((BaseTest)Activator.CreateInstance(t));\r\n}\r\n\r\nforeach (BaseTest bt in myClasses)\r\n{\r\n    Console.WriteLine(\"Type is \" + bt.GetType().FullName);\r\n    Console.WriteLine(bt.SaySomething());\r\n}\n\r\nOutput\n\n \n\r\nType is ConsoleApplication1.Test1\r\nHello from Test1\r\nType is ConsoleApplication1.Test2\r\nHello from Test2\r\nType is ConsoleApplication1.Test3\r\nHello from Test3\n", "id": "2_1122026_1", "owner_tier": 0.5, "score": 2.0}, {"content": "\r\n    In addition to solution 1 by F-ES Sitecore[^], please read this:\nInheritance (C# Programming Guide)[^]\nPolymorphism (C# Programming Guide)[^]\nAbstract and Sealed Classes and Class Members (C# Programming Guide)[^]\nHow to: Define Abstract Properties (C# Programming Guide)[^].\r\n", "id": "2_1122136_1", "owner_tier": 0.5, "score": 0}], "link": "https://www.codeproject.com/Questions/1122007/Generate-list-of-objects-from-derived-classes-at-r", "question": {"content": "\nBACKGROUND\n\r\nI have a class called \"Tests.cs\" which contains an abstract base class called \"Test\" and then I have a bunch more classes written which all derive from Test.\n\r\nAt runtime, I want to be able to choose instances of these derived classes and add them to a list which I then save to disk for recall at another time.\n\nADVICE\n\r\nThe obvious way to do this is to hard-code one instance of each Test class and add it to a master list, so that at run-time I can generate a table from this list which the user can then choose from to make their custom list of test objects that they will save to disk.\n\r\nThis is an acceptable solution (it works) but my expectation is that new test classes will be developed during the product's life and in order for this new software to be available for use in the program I will have to remember to add an instance of it to the master list each time.\r\nI am wondering if there is some way of generating a list of the derived test classes at run-time which is not reliant upon a hard-coded list of class instances.\n\nWhat I have tried:\n\r\nI've tried creating a master list containing one instance of each test class which is read from at run-time.  This works but I would like to understand if there are better ways to go about it.\r\n\t\t    ", "id": "1122007", "title": "Generate list of objects from derived classes at run-time", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["C#"]}, {"answers": [{"content": "\r\n    From your code sample, it is apparent that you can use this list through the instance of A, because you made it an instance field of this class and it is public. In this respect, the problem solved.\n\r\nBoth things are no good: 1) it's bad to make a field non-private; you should better use the property; 2) it's not good to provide more access then requires, so, if you use some class and member in a different type of the same assembly, use internal instead of public.\n\n\u2014SA\n", "id": "2_543926_1", "owner_tier": 0.9, "score": 0}, {"content": "\r\n    You need to make your list a DependencyProperty[^] most likely. I have only knowledge of WPF, not Silverlight. But I can tell you that an ObservableCollection<t></t>[^] should work for objects. For ObservableCollection<string></string>, it's more difficult because string objects doesn't implement INotifyPropertyChanged. You would need a wrapper around the string object.\n\nC#\n\r\npublic class MyClass\r\n{\r\n  public static DependencyProperty MyListProperty = DependencyProperty.register(\"MyList\", typeof(ObservableCollection<object>, typeof(Myclass));\r\n\r\n  public ObservableCollection<object> MyList\r\n  {\r\n    get { return (ObservableCollection<object>)this.GetValue(MyListProperty); }\r\n    set { this.SetValue(MyListProperty, value); }\r\n  }\r\n}</object></object>\n", "id": "2_543103_1", "owner_tier": 0.1, "score": 1.0}], "link": "https://www.codeproject.com/Questions/542811/accesspluslistplusofplusoneplusclassplusfromplusan", "question": {"content": "\r\n\t\t\t    Hi,\n\r\nI have a member list in my silverlight page class, I get it populated in the from the database in the completed event. Now I have created another class and wants to access this list from there. I have tried making it a property but it returns null.\r\nCan anyone please help.\n\r\nThanks.\nC#\n\r\nnamespace Page\r\n     Class A\r\n     {\r\n         public List _lst<string>;\r\n\r\n         private Populate()\r\n         {\r\n            _lst = GetDataFromDB();\r\n         }\r\n     }\r\n\r\n     Class B:IValueConverter\r\n     {\r\n          //Now here I want to access the data of _lst, cannot make a db call from here.\r\n     }\n", "id": "542811", "title": "access list of one class from another class", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["C#", ".NET", "Silverlight", "C#4.0", ".NET4", "OOP"]}, {"answers": [{"content": "\r\n    There is no difference in the created instance - that is the right hand side of the equals - it's the variable on the left that is different. Because the variable is reference to the interface rather than the concrete class, you can only compile statements that use the interface properties, methods, and fields - you cannot use any methods with are specific to the List<T> class despite the instance the variable actually refers to being a concrete List<T> object.\r\nThis is because as far as the compiler is concerned, the variable may contain any class that implements the IList interface, and not all of them will be List class instances.\n\r\nIt's like saying a Car is a Vehicle:\nC#\n\r\nVehicle v = new Car(\"Ford\", \"Mustang\");When you use the Vehicle next time, you can't even depend on the number of wheels, because I could also say:\nC#\n\r\nv = new Motorcycle(\"Yamaha\", \"R1\");\r\nIf I say:\nC#\n\r\nCar c = new Car(\"Ford\", \"Fiesta\");Then I can depend on the wheel count, because the compiler will complain if I try to say:\nC#\n\r\nc = new Motorcycle(\"Honda\", \"Fireblade\");Because it knows that a Motorcycle is not a Car.\r\n", "id": "2_739822_1", "owner_tier": 0.9, "score": 5.0}, {"content": "\r\n    Nice Explanation by Lee\n\nThere are two rules I follow:\n\r\n    Accept the most basic type that will work\r\n    Return the richest type your user will need\n\r\nSo when writing a function or method that takes a collection, write it not to take a List, but an IList<T>, an ICollection<T>, or IEnumerable<T>. The generic interfaces will still work even for heterogenous lists because System.Object can be a T too. Doing this will save you headache if you decide to use a Stack or some other data structure further down the road. If all you need to do in the function is foreach through it, IEnumerable<T> is really all you should be asking for.\n\r\nOn the other hand, when returning an object out of a function, you want to give the user the richest possible set of operations without them having to cast around. So in that case, if it's a List<T> internally, return a copy as a List<T>.\n\nReference :\nhttp://stackoverflow.com/questions/17170/when-to-use-ilist-and-when-to-use-list[^]\r\n", "id": "2_739818_3", "owner_tier": 0.3, "score": 4.0}], "link": "https://www.codeproject.com/Questions/739802/Difference-b-w-creating-the-instance-over-IList-an", "question": {"content": "\nDifference b/w creating the instance over IList and List\n\nEx :: \n\n \n\r\nIList<Customer> objIlistCust = new List<Customer>();  \r\nList<Customer> objListCustomer = new List<Customer>();\n", "id": "739802", "title": "Difference b/w creating the instance over IList and List", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["C#", "ASP.NET"]}, {"answers": [{"content": "\nPython\n\r\ndef __init__(self,dept):\r\n    self.department = dept\r\n\r\n__budget = 1000\r\n\r\n#------------ In java --------------#\r\n#Employee[] emp_obj = new Employee[6]\r\n#counter=0\r\n#-----------------------------------#\r\n\r\nempnames = []\r\n\r\nYou have defined __budget and empnames as class variables[^], so they are shared by all instances of the class. You should define them inside the __init__ function instead:\nPython\n\r\ndef __init__(self, dept):\r\n    self.department = dept\r\n    self.empnames = []\r\n    self. __budget = 1000\n", "id": "2_1230557_1", "owner_tier": 0.1, "score": 3.0}, {"content": "\r\n    Try this:\nPython\n\r\nclass Employee:\r\n    def __init__(self,emp_name,emp_grade):\r\n        self.emp_name = emp_name\r\n        self.emp_grade = emp_grade\r\n\r\n    def emp_info(self):\r\n        return self.emp_name + \"(\" + str(self.emp_grade) + \")\"\r\n\r\nclass Department:\r\n\r\n    def __init__(self,dept):\r\n        self.department = dept\r\n        self.__budget = 1000\r\n        self.employees = []\r\n        \r\n    def addEmployee(self, employee):\r\n\r\n        if employee.emp_grade >= 5:\r\n            self.__budget += 1000\r\n        else:\r\n            self.__budget += 500\r\n\r\n        self.employees.append(employee)\r\n\r\n    def describe(self):\r\n        print(\"Dept Name :\", self.department)\r\n        print(\"Budget :\", self.__budget)\r\n\r\n        #-----------------------\r\n\r\n        print(\"\\nEmployees :\")\r\n        for i in self.employees:\r\n            print(\"    \", i.emp_info())\r\n\r\n\r\n#-----------------------------------\r\n\r\nit_dep = Department(\"IT\")\r\nit_dep.addEmployee(Employee(\"john\",3))\r\nit_dep.addEmployee(Employee(\"Krishna\",4))\r\nit_dep.addEmployee(Employee(\"Pawan\",5))\r\n\r\nsales_dep = Department(\"Sales\")\r\nsales_dep.addEmployee(Employee(\"Rahim\",6))\r\nsales_dep.addEmployee(Employee(\"Jessy\",7))\r\nsales_dep.addEmployee(Employee(\"Charan\",2))\r\n\r\nit_dep.describe()\r\nprint(\"\\n\\n\")\r\nsales_dep.describe()\n", "id": "2_1230567_3", "owner_tier": 0.7, "score": 3.0}], "link": "https://www.codeproject.com/Questions/1230537/How-to-store-objects-in-a-list-of-class-type", "question": {"content": "\r\n\t\t\t    I am having problem storing class objects in a list(of class type).\n\r\nIn the below code, i get employee details(name and grade) of all.. instead of the called object.\n\r\nI am looking for python alternative to 'Employee[] emp_obj = new Employee[6]' of java.\n\n\n\r\nExpected o/p :\n \n\r\n#(when it_dep.describe is called, it should print as below )\r\n\r\n# Dept Name : IT\r\n# Budget : 3000\r\n# Employees : john(3),krishna(4),pawan(5)\r\n\r\n#(when sales_dep.describe is called, it should print as below)\r\n\r\n# Dept Name : Sales\r\n# Budget : 3500\r\n# Employees : Rahim(6),Jessy(7),Charan(2)\n\nWhat I have tried:\n\nPython\n\r\nclass Employee:\r\n    def __init__(self,emp_name,emp_grade):\r\n        self.emp_name = emp_name\r\n        self.emp_grade = emp_grade\r\n\r\n    def emp_info(self):\r\n        return self.emp_name + \"(\" + str(self.emp_grade) + \")\"\r\n\r\nclass Department:\r\n\r\n    def __init__(self,dept):\r\n        self.department = dept\r\n\r\n    __budget = 1000\r\n\r\n    #------------ In java --------------#\r\n    #Employee[] emp_obj = new Employee[6]\r\n    #counter=0\r\n    #-----------------------------------#\r\n\r\n    empnames = []\r\n    def addEmployee(self, emp_details):\r\n\r\n        if emp_details.emp_grade >= 5:\r\n            self.__budget += 1000\r\n        else:\r\n            self.__budget += 500\r\n\r\n        employee_name_grade = emp_details.emp_info()\r\n        self.empnames.append(employee_name_grade + \",\")\r\n\r\n        # self.empgrades.append(emp_details.emp_grade)\r\n        # self.name_and_grade = self.empnames + self.empgrades\r\n\r\n#------------------------ Java way of storing emp class objects --------#\r\n        #emp_obj[counter] = emp_details\r\n        #counter += 1\r\n#-----------------------------------------------------------------------#\r\n\r\n    def describe(self):\r\n        temp = \"Dept Name : \" + self.department + \" \\n Budget : \" + str(self.__budget) + \"\\n Employees : \"\r\n\r\n        #-----------------------\r\n\r\n        for i in self.empnames:\r\n            temp += str(i) + \"\"\r\n        print(temp)\r\n\r\nemp1 = Employee(\"john\",3)\r\nemp2 = Employee(\"Krishna\",4)\r\nemp3 = Employee(\"Rahim\",6)\r\nemp4 = Employee(\"Jessy\",7)\r\nemp5 = Employee(\"Charan\",2)\r\nemp6 = Employee(\"Pawan\",5)\r\n\r\n#-----------------------------------\r\n\r\nit_dep = Department(\"IT\")\r\nsales_dep = Department(\"Sales\")\r\n\r\n#-----------------------------------\r\n\r\nit_dep.addEmployee(emp1)\r\nit_dep.addEmployee(emp2)\r\nit_dep.addEmployee(emp6)\r\n\r\nsales_dep.addEmployee(emp3)\r\nsales_dep.addEmployee(emp4)\r\nsales_dep.addEmployee(emp5)\r\n\r\nit_dep.describe()\r\nsales_dep.describe()\n", "id": "1230537", "title": "How to store objects in a list of class type", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["Python"]}, {"answers": [{"content": "\r\n    YOu may use reflection for the purpose, see [^].\r\n :)\r\n", "id": "2_61716_1", "owner_tier": 0.5, "score": 3.0}, {"content": "\r\n    You can use reflection to do this.\r\n", "id": "2_61717_1", "owner_tier": 0.7, "score": 4.0}, {"content": "\r\n    Given that you're trying to save an object's properties to a database, you may want to look at an ORM tool like Linq2SQL or NHibernate instead.  I don't know your situation, so those tools may be overkill.  If so, just use reflection as the other responses have suggested.\n\r\nObject/Relational Mapper (ORM) tools do exactly the type of thing you are trying to do.  They take your classes and map them to your database entities.  ORMs handle more than just your simple property -> database column example.  They generally can handle relationships, lazy or eager loading, and advanced queries.\n\r\nLinq to SQL (also known as Linq2SQL) is built-in with the .Net 3.5 framework and allows you to use Linq queries against the database instead of straight SQL.  You also get to use a drag-and-drop designer in Visual Studio to create the mappings between the database schema and your classes.\n\r\nNHibernate is a free open source ORM tool you can find at https://www.nhibernate.org/[^].  It's mature and very powerful, but definitely has a steeper learning curve than Linq2SQL.  There are many ways to do the mappings with NHibernate.  You can chose between xml files, a fluent interface, or attributes applied to your classes.  Queries can be make using the NHibernate criteria api, HQL (similar to SQL), or even Linq.\n\r\nNaturally, there is far more to any ORM than what I can explain in a quick answer, so I recommend you Google ORM, Linq2SQL/Linq to SQL, and NHibernate for more information.\r\n", "id": "2_61719_2", "owner_tier": 0.1, "score": 2.0}], "link": "https://www.codeproject.com/Questions/61715/How-to-extract-all-members-of-a-class", "question": {"content": "\r\n\t\t\t    Hi,\r\nI need to know how I can extract all members of a class. I have a class and I have a function whose duty is saving a all members of some class variables(from the same class type) in a database. I know what is that class; but I don't want to update the function whenever I change the class.\n\r\nFor example this is my class:\n\n\r\npublic class user\r\n{\r\n     public string username= \"\";\r\n     public string password= \"\";\r\n     public bool KeepSignedIn= false;\r\n     public int TryNumber= 3;\r\n}\n\r\nAnd this is my function:\n\n\r\nvoid SaveInDatabase(params object[] classes_to_be_saved)\r\n{\r\n    // ????\r\n    // ???? What should I write here to extract class members?\r\n    // ???? (I have no problem with database. My problem in the class)\r\n}\n\r\nAnd my implemented codes:\n\n\r\nuser A= new user();\r\nuser B= new user();\r\nuser C= new user();\r\n\r\nA.username=\"Alex\";\r\nA.password=\"ozon#74\";\r\n\r\nB.username=\"manfered\";\r\nB.password=\"zetaRx1388\";\r\nB.KeepSignedIn= true;\r\nB.TryNumber=5;\r\n\r\nC.username=\"perla\";\r\nC.password=\"anathema\";\r\n\r\nSaveInDatabase(A,B,C)\n\r\nAnd the result will be:\n\nusernamepasswordKeepSignedInTryNumber Alex ozon#74 false 3 manfered zetaRx1388 true 5 perla anathema false 3\n\n\r\nWhen I add another member to this class and call the function, the function adds another column to the result automatically(without updating the function regarding to that member).\n\nCPallini wrote:YOu may use reflection for the purpose, see [^].\r\nThanks very much.\r\nThis link was so useful:\r\nhttp://msdn.microsoft.com/en-us/library/system.reflection.fieldinfo(VS.80).aspx\r\nIt solved my problem.\r\n\t\t    ", "id": "61715", "title": "How to extract all members of a class", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:58:26 GMT", "source": "codeproject", "tags": ["C#"]}]}