{"result": [{"answers": [], "link": "https://stackoverflow.com/questions/11367902/negative-list-index", "question": {"content": "I'm trying to understand the following piece of code: Specifically, I don't understand what the index -1 refers to. If the index 0 refers to the first element, then what does -1 refer to?", "id": 11367902, "title": "Negative list index?", "traffic_rate": 49}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python", "list"]}, {"answers": [], "link": "https://stackoverflow.com/questions/76917637/why-does-slice-not-work-when-the-first-index-is-negative-and-the-second-is-pos", "question": {"content": "I've been learning slice() and trying all the possibities that I can think of to practice, but I came across this question. In this example which I made, I used 3 websites: And used the slice function: slice(12,-4), so only the name of the website would appear on the following print: But when attempting the opposite for example: slice(-4,5), I thought that the print would be something like: .comhttps But that didn't occur, I'm asking just out of curiosity, I know that the answer could be: \"python just doesn't work like that\", but if the answers could be more explanatory, I would appreciate it.", "id": 76917637, "title": "Why does slice() not work when the first index is negative and the second is positive, but the opposite does?", "traffic_rate": 237}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python"]}, {"answers": [], "link": "https://stackoverflow.com/questions/57838483/python-list-indexing-from-negative-to-positive-indexes", "question": {"content": "I am trying to index from a list. I understand that negative indices refer to items counting backwards from the end of the list. My question is why it does not seem possible to index over a range starting from a negative index to a positive index, even though it seems intuitive. For example, foo[-1], foo[0], foo[1] are all valid ways to index from the list foo. Why does foo[-1:1] not work?\nAlternatively, since foo[-1:] selects the last element, why does foo[-1:0] not work equivalently? It is possible to index directly from -1, 0, and 1, but not through that range -1:1.", "id": 57838483, "title": "Python list indexing from negative to positive indexes", "traffic_rate": 0}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python"]}, {"answers": [{"content": "Yes, calling s[0:-1] is exactly the same as calling s[:-1]. Using a negative number as an index in python returns the nth element from the right-hand side of the list (as opposed to the usual left-hand side). so if you have a list as so: the print statement will print \"e\". Once you understand that (which you may already, it's not entirely clear if that's one of the things you're confused about or not) we can start talking about slicing. I'm going to assume you understand the basics of a slice along the lines of myList[2:4] (which will return ['c', 'd']) and jump straight into the slicing notation where one side is left blank. As you suspected in your post, myList[:index] is exactly the same as myList[0:index].  This is also works the other way around, by the way... myList[index:] is the same as myList[index:len(myList)] and will return a list of all the elements from the list starting at index and going till the end (e.g. print myList[2:] will print ['c', 'd', 'e']). As a third note, you can even do print myList[:] where no index is indicated, which will basically return a copy of the entire list (equivalent to myList[0:len(myList)], returns ['a', 'b', 'c', 'd', 'e']). This might be useful if you think myList is going to change at some point but you want to keep a copy of it in its current state. If you're not already doing it I find just messing around in a Python interpreter a whole bunch a big help towards understanding these things. I recommend IPython.", "id": 493057, "owner_tier": 0.9, "score": 0.9999999997560975}, {"content": "The crucial point is that python indices should be thought of as pointers to the spaces between the entries in a list, rather than to the elements themselves. Hence, 0 points to the beginning, 1 to between the first and second, ... and n to between the nth and (n+1)st. Thus l[1:2] gives you a list containing just element l[1] since it gives you everything between the two pointers. Similarly, negative indices point in between elements, but this time counting from the back, so -1 points between the last element and the next-to-last, so [0:-1] refers to a block of items not including that last one. As syntactic sugar, you can leave off 0 from the beginning or, in effect, the end, so l[n:] refers to everything from l[n] to the end (if n>=len(l) then it returns the empty list).", "id": 493083, "owner_tier": 0.9, "score": 0.09756097536585366}, {"content": "Negative indices are counted from the end, so s[:-1] is equivalent to s[:len(s)-1] and s[-1] is the last element, for example.", "id": 493079, "owner_tier": 0.3, "score": 0.04878048756097561}, {"content": "Yes, calling s[0:-1] is logically the same thing as s[:-1] since slicing is best defined as: Python allows you to omit 0 as this allows your code to more terse.", "id": 493061, "owner_tier": 0.9, "score": -2.4390243754208024e-10}], "link": "https://stackoverflow.com/questions/493046/i-dont-understand-slicing-with-negative-bounds-in-python-how-is-this-supposed", "question": {"content": "I am a newbie to Python and have come across the following example in my book that is not explained very well. Here is my print out from the interpreter: Why does slicing with no beginning bound and a '-1' return every element except the last one? Is calling s[0:-1] logically the same as calling s[:-1]? They both return the same result. But I'm not sure what python is doing exactly. Any help would be greatly appreciated.", "id": 493046, "title": "I don&#39;t understand slicing with negative bounds in Python. How is this supposed to work?", "traffic_rate": 15}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python", "slice"]}, {"answers": [], "link": "https://stackoverflow.com/questions/61435459/python-negative-indexing-differences", "question": {"content": "I am using python 3.6, pandas 24.2 and came across a difference.  both produce an error while  is fine along with any other form of index. They are the same data structure but adding certain types of an index allows negative indexing while others don't?", "id": 61435459, "title": "Python Negative Indexing differences", "traffic_rate": 861}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python", "pandas"]}, {"answers": [], "link": "https://stackoverflow.com/questions/52016803/convert-negative-index-in-python-to-positive-index", "question": {"content": "I'm trying to find a way to get the index of an item in a list in Python given its negative index, including an index of 0. For example with a list, l of size 4: I have tried using however this will not work when the index is 0. The only way I have found so far involves an if/else statement. Is there a possible way to do this in Python without having to use an if statement? I am trying to store the index of the item so I can access it later, but I am being given indices starting from 0 and moving backwards through the list, and would like to convert them from negative to positive.", "id": 52016803, "title": "Convert negative index in Python to positive index", "traffic_rate": 5706}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python", "list", "indexing"]}, {"answers": [{"content": "Q: Why will l[10] return an IndexError, but l[-1] returns 0? A: Because index values in Python (as in many other languages) are zero-based. That means the first item is stored at index 0. Your list has 10 items. Since the index starts at 0, the last item will be at index 9. When you try to access your list at index 10, Python rightly throws an IndexError exception to tell you that this is not a valid index value and is out of bounds. Python also uses the convention of negative index values to access items from the \"end\" of a list or sequence. Index value -1 indicates the last item in the list, -2 the next-to-last etc. Since the last item in your list is 0, this is what l[-1] returns. @Lattyware's answer already shows you how to generate/throw an exception, I hope this answers your initial question.", "id": 11235564, "owner_tier": 0.9, "score": -4.761904732964423e-10}, {"content": "In Python, negative list indices indicate items counted from the right of the list (that is, l[-n] is shorthand for l[len(l)-n]). If you find you need negative indices to indicate an error, then you can simply check for that case and raise the exception yourself (or handle it then and there):", "id": 11235227, "owner_tier": 0.9, "score": 0.9999999995238095}], "link": "https://stackoverflow.com/questions/11235213/why-does-python-return-negative-list-indexes", "question": {"content": "If I have this list with 10 elements: Why will l[10] return an IndexError, but l[-1] returns 0? What I want to do is throw an error if there are no previous elements in the list.", "id": 11235213, "title": "Why does Python return negative list indexes?", "traffic_rate": 3}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python"]}, {"answers": [], "link": "https://stackoverflow.com/questions/23431191/negative-indexing-in-python", "question": {"content": "I have one record in a list I am trying to get the last name 'smith' from this record I use the below command: It provides me 'smith' But the book I am referring to use the below command: it also gives me same result 'smith' Why do indexes [1] and [-1] provide the same result?", "id": 23431191, "title": "Negative indexing in Python", "traffic_rate": 4296}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python", "list"]}, {"answers": [{"content": "The farthest right you can specify with a negative index is -1, which refers to the final item in a sequence. However, slice semantics are that the index following the : is excluded from the slice. Therefore, there is no way, using a negative index to the right of the :, to include the final item in a list. You could \"fix\" this in your function by replacing -i with -i if i else len(arr): Output:", "id": 73571868, "owner_tier": 0.5, "score": 0.999999995}, {"content": "Working: When you had i started at 1, so you told it, in essence, to do Which is what caused it to print nothing. instead, start at the length of the array and incrementally subtract 1.", "id": 73571789, "owner_tier": 0.3, "score": -4.999999969612645e-09}], "link": "https://stackoverflow.com/questions/73571722/why-the-last-element-in-array-using-negative-index-slice-is-not-showing", "question": {"content": "I want to slice an array from the last element to the first element using a for loop to reduce the array, this is my code but for an reason the last element is not showing. Ignore the name of the function. Result: Expect result:", "id": 73571722, "title": "Why the last element in array using negative index slice is not showing?", "traffic_rate": 902}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python", "list", "for-loop", "slice"]}, {"answers": [{"content": "In such situations I don't prefer using css. I rather use XPath for getting the text part. So here are possible solutions with xpath I would use", "id": 45903171, "owner_tier": 0.9, "score": 0.9999999900000002}], "link": "https://stackoverflow.com/questions/45902388/how-does-python-achieve-negative-indexing-in-lists-and-string", "question": {"content": "Just curious to know, how does Python in background achieve concept of negative indexing, because it is written in C, and as far as I know there is no negative indexing in C.", "id": 45902388, "title": "How does Python achieve negative indexing in Lists and String", "traffic_rate": 0}, "saved_time": 1721102225, "source": "stackoverflow", "tags": ["python", "python-3.x", "list", "indexing"]}, {"answers": [{"content": "You want the last element from the list.\n\nHow would you do it without negative indexing?\n\n    my_list[len(my_list) - 1]\n\nNow this is simpler:\n\n    my_list[-1]", "id": "gjxwaj8", "owner_tier": 0.7, "score": 0.9999999989999999}, {"content": "they go from the end - i.e. `foo[-2]` == `foo[len(foo)-2]` its a shorthand.\n\nSame for slices: foo[:-2] chops the last 2 off the end..\n\nSpecifically as for *why* - well you might know know how long it is, so if you had a string and you wanted to truncate it, or if youhad an array and just wanted the last one (for like a django query set, you could say 'i want the first and last', then doing data[-1] gets the last fast and easily, without forcing your brain to read the extra code of the len() etc.", "id": "gjxwdaj", "owner_tier": 0.1, "score": -9.99999993922529e-10}], "link": "https://www.reddit.com/r/learnpython/comments/l18zv8/whats_the_use_of_negative_indexing/", "question": {"content": "Very noob question, but why would you need to use a negative index over the positive one? Why would I use [-3] over just using [2] for example?\n\nI googled this but couldn't really find an explanation anywhere", "id": "l18zv8", "title": "What's the use of negative indexing?", "traffic_rate": 153.1248148148148}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "See this stackoverflow thread: [Understanding slice notation](https://stackoverflow.com/q/509211/4082052)\n\nThanks for the link. A SO link is always a treat.", "id": "hon0loh", "owner_tier": 0.7, "score": 0.9999999975}, {"content": "On negative step, the default start and stop are reversed.\n\nStart is len-1 stop is 0.\n\nThis is what I thought but I couldn't find any link in official docs.\n\n[deleted]\n\nThanks a ton. I have gone through this page many times before and yet missed this fine prints.", "id": "hon0zp5", "owner_tier": 0.7, "score": 0.9999999975}], "link": "https://www.reddit.com/r/learnpython/comments/rgyh34/list_slicing_with_negative_index/", "question": {"content": "Although I know how slicing works but following examples kind of stumped me.\n\n    values = [3,4,3,7,8,9,5]\n    values[:3:-1]    #o/p [5,9,8]\n    values[5:3:-1]    #o/p [9,8]\n\nI always thought in `list[start:stop:step]`, 'start' defaults to 0, 'stop' defaults to length-1 and 'step' defaults to 1. But this doesn't make sense here. What are the rules? Link to official docs will also be appreciated as I couldn't find that.", "id": "rgyh34", "title": "List slicing with negative index", "traffic_rate": 153.1248148148148}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "negative index is useful if you don't know the size of a list and you want to get elements from the end of the list\n\nit is also useful in slicing for similar reasons, for example to get last two elements\n\n    >>> spam = ['cat', 'bat', 'rat', 'elephant']\n    >>> spam[-2:]\n    ['rat', 'elephant']\n    >>> spam = ['cat', 'bat', 'rat', 'elephant', 'foo', 'hi', 'bye']\n    >>> spam[-2:]\n    ['hi', 'bye']\n\nYeah agreed.  Very helpful with lists that vary in size.  For example, if you had a page of text split up into paragraphs.  From each paragraph, you want to find out the last word.\n\n`last_words = [i.split()[-1] for i in [para1, para2, para3, para4]]`\n\nThat makes sense! I'm just too fresh to fully comprehend all the use cases but I definitely see the potential in Negative Indexes.\n\nExample:  Your hosts are of the format \"device\\_name.site\\_code.orgname.tld\"\n\n    >>> def device_name(name):\n    ...   parts = name.split('.')\n    ...   device = \".\".join(parts[0:-2])\n    ...   return device\n    ...\n    >>> host1 = \"border1.sjc.mynet.org\"\n    >>> host2 = \"tor1.rack1.suite2.sjc.mynet.org\"\n    >>> device_name(host1)\n    'border1.sjc'\n    >>> device_name(host2)\n    'tor1.rack1.suite2.sjc'\n\nThe negative indexing allows you to shave off the domain.tld or orgname.tld.\n\n&#x200B;\n\nSuppose you're working with interfaces that are of the format: \"physical\\_interface.VLAN\".   Easy way to get vlan info for the interface:\n\n    >>> iface = \"Ge1/0/2.10\"\n    >>> vlan = iface.split('.')[-1]\n    >>> vlan\n    '10'\n\nOh I like this! Clean way to handle those sub interfaces (or units for Juniper)\n\nThis is awesome it relates to the Kirk Byers course im taking. Is it common practice to list the vlan at the end of the interface or is that a sub interface and you config'd it to be 2.10 to denote its VLAN?", "id": "fbdgdhj", "owner_tier": 0.7, "score": 0.9999999994117647}, {"content": "imagine i have a list of all primes below 10,000\n\nwhat if i want to find the 10th largest prime below 10,000?\n\neither i find the length of the list of primes, take 10 from that number and then index\n\nor just do `primes[-10]`\n\nsometimes you only care about something's position relative to the end\n\ni agree that in your example it makes more sense to use regular indexing, that's because your input is well defined and will only be 4 elements. it makes more sense in that scenario to think in regular indexes\n\nAwesome, thank you for taking time to help explain the concept to me! Ppreciate you.", "id": "fbdihdt", "owner_tier": 0.7, "score": 0.17647058764705884}, {"content": "There's a lot of useful cases where for negative indexes. Pathlib has eliminated this one in particular but it's the first that comes to mind: \n\nLet's say you have a file path and you want the file name (simplistic in a lot of ways, don't ever use this code):\n\n    file = 'some/file/path/file_name.txt'\n\n    file_name = file.split('/')[-1]\n\n    file_directory = '/'.join(file.split('/')[:-1])", "id": "fbex2fi", "owner_tier": 0.5, "score": -5.882352905426641e-10}], "link": "https://www.reddit.com/r/learnpython/comments/ecsyjn/negative_indexes/", "question": {"content": "Hey squad, I am currently following along with Kirk Byers and his Network Automation with Python class and I was reading through Automate The Boring stuff and was curious as to what the practical use for using a negative index would be?\n\nWhy do:\n\n\\>>> **spam = \\['cat', 'bat', 'rat', 'elephant'\\]**\n\n\\>>> **spam\\[-1\\]**\n\n'elephant'\n\n\\>>> **spam\\[-3\\]** \n\n'bat'\n\n\\>>> **'The ' + spam\\[-1\\] + ' is afraid of the ' + spam\\[-3\\] + '.'**\n\n'The elephant is afraid of the bat.'\n\nwhen you could do:\n\n\\>>> **spam = \\['cat', 'bat', 'rat', 'elephant'\\]**\n\n\\>>> **spam\\[0\\]**\n\n'cat'\n\n\\>>> **spam\\[1\\]**\n\n'bat'\n\n\\>>> **spam\\[2\\]**\n\n'rat'\n\n\\>>> **spam\\[3\\]**\n\n'elephant'\n\nI appreciate the info gang!", "id": "ecsyjn", "title": "Negative Indexes", "traffic_rate": 153.1248148148148}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "`a[-3:]` gives you `[55,66,777]`\n\nIf you want [66,777], replace -3 by -2", "id": "ia71whz", "owner_tier": 0.1, "score": 0.9999999983333333}, {"content": "Hello, I'm a Reddit bot who's here to help people nicely format their coding questions. This makes it as easy as possible for people to read your post and help you.\n\nI think I have detected some formatting issues with your submission:\n\n1. Inline formatting (`` `my code` ``) used across multiple lines of code. This can mess with indentation.\n\nIf I am correct, please edit the text in your post and try to follow [these instructions](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) to fix up your post's formatting.\n\n___\n\n^(Am I misbehaving? Have a comment or suggestion? Reply to this comment or raise an issue )^[here](https://github.com/0Hughman0/pyredditformatbot/issues).\n\nfixed", "id": "ia71fw0", "owner_tier": 0.1, "score": 0.16666666500000002}, {"content": "If you have `start`and `end` as integers that you want to select relative to the *end* of the list instead of the beginning, without special handling or an expensive list copy, and without using the normal slice notation, you can certainly do that.\n\n    >>> from itertools import islice\n    >>> a=list(range(100))\n    >>> start,end = 3,5\n    >>> a[-start:-end:-1]\n    [97, 96]\n    >>> list(islice(reversed(a), start-1, end-1))\n    [97, 96]", "id": "ia7h0qe", "owner_tier": 0.5, "score": -1.6666666565375483e-09}], "link": "https://www.reddit.com/r/learnpython/comments/uyz3n7/rant_annoying_that_there_is_no_simple_way_to/", "question": {"content": "The combination of the fact that the second `:` delimited argument of a slice is excluded and that there is no `-0` index in reverse indexing is annoying and means that you have to jump through hoops to handle edge cases.\n\nSay we have a list:\n\n```\na = [1, 2, 3, 44, 55, 66, 777]\n```\n\n\n- `a[-1]` returns `777`\n- `a[-3:-1]` returns `[55, 66]` (can't access `777`)\n- `a[-1:-3:-1]` returns `[77,66]` (what I might want, but reversed)\nso we can go `list(reversed(a[0:-3:-1]))` to return `[66, 77]`. But that is annoying.  There is also `a[-3:None]` (edit: or `a[-3:]`) but doing [both of those] programmatically requires adding an `if` condition which adds clutter and is an opportunity for a mistake. \n\nSo there is no easy/simple way to get around this problem.  I wish we could specify `-0` for negative indexing when slicing.", "id": "uyz3n7", "title": "[rant] Annoying that there is no simple way to slice the last element of a list with negative indexing", "traffic_rate": 153.1248148148148}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "You could extend the list class to do this: \n\n    class NoNegatives(list):\n        def __getitem__(self, index):\n            if index < 0:\n                raise ValueError(\"Index must be positive\")\n            else:\n                return list.__getitem__(self, index)\n\n    data = NoNegatives(range(20))\n    print(data[5])\n    print(data[-5])\n\nThat said, this smells strongly of an XY problem. There is probably a fundamentally better way to do whatever you are trying to do. ", "id": "dc7qgv1", "owner_tier": 0.7, "score": 0.7272727263636364}, {"content": "No.  Why would you even want to?\n\nI'm creating a game and it's giving me issues\n\nHow?", "id": "dc7o706", "owner_tier": 0.9, "score": 0.999999999090909}, {"content": "You could use the max function to always default to the first value in the list if you try to use a negative index. Don't know if that solves your problem.\n\n    >>> y = -1\n    >>> x = [1,2,3]\n    >>> x[max(0,y)]\n    1\n    ", "id": "dc7rknc", "owner_tier": 0.1, "score": -9.090909090909091e-10}], "link": "https://www.reddit.com/r/learnpython/comments/5n0a71/is_it_possible_to_disable_negative_indexing_in_a/", "question": {"content": "", "id": "5n0a71", "title": "Is it possible to disable negative indexing in a list??", "traffic_rate": 153.1248148148148}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "> I built a class for each element that calculates the indices to access the adjacent elements. However, if the element is at the top row or the left most column, the class will calculate the adjacent element to have an index of -1\n\nIs it out of the question to modify the logic that calculates the adjacent indices?\n\nNothing is out of the question, this is just something I am building for fun this morning after thinking about r's volcano dataset. \n\nI guess I could add the condition, if the value of the index is < 0, return \"None\" and then modify the subsequent methods to handle \"None\"\n\nAlternatively, since you already handle IndexError, just add raise one:\n\nif index<0:\n\nraise IndexError('Too low')\n\nWhen calculating adjacent indices, consider if it's possible to return only adjacent indices that are actually **in** the matrix.\n\nThat would work too, I forgot I could raise my own errors haha. I ended up just modifying the index calculation lines to return None if the index is outside the bounds of the matrix, removed the IndexError, and subbed in a TypeError. This will handle indices less than 0 and greater than the dimensions of the matrix.\n\nRight, that's what I'll try first. I already pass the matrix itself as an argument in the class, so I have the height and width of it. I can set the bounds there and forget about the IndexError.", "id": "er5uxdo", "owner_tier": 0.3, "score": 0.9999999991666666}, {"content": ">  I have an array (a list of lists)\n\nThat's called a 2D list, or sometimes a \"matrix\". An \"array\" is something else in python. \n\n> Is there a way to catch this -1 and group it with the same exception that would return \"None\"?\n\nOnly if you make your own list object. Which isn't that hard: \n\n    class Radil(list):\n        def __getitem__(self, index):\n            if index < 0:\n                raise IndexError(\"list index out of range\")\n            return super().__getitem__(index)\n\n    data = Radil([1,2,3])\n    print(data[0]) # works normally\n    print(data[4]) # raises IndexError\n    print(data[-1]) # raises IndexError\n\nThat said, modifying your code to deal with normal lists as /u/Clede mentioned is a much better approach.\n\nThis is interesting. Didn't think about this. If all else fails, I can work with this.", "id": "er5v4d9", "owner_tier": 0.7, "score": -8.333333282687742e-10}], "link": "https://www.reddit.com/r/learnpython/comments/c0muev/is_there_a_way_to_have_a_negative_index_1_return/", "question": {"content": "Basically I have an array (a list of lists), and I want to access the values of all of the elements that are adjacent to that element in the array (up, down, left, right) and evaluate them. I built a class for each element that calculates the indices to access the adjacent elements. However, if the element is at the top row or the left most column, the class will calculate the adjacent element to have an index of -1, which is outside of the array. This then gets passed to a method to get the value of the adjacent element and it returns the element in the last position. Which is not what I want. \n\nI have the function set up to catch an IndexError if it tries to access an element outside of the array, but because of the way python handles negative indices, this only works if the adjacent element is beyond the right column or bottom row. This try/except sets the value of the adjacent element to \"None\" and that will be handled by the function that I am trying to run over this array. \n\nIs there a way to catch this -1 and group it with the same exception that would return \"None\"? Basically force python to see this as outside of the bounds of the array, rather than accessing the last element instead? This also presents a problem because my function is a pathfinder. If there are no bounds to the array, it could potentially get stuck in an infinite loop.\n\nEdit: I just changed the logic within the class to return None if the index was less than 0 or greater than the dimension of the array. This would result in a TypeError (NoneType not subscriptable) and then changed the error handling to catch a TypeError instead.", "id": "c0muev", "title": "Is there a way to have a negative index [-1] return an IndexError instead of the last item in the list?", "traffic_rate": 153.1248148148148}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "If I try to run that program (and I fix the `inded -= 1` typo to index), it won't work.\n\n`string[index]` is a letter. For your input `test` it will start at index -1 which is `t`. The minus operator won't work on type `str`. Furthermore the `>=` also won't work between `int` and `str`.\n\nWhat's the idea with `while index >= -string[index]:`? Currently you are comparing the index to a letter and I guess that is not what you actually wanted to do.\n\nThanks, I fixed the typo.\n\nI also forgot to type \"len\" into the example because I'm a moron.\n\nSo it should look like: while index >= -len(string\\[index\\]):  \nWhich would  convert the index to an integer, so comparing the value as an integer within the index against the index variable initially set at -1.\n\nThat still doesn't quite work. You get only the last character and then stop.\n\nThere are already answers that suggested how to change the code, so I won't go into that. I'll rather try to explain to you what your code does and where the issue is.\n\nGoing step by step:\n\nWe start with `index = -1`. Let's enter the input `asdf`. What is `-len(string[index])`?\n\n`string[-1]` is the string `\"f\"`  \n`len(\"f\")` is `1`  \nwhich means `-len(string[-1])` is `-1`.\n\nYour while loop comparison `-1 >= -1` is True and the loop runs. You print `\"f\"`.\n\nYou set your index to `-2`.\n\nWhat's `-len(string[-2])`?\n\n`string[-2]` is the string `\"d\"`  \n`len(\"d\")` is again `1`  \nwhich means `-len(string[-1])` is again `-1`.\n\nYour while loop comparison `-2 >= -1` is False and the loop stops.\n\n---\n\nMaybe you want to use `-len(string)` without the index there? That would work. You start with `-1 >= -4` and end with `-4 >= -4`.\n\nYeah, `-len(string)` works.\n\nAnd now I see why you'd want to use operand >= instead of <=, because `-len(string)` turns that end of the condition to a value of -4. When the loop iterates, the following value would be -3 which is greater than -4. \n\nThanks for your help here!\n\nYou could also get rid of the slightly confusing minus signs. Essentially you seem to want to count from 1 to the input length (inclusive) and use that as a negative index.\n\nSo you could keep everything as positives and only use the minus where you use the list slice `[index:]` on the input\n\n    string = input(\"Please enter string: \")\n    index = 1\n    while index <= len(string):\n        print(string[-index:])\n        index += 1", "id": "jvbzg99", "owner_tier": 0.5, "score": 0.9999999983333333}, {"content": "Here you go.\n\n    s = \"test\"\n    for i in range(-1,-len(s)-1,-1):\n        print(s[i:],end=\"\")\n\nThe real trick here is the range iterator by doing:\n\n    range(-1,-len(s)-1,-1)\n\nit comes down to \n \n    range(-1,-4-1,-1)\n\nwhich comes down to\n\n    range(-1,-5,-1)\n\nWhich will count this way, when ```s ``` is 4 letters long:\n    \n    [-1,-2,-3,-4]\n\nWhich will build the following:\n\n    test[-1:] : 't'\n    test[-2:] : 'st'\n    test[-3:] : 'est'\n    test[-4:] : 'test'\n   \nEvidently a way to simplify this complex range is to use positive index and make them negative only when we use them. So we count [1,2,3,4] but we use a minus sign before using the index:\n\n    s = \"test\"\n    for i in range(1,len(s)+1):\n        print(s[-i:],end=\"\")\n\nI don't understand why OP's using negative indexing at all in this example.\n\n    string = input(\"Please enter string: \")\n    for index in range(len(string)-1, -1, -1):\n        print(string[index:], end='')\n\nworks just fine, and the intent is clearer to anyone reading the code.\n\nBecause OP is learning!", "id": "jvbzwyw", "owner_tier": 0.5, "score": 0.49999999833333336}, {"content": "Well negative numbers go past zero so \n\nSo >= can go past zero -1 >= -3 for example. \n\nAs for negatives indexes, the just go from the end of the list to the beginning so if you ever want the last thing in a list my_list[-1] gets you there\n\nThis is just iterating through the list backward\u2026poorly.", "id": "jvchlzd", "owner_tier": 0.7, "score": -1.6666666565375483e-09}], "link": "https://www.reddit.com/r/learnpython/comments/15lp7q0/help_understanding_negative_indexing_with/", "question": {"content": "I'm working on some exercises and the one I'm working on is asking for a program that writes the last indexes from an input string. For example, writing the word \"test\" would print like:tstesttest\n\nI have the solution, which uses:\n\n    string = input(\"Please enter string: \")\n    index = -1\n    while index >= -len(string[index]): # >= to me implies that condition of 0 or higher needs to be met for program to run through the while loop\n    \n    #rest of solution:\n        print(string[index:])\n        index -= 1\n    \n\nBut why does counting backwards (-1, -2, -3) work when using {variable} > -1 ? Is this just something that's specific to indexing?\n\nedit: My bad, I fixed some of the typos and corrected the code to actually mirror my solution", "id": "15lp7q0", "title": "Help understanding negative indexing with conditionals", "traffic_rate": 153.1248148148148}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "The default step size is 1, regardless of whether the second index is larger than the first and regardless of whether you're using negative indices. If you want to print a reversed string, you'll have to explicitly specify a step size of `-1`.", "id": "ieyetzc", "owner_tier": 0.3, "score": 0.199999998}, {"content": "Ranges in this manner are always `[start : end]`. Since index `-1` comes after index `-8`, this results in an empty range\n\nIf you want to reverse the direction as well, you need to also pass the third parameter (step):\n\n    print(text[-1 : -8 : -1])", "id": "ieyf33b", "owner_tier": 0.3, "score": -1.999999987845058e-09}, {"content": "Slice syntax is `[start:end:step]` (any of these are optional).\n\n`[-1:-8]` starts at the last character, and goes to the 8th from the last character. However, this places the start *after* the end, meaning you get an empty string. If you want the result, but backwards, then you need to specify a *negative step value*, making your slice `[-1:-8:-1]`.\n\n[deleted]\n\n`print` doesn't actually know what the slice values are. When you slice a string, you get a new string back. Don't get confused there; `print` isn't doing anything, it's just printing a string, and it's the slice notation that actually constructs the string you want to print. You need the negative step for that reason, though, yes; by default, the `step` is `1`, meaning characters will be taken from left to right. But since the `start` value is further to the right than the `end` value, there's no characters to take. By making `step` negative, you reverse that direction.\n\n[deleted]\n\nCorrect.\n\nYour questions aren't dumb, by the way. You're learning, and by definition that means you can't be expected to know everything. Having questions is normal and expected, just as long as you put some effort into understanding and researching things rather than expecting everyone to spoonfeed you the answer (not accusing you of doing any of that by any means).", "id": "ieyfdip", "owner_tier": 0.7, "score": 0.9999999980000001}], "link": "https://www.reddit.com/r/learnprogramming/comments/vs0yel/why_cant_i_print_negative_indexes_in_python/", "question": {"content": "[deleted]", "id": "vs0yel", "title": "Why can't I print negative indexes in Python?", "traffic_rate": 759.4066198224853}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "There's a better alternative that doesn't seem to be considered often.\n\nLet the language provide a type `FromEnd` that contains a single integer. Let the language provide a value `END` that contains the integer 0 (maybe use the token `$` for this if your language likes that idea).\n\nLet the indexing operator be overloaded, such that it can take a value of type `integer` *or* a value of type `FromEnd`.\n\nThat way, you can type `numbers[END-1] == 30` (or `numbers[$-1] == 30` perhaps). This avoids the need to repeat the array name, which I find gets very awkward.\n\nAlso, you can support `END-0`, which is impossible without the overload.\n\nIs this about backwards indexing? (Indexing counting from the end of an array.)\n\nI use the special symbol `$`, which in the context of an array index, indicates the last element of the array. So in my languages, `A[$]` means the same thing as `A[A.upb]`.\n\nThen backwards indexing is possible but it would need to be 0-based (arrays can be N-based in general):  `A[$-2]` is the third element from the end.\n\n(Where A is 0-based anyway, then both kinds of indexing correspond: `A[2]` is the third from the start, and `A[$-2]` is the third from the end. This scheme also makes it possible to have a negative lower bound.)\n\nThe problem with having `$` be the last element, rather than one-past-the-end, is that that locks you into inclusive ranges. I find that half-open ranges make life much easier.\n\nThat said, I definitely agree that allowing arbitrary start index is useful enough for the minimal cost it has.\n\nMy languages use inclusive ranges anyway (plus various characteristics at odds with most popular languages now).\n\nBut when you add such a feature, you get to define what it means. In a language where arrays are always 0-based, you might prefer having it denote the length of the array.\n\nHowever, if it is the index of last element, then forward and reverse indexing are symmetric: A\\[0\\] is the first element, and A\\[$-0\\] is the last.", "id": "hcrvch8", "owner_tier": 0.7, "score": 0.9999999993333333}, {"content": "First of all, it's a handy capability, so +1 on the capability.\n\nThe issue with negative indexes is that arrays have to handle the index `i`. If it were just `-1`, then the compiler could see that constant value and act accordingly, but with it being any value `i`, now the runtime has to handle the negative value ... on every single array access! (And there will be trillions!)\n\nSo I would vote against the regular `[]` operator handling negative values, if you are planning to optimize for performance.\n\nHaving spent a fair bit of time trying to come up with a better answer, though, here is my better answer:\n\n* &#x200B;\n\nYeah. I don't have one. \ud83d\ude1e\n\nThe best I have, thus far, is an optimized reverse, e.g.: `val lastElement = array.reversed()[0];`\n\nThat may seem expensive, but in our object model, a new object does not necessarily require any allocation or initialization, so `reversed()` could be \"free\" (same identity; different vtable).\n\nIndeed, `reversed()` is essentially a _view_ of the collection.\n\nIt's also nice to have such a view for reverse iteration (top 10 vs bottom 10 in a sorted collection), so while you are at it you may as well implement indexing on top.\n\nAnd if the cost is too big (say, loop), then the user can optimize it to:\n\n    var last = array.length() - 1;\n\n    for ...\n        array[last - i]\n\nYes. The way we've done it, we don't explicitly say that it's a view, but we explicitly say that it could be; see [List](https://github.com/xtclang/xvm/blob/d19e315b146dd9bb3b57c52d077daf69da3cc2c7/ecstasy/src/main/x/collections/List.x#L653). There is a separate method, `reify()`, (on [Collection](https://github.com/xtclang/xvm/blob/d19e315b146dd9bb3b57c52d077daf69da3cc2c7/ecstasy/src/main/x/collections/Collection.x#L583), on [Sliceable](https://github.com/xtclang/xvm/blob/d19e315b146dd9bb3b57c52d077daf69da3cc2c7/ecstasy/src/main/x/Sliceable.x#L79), and on [Array](https://github.com/xtclang/xvm/blob/d19e315b146dd9bb3b57c52d077daf69da3cc2c7/ecstasy/src/main/x/collections/Array.x#L650) \\-- which itself is a List + Collection + Sliceable) that guarantees an independent copy of the data (i.e. mutations to an underlying data structure would not leak through.)\n\nAh! My bias is showing, I was only considering immutable collections so hadn't thought of the difference :)", "id": "hcr8ddh", "owner_tier": 0.5, "score": 0.5999999993333333}, {"content": "I'm not a fan of negative-index-wraps-around.  An obscure feature that can accidentally be invoked by an erroneous run-time value is not my idea of a good time.\n\nEven for slow dynamic languages like Perl and Python, NIWA seems way too clever/precious.  Outside of palindrome interview questions, the need to count backwards from the end is relatively rare, and `thing[thing.length - N]` makes more sense in those cases.\n\nAs others have mentioned, if you really want to support this functionality, you can choose a separate method.  Either `thing.index_from_end(N)` or `thing.reverse()[N]` would be a major improvement over NIWA,", "id": "hcs9g6l", "owner_tier": 0.3, "score": 0.266666666}, {"content": "For those that are curious: Inko uses the following code to support negative indexes:\n\n- [This code](https://gitlab.com/inko-lang/inko/-/blob/8cd94040be77526e2f8d750ac4870a98a4c9ea88/vm/src/slicing.rs#L19-43) is used for converting signed indexes\n- It relies on [this code](https://gitlab.com/inko-lang/inko/-/blob/single-ownership/vm/src/numeric.rs#L47-63) to implement the modulo operator\n\nI don\u2019t understand the need for the modulo operator. Doesn\u2019t doing `length + Val` give the right index when val is negative?\n\nSort of. The modulo operator means you can do something like `-1037023` for a list with 4 values, and still get a valid index (since it wraps around). That's mostly an artefact from when out of bounds access would produce Nil, something that has been removed since.\n\nWithout that it indeed becomes simpler, but you'd still have a branch (as you need to check for the length), which likely can't be predicted reliably. That might not matter much for a high-level language though.", "id": "hcqmbtl", "owner_tier": 0.5, "score": 0.6666666659999999}, {"content": "I prefer Scala's approach of indexing into a reversed view of a collection.\n\n```\nList(1, 2, 3).view.reverse(0) // 3\n```", "id": "hcskgme", "owner_tier": 0.5, "score": 0.13333333266666667}, {"content": "Yay. Python works like that, but the typing system is different  from what I can see abd the described problems do not apply. A language is really an ensemble if features and it's pointless to assess features in isolation.\n\nHonestly, I've found that having signed indices for indexing from the end is only really useful with the inclusion of the range selector (e.g. `pop_drop = [0, 1, 2, 3, 4][1:-1]` or `file_stem = \"./file.txt\"[2:-4]`). So yea I agree, in isolation it's hard to say if, by itself, negative indexing is useful or not.\n\n\nEdit: when talking about Python usecases\n\nI find that negative indexing mostly pops when indexing with a variable or an expression. Besides -1, of course.\n\nYup, or \"the last n entries\" `l[-n:]`. But without slicing U think there is no benefit over `len(l) -n`", "id": "hcqwsfu", "owner_tier": 0.7, "score": 0.7999999993333333}, {"content": "Supporting negative indexing is a cost(small as it may be), but in the broader context if you are working on a dynamic lang with dynamic arrays you already need to do \"getlen\" and \"idx < len\" checks so a sign bit check is not going to add that much more.\n\nThis is it. A language like CPython already has to do a bounds check.\n\nOnly when values are outside 0..N-1 do you then do a further check for a valid negative index. Something like this I think, for 0-based arrays:\n\n    if u64(Index) >= u64(N) then\n        Index += N\n        if u64(Index) >= u64(N) then\n            .... Bounds error\n        end\n    end\n    \n    Access A[Index] ...\n\nYou wouldn't want to do this inline at 1000 places in static code especially when the vast majority of index ops will be conventional. So it mainly suits interpreted code when this logic is only written in one place and the cost of the extra check is zero.", "id": "hct48f2", "owner_tier": 0.3, "score": 0.066666666}, {"content": "I previously had negative indexes for indexing from the end because I thought (still think) it was rather handy.\n\nHowever, it ended up being a little bit confusing, especially when selecting slices. I ended up deciding that it was more useful to be able to approach the edge and go over it, e.g. 1..3 gives first three, 0..2 gives first two, -1..1 gives just the first and -2..0 has no elements. Similarly, 1..-1 should logically be an empty range when considering the approach from the right.\n\nI also concluded like you that it was mostly -1 being used to signal \"end\", so I introduced the context-specific value \"last\" for that instead. 2..last reads much better than 2..-1", "id": "hcxjb0q", "owner_tier": 0.1, "score": -6.666666626150194e-10}, {"content": "I have think (but not implemented) a way that go above this and make \"index\" into things more flexible.\n\nIs partially inspired in how work in [Pascal](http://www.delphibasics.co.uk/Article.asp?Name=Sets):\n\n    nums := [1, 2, 3]\n    \n    //# is the \"index\" operator\n     nums # 0 = 1\n     nums # 1 = 2\n nums # 2..3 = [2, 3]\n nums # 2..3 = [2, 3]\n\n    enum Position {First, Second, Third}\n    \n    nums # First = 1\n    nums # [First, Third] = [1, 3]\n\nOne question is if I allow to have pseudo-indexes like \"first/last\" or allow to have indexing functions:\n\n    fn last(items):UInt //needs certain signature\n       items.len()\n    \n    nums # last = 3", "id": "hd4bmp8", "owner_tier": 0.5, "score": -6.666666626150194e-10}], "link": "https://www.reddit.com/r/ProgrammingLanguages/comments/pno9jm/negativesigned_integer_indexing_yay_or_nay/", "question": {"content": "Inko currently allows you to use negative/signed indexes for arrays and byte\narrays. When used, indexing starts at the end. For example:\n\n    let numbers = Array.new(10, 20, 30)\n\n    numbers[-1] # => 30\n    numbers[-2] # => 20\n\nI originally implemented this without much thought: Ruby did it, it was\nsometimes useful there, so I copied it.\n\nSigned indexes bring some trouble though:\n\n1. You can only represent indexes up to (2^63)-1. Now I think most\n   programs won't store that many values in a single collection, but it's\n   something one has to keep in mind.\n1. You need to convert the signed indexes into unsigned indexes. This requires\n   something like `((index % length) + length) % length`, which is a fair number\n   of instructions.\n1. I have doubts about how useful it really is.\n\nProblem one and two come down to the same: complexity. For example, for Inko\nthis comes in two pieces:\n\n1. A function that takes a signed index and an unsigned length, and converts the\n   index to an unsigned index. My function _does_ support collections larger\n   that (2^63)-1 by upcasting the length and index to an i128, but the index size\n   is still limited to (2^63)-1.\n1. A function to implement the modulo operator (not the remainder). Rust doesn't\n   provide one (it uses remainder), so I had to write my own.\n\nWhile this is hidden from the user, _I_ do have to deal with it, and like most\nthe less code I have to deal with the better.\n\nProblem 3 is more subjective. The most commonly used negative index is simply\n`-1` to get the last value. This however can be handled by introducing a\ndedicated `last()` function. I actually think this is more clear if one isn't\nused to signed indexes. Besides that, indexes like -2, -3, etc are rarely used\nin my experience. For example, in the GitLab Rails source code I can only find\n37 instances of -1 being used, 11 instances of -2, and only one instance of -3.\n\nWith this in mind, I'm starting to think signed indexes aren't really worth the\ntrouble. If you really need to index from the back, you can just do\n`thing[thing.length - N]`.\n\nWhat are the thoughts of the subreddit on this matter? Does your language\nsupport signed indexes? Or am I not too far off wanting to remove support for\nthis?", "id": "pno9jm", "title": "Negative/signed integer indexing: yay or nay?", "traffic_rate": 16.86659877800407}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "Yeah, that's pretty much it.\n\nYou can always look things like this up in the Python documentation: the docs for [`str.find`](https://docs.python.org/3/library/stdtypes.html#str.find) are brief, but do say:\n\n> Return `-1` if *sub* is not found.\n\nThank you!  I'm still sifting through books, web sites, You Tube videos, etc.  A lot to learn, a lot to remember, a lot to keep track of.  Just have to be patient, give it time, and absorb what I can.  Thank you again.\n\nIn general, I'd say prioritize reading official documentation when dealing with something new. It generally gets to the point faster and gives more information (and the information it gives is official). Other resources like videos may be better at exploring use, but docs give important usage information that you should keep in mind before using something.\n\nThank you for the advice.  I'm taking it to heart.", "id": "i72ijx1", "owner_tier": 0.5, "score": 0.9999999966666664}, {"content": "Yep, that's right! And you can verify that by the [API doc](https://docs.python.org/3/library/stdtypes.html) .\n\nThank you, and thank you for the quick response.", "id": "i72i95t", "owner_tier": 0.3, "score": -3.333333313075096e-09}, {"content": "Basically, yes. If you are unsure why -1, exactly, then I have two reasons:\n\nFirst, 0 is a valid index, so it can't really be used to indicate a missing value. Second, uniformity is useful, as with `-1` chosen to represent a missing value, all you'd need to do is add `+1` to the result to check if a match was found, because `-1+1 == 0` and therefore false. All valid indexes + 1 would be 1 or more.\n\n    stuff = [...]\n    if (idx := stuff.find(42)) +1:\n        print(f\"Found at index {idx}\")\n    else:\n        print(\"Not found.\")\n\nIf that is the actual reason -1 was chosen (the adding one bit) I hate it. Never use that to check if a match was found in real code.\n\n    if (idx := stuff.find(42)) != -1:\n\nis much more understandable.\n\nEdit: Just thought I'd mention I'm not knocking you for sharing this info, just saying the technique would be hard to interpret in context.\n\nWell, my example was just meant to show one possible way to make use of it. In reality it's a remnant of how C would've done the same, and Python took a lot of inspiration from C (even if that may not be obvious at first). So basically the reason is ultimately historical in nature.", "id": "i72u1ul", "owner_tier": 0.7, "score": -3.333333313075096e-09}], "link": "https://www.reddit.com/r/learnpython/comments/ugy1ad/newbie_does_a_negative_1_find_return_mean_nothing/", "question": {"content": "  \n\nHello, everyone, thank you for letting me post here.\n\nI am brand new to Python, having begun studying it less than a month ago. I do have a little bit of programming knowledge, having taken a BASIC course in college, but that was over 40 years ago. (I\u2019m 62.) I\u2019ve been reading and watching videos, but haven\u2019t written any code from scratch yet. (I\u2019m still learning the fundamentals.)\n\nI found a piece of code on the Web that I understand for the most part, except for one part of it. I think I know how it works, and I\u2019m here to ask you to tell me if I\u2019m correct or not.\n\nThe code just prints out parts of a small string, in a few different ways. Here\u2019s the code, which I got from [https://www.mikedane.com/programming-languages/python/](https://www.mikedane.com/programming-languages/python/). (Giving credit where credit is due.)\n\ngreeting = \"Hello\"\n\n\\#indexes: 01234\n\nprint( len(greeting) )\n\nprint( greeting\\[0\\] )\n\nprint( greeting\\[-1\\] )\n\nprint( greeting.find(\"llo\") )\n\nprint( greeting.find(\"z\") )\n\nprint( greeting\\[2:\\] )\n\nprint( greeting\\[2:3\\] )\n\nHere is the result:\n\n\"C:\\\\Users\\\\====\\\\PycharmProjects\\\\Test Project 1\\\\venv\\\\Scripts\\\\python.exe\" \"C:/Users/j====/PycharmProjects/Test Project 1/main.py\"\n\n5\n\nH\n\no\n\n2\n\n\\-1\n\nllo\n\nl\n\nProcess finished with exit code 0\n\nMy question is: Why does the z in **print( greeting.find(\"z\") )** return -1 as a result?\n\nMy best guess is this: This code looks for the letter z in the string. There is none. However, it cannot return 0 (zero) as the result, because 0 is the first value in the index, which represents the letter H. \n\nSo, Python returns a negative 1 instead, to indicate no z was found.\n\nAm I correct? Thank you! J. Danniel", "id": "ugy1ad", "title": "Newbie: Does a Negative 1 Find Return Mean Nothing Was Found?", "traffic_rate": 153.17203703703703}, "saved_time": 1721102225, "source": "reddit", "tags": []}, {"answers": [{"content": "\n \n\r\nIndex was out of range. Must be non-negative and less than the size of the collection parameter name:index\r\nUse the debugger to inspect variable a line of error.\r\nCheck number of rows of DataGridView1 and compare with e.RowIndex\r\nCheck number of Cells in DataGridView1.Rows[e.RowIndex] and make sure there is at least 7.\n\r\nYour code do not behave the way you expect, and you don't understand why !\n\r\nThere is an almost universal solution: Run your code on debugger step by step, inspect variables.\r\nThe debugger is here to show you what your code is doing and your task is to compare with what it should do.\r\nThere is no magic in the debugger, it don't know what your is supposed to do, it don't find bugs, it just help you to by showing you what is going on. When the code don't do what is expected, you are close to a bug.\r\nTo see what your code is doing: Just set a breakpoint and see your code performing, the debugger allow you to execute lines 1 by 1 and to inspect variables as it execute.\nDebugger - Wikipedia, the free encyclopedia[^]\nDebugging C# Code in Visual Studio - YouTube[^]\r\nThe debugger is here to only show you what your code is doing and your task is to compare with what it should do.\r\n", "id": "2_1244905_1", "owner_tier": 0.5, "score": 0}], "link": "https://www.codeproject.com/Questions/1244903/How-do-I-remove-the-value-must-be-non-negative-err", "question": {"content": "\r\n\t\t\t    Hello,\n\r\nI am having an issue with DataGridView1_CellClick event. Whenever I am clicking on any column(cell), I am getting an error \n\r\nIndex was out of range. Must be non-negative and less than the size of the collection parameter name:index.\n\r\nThe error is in the first line itself:\n\n\n\r\nif (Convert.ToString(DataGridView1.Rows[e.RowIndex].Cells[6].Value) != \"\")\n\r\nPlease help.\n\r\nRegards\r\nAman Chaurasia\n\nWhat I have tried:\n\n\n\r\ntry\r\n            {\r\n                if (Convert.ToString(DataGridView1.Rows[e.RowIndex].Cells[6].Value) != \"\")\r\n                {\r\n                    if (ZonesItems == null)\r\n                    {\r\n                        if (PictureBox1.Image == null)\r\n                        {\r\n                            DrawZonesFromDgv(Convert.ToString(DataGridView1.Rows[e.RowIndex].Cells[6].Value));\r\n                        }\r\n                        else\r\n                        {\r\n                            DrawZonesFromDgv();\r\n                        }\r\n                        if (ZonesItems.Count > 0)\r\n                        {\r\n                            foreach (var Zone in ZonesItems)\r\n                            {\r\n                                if (Zone.ZoneNo == Convert.ToInt32(DataGridView1.Rows[e.RowIndex].Cells[6].Value))\r\n                                {\r\n                                    Zone.Clicked = true;\r\n                                }\r\n                                else\r\n                                {\r\n                                    Zone.Clicked = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        if (ZonesItems.Count > 0)\r\n                        {\r\n                            foreach (var Zone in ZonesItems)\r\n                            {\r\n                                if (Zone.ZoneNo == Convert.ToInt32(DataGridView1.Rows[e.RowIndex].Cells[6].Value))\r\n                                {\r\n                                    Zone.Clicked = true;\r\n                                }\r\n                                else\r\n                                {\r\n                                    Zone.Clicked = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    PictureBox1.Invalidate();\r\n                }\r\n                if (e.ColumnIndex == 3 || e.ColumnIndex == 4)\r\n                {\r\n                    RichTextBox2.Text = Convert.ToString(DataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex].Value);\r\n                    DatagridRowClicked = e.RowIndex;\r\n                    DatagridColClicked = e.ColumnIndex;\r\n                }\r\n            }\r\n            catch(Exception ex)\r\n            {\r\n                MessageBox.Show(ex.Message);\r\n            }\n", "id": "1244903", "title": "How do I remove the \"value must be non-negative\" error?", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["C#", "Visual-Studio", "WinForms"]}, {"answers": [{"content": "\r\n    You can try to change C#\n\r\nif (e.RowIndex >= -1)toC#\n\r\nif ((e.RowIndex > -1) && (e.RowIndex < dataGridView1.Rows.Count))to filter out that edge case where you get an array-out-of-bounds issue.\r\n", "id": "2_5316844_2", "owner_tier": 0.5, "score": 0}], "link": "https://www.codeproject.com/Questions/5316842/Index-was-out-of-range-Must-be-non-negative-and-le", "question": {"content": "\r\n\t\t\t    I work on a c# quiz. So the way it's going to work is that when someone clicks on the Datagrid view that shows the question. Whichever question id is clicked it will show the matching multiple choice question.\n\r\nThis is my code that shows the data from the grid into the text box\n\nC#\n\r\nprivate void dataGridView1_CellMouseClick(object sender, DataGridViewCellMouseEventArgs e)\r\n        {\r\n            if (e.RowIndex >= -1)\r\n             {\r\n                DataGridViewRow row = dataGridView1.Rows[e.RowIndex];\r\n                textBox2.Text = row.Cells[0].Value.ToString();\r\n                textBox3.Text = row.Cells[1].Value.ToString();\r\n                textBox4.Text = row.Cells[2].Value.ToString();\r\n                textBox5.Text = row.Cells[3].Value.ToString();\r\n            }\r\n        }\n\n\n\n\r\nI'm getting an Index is out of range error. I'm not sure what the issue is. I'm just trying to show the data in the other four rows of my access database.\n\nWhat I have tried:\n\r\nI have tried removing the index but it not working. I saw another post with this error but it's not really working.\r\n\t\t    ", "id": "5316842", "title": "Index was out of range. Must be non-negative and less than the size of the collection. Error within C# [closed]", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["C#", "WinForms"]}, {"answers": [{"content": "\r\n    Python allows negative indexes to lists, with -1 being the last item, -2 the second to last, and so forth.\r\nSo your code:\n\n\r\nmy_list = [3, 1, -2]\r\nprint(my_list[my_list[-1]])Is the equivelant of:\n\n\r\nindex = my_list[-1]\r\nprint(my_list[index])Since -1 is the last element of the list, index becomes -2, which accesses the second to last element of the list and prints it: 1\r\n", "id": "2_5309213_1", "owner_tier": 0.9, "score": 2.0}], "link": "https://www.codeproject.com/Questions/5309212/Trying-to-understand-why-this-is-the-output", "question": {"content": "\r\n\t\t\t    I am currently learning python and working my way through a course, just done an end of module exam. There was one question I got wrong but I don't understand how the output is what it is.\n\n\nPython\n\r\nmy_list = [3, 1, -2]\r\nprint(my_list[my_list[-1]])\n\n\r\nThe output is 1, can some explain why that is please?\n\nWhat I have tried:\n\r\nI have searched around the internet with not luck\r\n\t\t    ", "id": "5309212", "title": "Trying to understand why this is the output", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["Python3.6"]}, {"answers": [{"content": "\r\n    Python indexes start from zero - so if you have 5 elements in a collection, the only valid indexes are 0, 1, 2, 3, and 4 - any negative number or value greater than four will cause an index out of range error.\n\r\nPixels are organised the same way: so unless your image is exactly square and has dim values in both x and y directions, your code will fail because you access the pixel using the index plus one. I'd suggest using the debugger to check the image dimensions, and think about why your code is trying to access x + 1 and y + 1 at all!\r\n", "id": "2_5321296_1", "owner_tier": 0.9, "score": 5.0}], "link": "https://www.codeproject.com/Questions/5321292/How-do-I-fix-image-index-out-of-range-with-pillow", "question": {"content": "\r\n\t\t\t    This is my code:\nPython\n\r\nfor y in range(0, dim, 3):\r\n    for x in range(0, dim, 4):\r\n        img.putpixel((x, y), color2)\r\n        if not (x+1 > dim):\r\n            img.putpixel((x+1, y), color2)\r\n        if not (x+2 > dim):\r\n            img.putpixel((x+2, y), color2)\r\n        if not ((x+2 > dim) and (y+1 > dim)):\r\n            img.putpixel((x+2, y+1), color2)\r\nI am trying to make a sharkskin pattern by drawing pixels, but keep getting \"IndexError: image index out range.\" I literally have the whole if not () check there so it doesn't. Why does it not respect that statement, oh and btw dim is the dimension of the image (same on both axis)\n\nWhat I have tried:\n\r\nI have tried adding a function checking so it doesn't happen, but it still does.\r\n\t\t    ", "id": "5321292", "title": "How do I fix image index out of range with pillow", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["Python", "picture"]}, {"answers": [{"content": "\nQuote:Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\nAre you sure RequestHeader's first row is number 0 and not 1 ?\n\r\nYour code do not behave the way you expect, or you don't understand why !\n\r\nThere is an almost universal solution: Run your code on debugger step by step, inspect variables.\r\nThe debugger is here to show you what your code is doing and your task is to compare with what it should do.\r\nThere is no magic in the debugger, it don't know what your code is supposed to do, it don't find bugs, it just help you to by showing you what is going on. When the code don't do what is expected, you are close to a bug.\r\nTo see what your code is doing: Just set a breakpoint and see your code performing, the debugger allow you to execute lines 1 by 1 and to inspect variables as it execute.\n\nDebugger - Wikipedia, the free encyclopedia[^]\n\nMastering Debugging in Visual Studio 2010 - A Beginner's Guide[^]\nBasic Debugging with Visual Studio 2010 - YouTube[^]\n\nVisual Basic / Visual Studio Video Tutorial - Basic Debugging - YouTube[^]\nVisual Basic .NET programming for Beginners - Breakpoints and Debugging Tools[^]\n\r\nThe debugger is here to only show you what your code is doing and your task is to compare with what it should do.\r\n", "id": "2_5292606_1", "owner_tier": 0.5, "score": 0}, {"content": "\nIndexOutOfRangeException\nIndex was out of range. Must be non-negative and less than the size of the collection.\n\r\nError type and the contents are self-explanatory in themselves. You are trying to use/access certain index which does not exists for a given collection object. \n\r\nJust look around the code line where you get this error and correct the logic that is trying to access the index which does not exist. \n\r\nDetails on the same:IndexOutOfRangeException Class[^]\n\r\nThis surely would help: Troubleshooting Exceptions: System.IndexOutOfRangeException[^]\n\n\r\nIf error is occuring at: Dim row1 As GridViewRow = RequestHeader.Rows(i) then it would mean that there is no row at index i (i being the value for which the error happens)\r\n", "id": "2_5292607_1", "owner_tier": 0.7, "score": 0}], "link": "https://www.codeproject.com/Questions/5292605/Index-was-out-of-range-Must-be-non-negative-and-le", "question": {"content": "\n\n\r\nIndex was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\n\n\n\r\n<pre>\r\nLine 422:\r\nLine 423:        For i As Integer = 0 To RequestHeader.Rows.Count - 1\r\nLine 424:            Dim row1 As GridViewRow = RequestHeader.Rows(i)\r\nLine 425:            Dim chkdelete As CheckBox = row1.FindControl(\"CheckItem\")\r\nLine 426:\n\nWhat I have tried:\n\n\n\r\nFor i As Integer = 0 To RequestHeader.Rows.Count - 1\r\n    Dim row1 As GridViewRow = RequestHeader.Rows(i)\r\n    Dim chkdelete As CheckBox = row1.FindControl(\"CheckItem\")\r\n\n", "id": "5292605", "title": "Index was out of range. Must be non-negative and less than the size of the collection. Parameter name: index", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["ASP.NET"]}, {"answers": [{"content": "\r\n    That won't compile without the use of the unsafe keyword - it is not recommended to use pointers in C# without very good reason and the unsafe keyword (and build option) are there to enforce that.\r\nAnd your C# code is significantly different from the C original to ensure that even with unsafe and the use of pointers, it won't do the same job without significant changes to the external code as well.\n\r\nGenerally speaking, converting from one language to another does not result in \"good code\" and starting from something using negative indexes if probably never togin to work well.\r\nYou would be much better served by using the C code as a guide, and working out why it needs such indexes. Then designing C# code that doesn't - you will get much more maintainable code as a result.\r\n", "id": "2_1216087_1", "owner_tier": 0.9, "score": 5.0}, {"content": "\nQuote:Convert negative index in C into C#\r\nBasically, negative indexes do not exist.\r\nYou need to understand the underlying structure which appears to have a negative index when in fact it is a positive one with another base address.\n\r\nYou need to analyze your app to understand what is what.\r\n", "id": "2_1216090_1", "owner_tier": 0.5, "score": 0}], "link": "https://www.codeproject.com/Questions/1216083/Convert-negative-index-in-C-into-Csharp", "question": {"content": "\n\n\r\nI have to convert my code from c with pointers into c#\r\ncode in C is like this \r\n\r\nmyMethodName(Word16 exc[],Word16 T0)\r\n{\r\n  Word16 *p_exc;\r\n  Word16 *a;\r\n  a=&(exc[-T0])\r\n  a++;\r\n  b=a;\r\n  c=a;\r\n  a++;\r\n  p_exc = exc;\r\nfor (i = 10; i > 0; i--)\r\n{\r\n\ts2 += ((Word32) * (b--));\r\n\ts1 += ((Word32) * (b));\r\n        s1 += ((Word32) * (c++));\r\n        s2 += ((Word32) * (c));\r\n}\r\n*(p_exc++) = (Word16)(s1 >> 15);\r\n}\n\nWhat I have tried:\n\n\n\r\nI Have tried this\r\nmyMethodName(Int16[] exc,Int16 T0)\r\n{\r\n Int16 pIndex=0;\r\n Int16 a=0;\r\n a = T0;\r\na++;\r\nb=a;\r\nc=a;\r\nfor (i = 10; i > 0; i--)\r\n{\r\n\ts2 += ((Int32) * (b--));\r\n\ts1 += ((Int32) * (b));\r\n        s1 += ((Int32) * (c++));\r\n        s2 += ((Int32) * (c));\r\n}\r\np_exc[pIndex++] = (Int16)(s1 >> 15);\r\n}\n", "id": "1216083", "title": "Convert negative index in C into C#", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["C#3.0", "C++14"]}, {"answers": [{"content": "\r\n    An array cannot have a negative index. So as far as I can see you have three options:\r\n- modify the code to use 0 based arrays\r\n- use 0 based indexing but when using the index subtract/add 2, depending on the situation.\r\n- use a Dictionary(Of TKey, TValue) Class[^]\n\r\nSome examples\nVB\n\r\nDim N1 As Integer = 100\r\nDim W1(0) As Integer\r\nReDim W1(0 To N1 + 4)\r\n\r\nFor counter As Integer = 0 To 104\r\n   W1(counter) = counter\r\nNext\r\n\r\nDim N2 As Integer = 100\r\nDim W2(0) As Integer\r\nReDim W2(0 To N2 + 4)\r\n\r\nFor counter As Integer = -2 To 102\r\n   W2(counter + 2) = counter\r\nNext\r\n\r\nDim W3 As System.Collections.Generic.Dictionary(Of Integer, Integer)\r\nW3 = New Dictionary(Of Integer, Integer)\r\nFor counter As Integer = -2 To 102\r\n   W3.Add(counter, counter)\r\nNext\r\n\n", "id": "2_1033607_2", "owner_tier": 0.5, "score": 2.0}, {"content": "\r\n    Vb6 is not the same as VB.Net. There's a lot of differencies between them. I'd suggest to read this: Upgrading Visual Basic 6.0 Applications to Visual Basic .NET and Visual Basic 2005[^] and this: omparison of Visual Basic and Visual Basic .NET[^] to find out.\n\r\nYou did not provide information about what you want to achieve, but Redim instruction[^] is usually used to reallocate storage space for an array variable. You can increase/decrease the size of array, but you need to remember that low index of array cannot be negative, because arrays are zero based, unless you use Option Base 1 statement[^]. Note that ReDim W(N-2 to N+2) statement creates new array and destoroys original one. If you want to save original array, use Preserve keyword.\n\r\nAs Mika Wendelius[^] mentioned, you can use Dictionary class, but this is not the only way. Depending on what you want to achieve, you can use custom class to manage data.\n\r\nFor further information, please see:\nVisual Basic[^] \nCreating Classes in Visual Basic .NET[^]\nUsing Classes and Structures in Visual Basic .NET[^]\nWalkthrough: Defining Classes (Visual Basic)[^]\r\n", "id": "2_1033613_2", "owner_tier": 0.5, "score": 3.0}], "link": "https://www.codeproject.com/Questions/1033605/is-it-possible-to-start-an-array-with-negative-val", "question": {"content": "\r\n\t\t\t    Here is my visual basic code \n\nVB\n\r\nSub info()\r\nIf False=0 Then\r\nReDim W(-2 to N+2)\r\nEnd If\n \n\r\nthis Coding working in vb 6.0 \r\nBut the same coding transferred to vb.net it shows an error Array lower bound to be  0 \r\nCan any one please guide me how to fix this issue\r\n\t\t    ", "id": "1033605", "title": "is it possible to start an array with negative value vb. net", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["VB"]}, {"answers": [{"content": "\r\n    This is just a guess from what little code you've shown here. I assume your error occurs in method Start since it seems to be the first thing called according to your problem description. Use the debugger and place a breakpoint at the error indicated line to see exactly what is going on.\n\r\nAt the top of your code you've created a new List (displayCard) that can hold some number \"card\" objects (the default capacity). But, at this point it is empty and has no cards in it.\n\r\nIn method Start (and in Update) you try to use the card object at index 0 of displayCard - but there are no cards in it so 0 is out of range. You need to put a card (Add method is one way) in the list first.\n\r\nAgain this is just a guess because I see no code that adds a card object to displayCard before you try to use index 0. If there is code to do this, use the debugger to find out what is happening. Valuable tools those debuggers, take it from someone who started out on a system without one.\r\n", "id": "2_5376204_1", "owner_tier": 0.1, "score": 2.5}, {"content": "\r\n    Just to add to what FreedMalloc has said, an array or ind3exable collection like a List<T> containing N elements has valid index values from 0 to N - 1.\r\nSo a List<int> that contains three valuesC#\n\r\nList<int> myNumbers = new List<int>() {10, 20, 30};Would have three valid indexes: 0, 1, and 2 - any other value (positive or negative) will give you an \"Index out of range\" exception\n\r\nSince your code explicitly uses an index of 0, and you get an out of range exception that means your collection is empty: it has no elements so it has no valid indexes.\n\r\nThe solution to that is to add at least one card to the collection!\n\r\nBut ... your code seems really muddled: I have no idea what class the code you show is in, but there are two possibilities:\r\n1) That code is part of the card class. If so, then it shouldn't be accessing display components like nameText, costText, powerText, and descriptionText because they are part of your form, not the card.\n\r\n2) That code is part of your form. If so, then it shouldn't have card related values like cardName, cost, power, and cardDescription because they are part of the individual card and should be contained there rather than duplicated.\n\r\nHave a think about what you are trying to do: I suspect you are a little hazy on the concept of classes and instances, as well as collections! :D\r\n", "id": "2_5376221_1", "owner_tier": 0.9, "score": 2.5}], "link": "https://www.codeproject.com/Questions/5376202/How-to-fix-index-was-out-of-range-Must-be-non-nega", "question": {"content": "\r\n\t\t\t    I coded it so it displays a card, exept it doesnt,\r\nThe code:\n\n\r\n   public List<card> displayCard = new List<card>();\r\n    public int displayId;\r\n\r\n    public int id;\r\n    public string cardName;\r\n    public int cost;\r\n    public int power;\r\n    public string cardDescription;\r\n\r\n    \r\n    public Text nameText;   \r\n    public Text costText;\r\n    public Text powerText;\r\n    public Text descriptionText;\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    // Start is called before the first frame update    \r\n    void Start()\r\n    {\r\n        displayCard[0] = CardDatabase.cardList[displayId];\r\n    }\r\n\r\n    // Update is called once per frame\r\n    void Update()\r\n    {\r\n         id = displayCard[0].id;\r\n         cardName = displayCard[0].cardName;\r\n         cost = displayCard[0].cost;\r\n         power = displayCard[0].power;\r\n         cardDescription = displayCard[0].cardDescription;\r\n       \r\n\r\n       nameText.text = \" \" + cardName;\r\n       costText.text = \" \" + cost;\r\n       powerText.text = \" \" + power;\r\n       descriptionText.text = \" \" + cardDescription;\r\n    }\r\n}\r\n\r\nI have the cards on a different script\r\n\r\nWhat I have tried:\r\n\r\nChanging the card id etc. Rewriting it incase i forgot something, idk what esle to do\n", "id": "5376202", "title": "How to fix index was out of range. Must be non-negative and less than the size of the collection.", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["C#"]}, {"answers": [{"content": "\r\n    \"Index out of bounds\" means that: you are trying to access an element of an array with an index that is negative, or larger than the number of elements in the array, minus 1 (Because in C, valid indexes for an array on N elements start from 0 and go up to but not including N).\n\r\nCompiling does not mean your code is right! :laugh:\r\nThink of the development process as writing an email: compiling successfully means that you wrote the email in the right language - English, rather than German for example - not that the email contained the message you wanted to send.\n\r\nSo now you enter the second stage of development (in reality it's the fourth or fifth, but you'll come to the earlier stages later): Testing and Debugging.\n\r\nStart by looking at what it does do, and how that differs from what you wanted. This is important, because it give you information as to why it's doing it. For example, if a program is intended to let the user enter a number and it doubles it and prints the answer, then if the input / output was like this:\n \n\r\nInput   Expected output    Actual output\r\n  1            2                 1\r\n  2            4                 4\r\n  3            6                 9\r\n  4            8                16Then it's fairly obvious that the problem is with the bit which doubles it - it's not adding itself to itself, or multiplying it by 2, it's multiplying it by itself and returning the square of the input.\r\nSo with that, you can look at the code and it's obvious that it's somewhere here:\nC++\n\r\nprivate int Double(int value)\r\n   {\r\n   return value * value;\r\n   }\r\nOnce you have an idea what might be going wrong, start using the debugger to find out why. Put a breakpoint on the first line of the method, and run your app. When it reaches the breakpoint, the debugger will stop, and hand control over to you. You can now run your code line-by-line (called \"single stepping\") and look at (or even change) variable contents as necessary (heck, you can even change the code and try again if you need to).\r\nThink about what each line in the code should do before you execute it, and compare that to what it actually did when you use the \"Step over\" button to execute each line in turn. Did it do what you expect? If so, move on to the next line.\r\nIf not, why not? How does it differ?\r\nHopefully, that should help you locate which part of that code has a problem, and what the problem is.\n\r\nSo start with the actual error message as it tell you where the error occurred - file and line number at least. Run your app in the debugger and put a breakpoint on that line. Then when it hits the breakpoint, look at the variables involved and work out which is out of bounds. Then you can start looking back through your code (using more runs through the debugger with breakpoints in different places as needed) to work out why it held that value.\n\r\nThis is a skill, and it's one which is well worth developing as it helps you in the real world as well as in development. And like all skills, it only improves by use! \r\nSorry, but we can't do that for you: time to learn a new (and very useful) skill: debugging!\r\n", "id": "2_5365264_1", "owner_tier": 0.9, "score": 5.0}, {"content": "\r\n    I think the problem is in how you call the function : C++\n\r\nfloat vertices[60];\r\nunsigned int indices[60];\r\n\r\nicosahedron(radius, vertices);\r\nsubdivide(vertices, indices, 1, sizeof(vertices), sizeof(indices), radius);\r\nThe sizeof operator returns the number of bytes in an item, not the number of array elements so the value passed to subdivide is 240, not 60.  There is a _countof macro available in many (most?) compilers that will do that.  If it is not available in yours, here is how it is implemented : C++\n\r\n#ifndef _countof\r\n#define _countof(_Array) (sizeof(_Array) / sizeof(_Array[0]))\r\n#endifAnother option is to use a constant value like this : C++\n\r\nconst int VertexCount=60;\r\nfloat vertices[ VertexCount ];\r\nunsigned int indices[ VertexCount ];\r\n\r\nsubdivide( vertices, indices, 1, VertexCount, VertexCount, radius );\r\nI always tell the compiler to use warning level 4 with my code and it would tell me that in the function : C++\n\r\nvoid subdivide(float* vertices, unsigned int* indices, int subdivision_amount, size_t vertices_arr, size_t indices_arr, int radius)the arguments vertices_arr and indices_arr are not used.  On second thought, that means this is not the problem.  Not directly, that is.\n\r\nAs has been mentioned, I think your best is to use a debugger or, at least, to do some printf-style debugging and display every index used in the code.\n\r\nETA: I was curious so I had a go at this and I found a few problems.  One is the indices array was not initialized so it had invalid values.  Another is null pointers were passed to add_indices.  I adjusted the code to this and it runs but I'm not sure it works correctly : \n\r\nvoid subdivide(       float* vertices\r\n                    , unsigned int* indices\r\n                    , int subdivision_amount\r\n                    , int radius\r\n                    , int vertCount\r\n                    )\r\n{\r\n    float new_v1[3], new_v2[3], new_v3[3];\r\n    float *v1, *v2, *v3;\r\n    unsigned int index;\r\n\r\n    for( int i = 1; i <= subdivision_amount; ++i )\r\n    {\r\n        index = 0;\r\n\r\n        for( int j = 0; j < vertCount; j += 3 )\r\n        {\r\n            v1 = & vertices[ indices[ j ] * 3 ];\r\n            v2 = & vertices[ indices[ j + 1 ] * 3 ];\r\n            v3 = & vertices[ indices[ j + 2 ] * 3 ];\r\n\r\n            compute_half_vertex( v1, v2, new_v1, radius );\r\n            compute_half_vertex( v2, v3, new_v2, radius );\r\n            compute_half_vertex( v1, v3, new_v3, radius );\r\n\r\n            add_vertices( v1,     new_v1, new_v3, vertices );\r\n            add_vertices( new_v1, v2,     new_v2, vertices );\r\n            add_vertices( new_v1, new_v2, new_v3, vertices );\r\n            add_vertices( new_v3, new_v2, v3,     vertices );\r\n\r\n            add_indices( index,     index + 1,  index + 2,  indices );\r\n            add_indices( index + 3, index + 4,  index + 5,  indices );\r\n            add_indices( index + 6, index + 7,  index + 8,  indices );\r\n            add_indices( index + 9, index + 10, index + 11, indices );\r\n            index += 12;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nvoid TestSubdivide() \r\n{\r\n    const int VertCount = 60;\r\n    int radius = 1;\r\n    float vertices[ VertCount ] = { 0 };\r\n    unsigned int indices[ VertCount ] = { 0 };\r\n\r\n    icosahedron( radius, vertices );\r\n    subdivide( vertices, indices, 1, radius, VertCount );\r\n}The indices array never gets set to anything other than zeros but the vertices array has some non-zero values in it.  I am not sure if this is what you want or not.  Also, I don't see what effect the subdivision_amount parameter will have.\r\n", "id": "2_5365304_6", "owner_tier": 0.3, "score": 5.0}, {"content": "\r\n    Accessing an array with some invalid index is a severe bug not only because the runtime crashed, but you ask for data which doesnt exist.\n\r\nSo handle these cases. Most common handling is to check whether you index is equal or higher zero  AND isnt higher than elements in the array. One way is to use constants for size, or you some class to have a count or track count yourself.\n\r\ntip: if this check fails you may have found another bug. Track him down to find the cause.\r\n", "id": "2_5365273_1", "owner_tier": 0.3, "score": 0}], "link": "https://www.codeproject.com/Questions/5365259/Indexing-out-of-bounds-with-arrays", "question": {"content": "\r\n\t\t\t    I've been trying to debug a program I wrote that fills out vertices for an icosahedron (based off of a tutorial I found online). When running the program I get segmentation faults, specifically in functions where I have to access array indexes, and I don't know how to solve it, so I created a MRE (minimal reproducible example) of the program, with the most important parts to show where the errors are, and the usage of the problematic functions.\n\nC\n\r\n#include <stdlib.h>\r\n#include <math.h>\r\n\r\nvoid icosahedron(int radius, float *vertices);\r\nvoid subdivide(float *vertices, unsigned int *indices, int subdivision_amount, size_t vertices_arr, size_t indices_arr, int radius);\r\nvoid compute_half_vertex(float v1[3], float v2[3], float new_v[3], int radius);\r\nvoid add_vertices(float v1[3], float v2[3], float v3[3], float *vertices);\r\nvoid add_indices(unsigned int i1, unsigned int i2, unsigned int i3, unsigned int *indices);\r\n\r\nint main(void) \r\n{\r\n    int radius = 1;\r\n    float vertices[60];\r\n    unsigned int indices[60];\r\n\r\n    icosahedron(radius, vertices);\r\n    subdivide(vertices, indices, 1, sizeof(vertices), sizeof(indices), radius);\r\n\r\n    return 0;\r\n}\r\n\r\nvoid icosahedron(int radius, float *vertices)\r\n{\r\n    float H_ANGLE = M_PI / 180 * 72;\r\n    float V_ANGLE = atanf(1.0f / 2);\r\n\r\n    int i1, i2;\r\n    float z, xy;    \r\n    float h_angle_1 = -M_PI / 2 - H_ANGLE / 2;\r\n    float h_angle_2 = -M_PI / 2;\r\n\r\n    vertices[0] = 0;\r\n    vertices[1] = 0;\r\n    vertices[2] = radius;\r\n    \r\n    for (int i = 1; i <= 5; ++i)\r\n    {\r\n        i1 = i * 3;\r\n        i2 = (i + 5) * 3;\r\n\r\n        z = radius * sinf(V_ANGLE);\r\n        xy = radius * cosf(V_ANGLE);\r\n\r\n        vertices[i1] = xy * cosf(h_angle_1);\r\n        vertices[i2] = xy * cosf(h_angle_2);\r\n        vertices[i1 + 1] = xy * sinf(h_angle_1);\r\n        vertices[i2 + 1] = xy * sinf(h_angle_2);\r\n        vertices[i1 + 2] = z;\r\n        vertices[i2 + 2] = -z;\r\n\r\n        h_angle_1 += H_ANGLE;\r\n        h_angle_2 += H_ANGLE;\r\n    }\r\n\r\n    i1 = 11 * 3;\r\n    vertices[i1] = 0;\r\n    vertices[i1 + 1] = 0;\r\n    vertices[i1 + 2] = -radius;\r\n}\r\n\r\nvoid subdivide(float* vertices, unsigned int* indices, int subdivision_amount, size_t vertices_arr, size_t indices_arr, int radius)\r\n{\r\n    float* tmp_vertices;\r\n    unsigned int* tmp_indices;\r\n    float new_v1[3], new_v2[3], new_v3[3];\r\n    float *v1, *v2, *v3;\r\n    unsigned int index;\r\n\r\n    for (int i = 1; i <= subdivision_amount; ++i)\r\n    {\r\n        tmp_vertices = vertices;\r\n        tmp_indices = indices;\r\n        vertices = NULL;\r\n        indices = NULL;\r\n        index = 0;\r\n\r\n        for (int j = 0; j < sizeof(tmp_indices); j += 3)\r\n        {\r\n            v1 = &tmp_vertices[(int)tmp_indices[j] * 3];\r\n            v2 = &tmp_vertices[(int)tmp_indices[j + 1] * 3];\r\n            v3 = &tmp_vertices[(int)tmp_indices[j + 2] * 3];\r\n\r\n            compute_half_vertex(v1, v2, new_v1, radius);\r\n            compute_half_vertex(v2, v3, new_v2, radius);\r\n            compute_half_vertex(v1, v3, new_v3, radius);\r\n\r\n            add_vertices(v1, new_v1, new_v3, vertices);\r\n            add_vertices(new_v1, v2, new_v2, vertices);\r\n            add_vertices(new_v1, new_v2, new_v3, vertices);\r\n            add_vertices(new_v3, new_v2, v3, vertices);\r\n\r\n            add_indices(index, index + 1, index + 2, indices);\r\n            add_indices(index + 3, index + 4, index + 5, indices);\r\n            add_indices(index + 6, index + 7, index + 8, indices);\r\n            add_indices(index + 9, index + 10, index + 11, indices);\r\n            index += 12;\r\n        }\r\n    }\r\n}\r\n\r\nvoid compute_half_vertex(float v1[3], float v2[3], float new_v[3], int radius)\r\n{\r\n    new_v[0] = v1[0] + v2[0];\r\n    new_v[1] = v1[1] + v2[1];\r\n    new_v[2] = v1[2] + v2[2];\r\n    float scale = radius / sqrtf((new_v[0] * new_v[0]) + (new_v[1] * new_v[1]) + (new_v[2] * new_v[2]));\r\n    new_v[0] *= scale;\r\n    new_v[1] *= scale;\r\n    new_v[2] *= scale;\r\n}\r\n\r\n// first problematic function\r\nvoid add_vertices(float v1[3], float v2[3], float v3[3], float *vertices)\r\n{\r\n    vertices[0] = v1[0];\r\n    vertices[1] = v1[1];\r\n    vertices[2] = v1[2];\r\n    vertices[3] = v2[0];\r\n    vertices[4] = v2[1];\r\n    vertices[5] = v2[2];\r\n    vertices[6] = v3[0];\r\n    vertices[7] = v3[1];\r\n    vertices[8] = v3[2];\r\n}\r\n\r\n// second problematic function\r\nvoid add_indices(unsigned int i1, unsigned int i2, unsigned int i3, unsigned int *indices)\r\n{\r\n    indices[0] = i1;\r\n    indices[1] = i2;\r\n    indices[2] = i3;\r\n}\n\r\nEDIT: I forgot to post the error message\nhere it is\r\nthrough the use of breakpoints that's the same error I get all throughout the  \n\r\nadd_vertices and  \n\r\nadd_indices functions.\n\r\nEDIT 2: Thanks to some debugging, I narrowed down the problem to the subdivision loop in the subdivide function. It's not the other functions.\n\nWhat I have tried:\n\r\nRunning GDB on the code to get more information on the errors, just got the location of the seg faults instead.\r\n\t\t    ", "id": "5365259", "title": "Indexing out of bounds with arrays", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["C"]}, {"answers": [{"content": "\r\n    Without the actual code to work from, we can't be that precise.\n\r\nBut the error is pretty clear: You are accessing a collection of some form (list, array or other) using an index which is either negative, or larger than the index of the last value in the collection.\n\r\nFor example, if you have a list or an array that you are accessing in a loop, the loop counter must be less than the items count:\nC#\n\r\nfor (int i = 0; i < myCollection.Length; i++)\r\n   {\r\n   Console.WriteLine(myCollection[i]);\r\n   }Will be fine, but\nC#\n\r\nfor (int i = 1; i <= myCollection.Length; i++)\r\n   {\r\n   Console.WriteLine(myCollection[i]);\r\n   }Won't.\r\n", "id": "2_424974_1", "owner_tier": 0.9, "score": 5.0}, {"content": "\r\n    You can check if your index is in the range :\nC#\n\r\nstring[] arr = new string[3];\r\nif(index < arr.Length) // check if in range\r\n   string s = arr[index];\n", "id": "2_424975_1", "owner_tier": 0.5, "score": 5.0}, {"content": "\r\n    GridView1.DataKeys.exists(key)\r\n", "id": "2_425041_1", "owner_tier": 0.1, "score": 0}, {"content": "\nC#\n\r\nint id = GridView1.EditIndex;\r\nthis might be the issue , and as per my knowledge,GridView1.EditIndex;can not be emp_id.\n\r\n if GridView1.EditIndex return 1 or 2 , there is a possibility that you have datakey, but if you are editing some 20th row and you dont have 20 different datakeys types.\n\r\nTry to use the code C#\n\r\nint row = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);to get your emp id.\r\n", "id": "2_425360_1", "owner_tier": 0.1, "score": 0}, {"content": "\nint row = Convert.ToInt32(GridView1.DataKeys[id].Value.ToString());\r\nThis line might be throwing the error.\r\nHere id = GridView1.EditIndex, represets an index.\r\nIn (GridView1.DataKeys[id].Value.ToString(), you are trying get value from GridView1.DataKeys at index id. But there might not be any key for this index.\n\r\nCheck for that.\n\r\nHappy Coding :)\r\n", "id": "2_425497_1", "owner_tier": 0.1, "score": 0}], "link": "https://www.codeproject.com/Questions/424972/how-to-solve-index-was-out-of-range-must-be-non-ne", "question": {"content": "\r\n\t\t\t    Hi,\n\r\nCan anyone know this.\n\r\nhow to solve index was out of range. must be non-negative and less than the size of \r\nthe collection?\n\r\ncode is:\n\nC#\n\r\nprotected void GridView1_RowUpdating1(object sender, GridViewUpdateEventArgs e)\r\n   {\r\n       int id = GridView1.EditIndex;\r\n       GridViewRow rows = GridView1.Rows[e.RowIndex];\r\n       int row = Convert.ToInt32(GridView1.DataKeys[id].Value.ToString());\r\n       if (((TextBox)rows.FindControl(\"txtname\") != null) && ((TextBox)rows.FindControl(\"txtaddress\") != null))\r\n       {\r\n           TextBox txtname = (TextBox)rows.FindControl(\"txtname\");\r\n           TextBox txtaddress = (TextBox)rows.FindControl(\"txtaddress\");\r\n           con.Open();\r\n           SqlCommand cmd = new SqlCommand(\"update employee set emp_name='\" + txtname.Text + \"',emp_address='\" + txtaddr.Text + \"' where emp_id='\" + id + \"\", con);\r\n           cmd.ExecuteNonQuery();\r\n           GridView1.EditIndex = -1;\r\n           con.Close();\r\n           bind_grid();\r\n       }\r\n   }\r\n\n", "id": "424972", "title": "how to solve index was out of range. must be non-negative and less than the size of the collection?", "traffic_rate": 0}, "saved_time": 1721102225, "source": "codeproject", "tags": ["ASP.NET"]}, {"answers": [], "link": "https://stackoverflow.com/questions/11367902/negative-list-index", "question": {"content": "I'm trying to understand the following piece of code: Specifically, I don't understand what the index -1 refers to. If the index 0 refers to the first element, then what does -1 refer to?", "id": 11367902, "title": "Negative list index?", "traffic_rate": 49}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python", "list"]}, {"answers": [], "link": "https://stackoverflow.com/questions/76917637/why-does-slice-not-work-when-the-first-index-is-negative-and-the-second-is-pos", "question": {"content": "I've been learning slice() and trying all the possibities that I can think of to practice, but I came across this question. In this example which I made, I used 3 websites: And used the slice function: slice(12,-4), so only the name of the website would appear on the following print: But when attempting the opposite for example: slice(-4,5), I thought that the print would be something like: .comhttps But that didn't occur, I'm asking just out of curiosity, I know that the answer could be: \"python just doesn't work like that\", but if the answers could be more explanatory, I would appreciate it.", "id": 76917637, "title": "Why does slice() not work when the first index is negative and the second is positive, but the opposite does?", "traffic_rate": 237}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python"]}, {"answers": [], "link": "https://stackoverflow.com/questions/57838483/python-list-indexing-from-negative-to-positive-indexes", "question": {"content": "I am trying to index from a list. I understand that negative indices refer to items counting backwards from the end of the list. My question is why it does not seem possible to index over a range starting from a negative index to a positive index, even though it seems intuitive. For example, foo[-1], foo[0], foo[1] are all valid ways to index from the list foo. Why does foo[-1:1] not work?\nAlternatively, since foo[-1:] selects the last element, why does foo[-1:0] not work equivalently? It is possible to index directly from -1, 0, and 1, but not through that range -1:1.", "id": 57838483, "title": "Python list indexing from negative to positive indexes", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python"]}, {"answers": [{"content": "Yes, calling s[0:-1] is exactly the same as calling s[:-1]. Using a negative number as an index in python returns the nth element from the right-hand side of the list (as opposed to the usual left-hand side). so if you have a list as so: the print statement will print \"e\". Once you understand that (which you may already, it's not entirely clear if that's one of the things you're confused about or not) we can start talking about slicing. I'm going to assume you understand the basics of a slice along the lines of myList[2:4] (which will return ['c', 'd']) and jump straight into the slicing notation where one side is left blank. As you suspected in your post, myList[:index] is exactly the same as myList[0:index].  This is also works the other way around, by the way... myList[index:] is the same as myList[index:len(myList)] and will return a list of all the elements from the list starting at index and going till the end (e.g. print myList[2:] will print ['c', 'd', 'e']). As a third note, you can even do print myList[:] where no index is indicated, which will basically return a copy of the entire list (equivalent to myList[0:len(myList)], returns ['a', 'b', 'c', 'd', 'e']). This might be useful if you think myList is going to change at some point but you want to keep a copy of it in its current state. If you're not already doing it I find just messing around in a Python interpreter a whole bunch a big help towards understanding these things. I recommend IPython.", "id": 493057, "owner_tier": 0.9, "score": 0.9999999997560975}, {"content": "The crucial point is that python indices should be thought of as pointers to the spaces between the entries in a list, rather than to the elements themselves. Hence, 0 points to the beginning, 1 to between the first and second, ... and n to between the nth and (n+1)st. Thus l[1:2] gives you a list containing just element l[1] since it gives you everything between the two pointers. Similarly, negative indices point in between elements, but this time counting from the back, so -1 points between the last element and the next-to-last, so [0:-1] refers to a block of items not including that last one. As syntactic sugar, you can leave off 0 from the beginning or, in effect, the end, so l[n:] refers to everything from l[n] to the end (if n>=len(l) then it returns the empty list).", "id": 493083, "owner_tier": 0.9, "score": 0.09756097536585366}, {"content": "Negative indices are counted from the end, so s[:-1] is equivalent to s[:len(s)-1] and s[-1] is the last element, for example.", "id": 493079, "owner_tier": 0.3, "score": 0.04878048756097561}, {"content": "Yes, calling s[0:-1] is logically the same thing as s[:-1] since slicing is best defined as: Python allows you to omit 0 as this allows your code to more terse.", "id": 493061, "owner_tier": 0.9, "score": -2.4390243754208024e-10}], "link": "https://stackoverflow.com/questions/493046/i-dont-understand-slicing-with-negative-bounds-in-python-how-is-this-supposed", "question": {"content": "I am a newbie to Python and have come across the following example in my book that is not explained very well. Here is my print out from the interpreter: Why does slicing with no beginning bound and a '-1' return every element except the last one? Is calling s[0:-1] logically the same as calling s[:-1]? They both return the same result. But I'm not sure what python is doing exactly. Any help would be greatly appreciated.", "id": 493046, "title": "I don&#39;t understand slicing with negative bounds in Python. How is this supposed to work?", "traffic_rate": 15}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python", "slice"]}, {"answers": [], "link": "https://stackoverflow.com/questions/61435459/python-negative-indexing-differences", "question": {"content": "I am using python 3.6, pandas 24.2 and came across a difference.  both produce an error while  is fine along with any other form of index. They are the same data structure but adding certain types of an index allows negative indexing while others don't?", "id": 61435459, "title": "Python Negative Indexing differences", "traffic_rate": 861}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python", "pandas"]}, {"answers": [], "link": "https://stackoverflow.com/questions/52016803/convert-negative-index-in-python-to-positive-index", "question": {"content": "I'm trying to find a way to get the index of an item in a list in Python given its negative index, including an index of 0. For example with a list, l of size 4: I have tried using however this will not work when the index is 0. The only way I have found so far involves an if/else statement. Is there a possible way to do this in Python without having to use an if statement? I am trying to store the index of the item so I can access it later, but I am being given indices starting from 0 and moving backwards through the list, and would like to convert them from negative to positive.", "id": 52016803, "title": "Convert negative index in Python to positive index", "traffic_rate": 5706}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python", "list", "indexing"]}, {"answers": [{"content": "Q: Why will l[10] return an IndexError, but l[-1] returns 0? A: Because index values in Python (as in many other languages) are zero-based. That means the first item is stored at index 0. Your list has 10 items. Since the index starts at 0, the last item will be at index 9. When you try to access your list at index 10, Python rightly throws an IndexError exception to tell you that this is not a valid index value and is out of bounds. Python also uses the convention of negative index values to access items from the \"end\" of a list or sequence. Index value -1 indicates the last item in the list, -2 the next-to-last etc. Since the last item in your list is 0, this is what l[-1] returns. @Lattyware's answer already shows you how to generate/throw an exception, I hope this answers your initial question.", "id": 11235564, "owner_tier": 0.9, "score": -4.761904732964423e-10}, {"content": "In Python, negative list indices indicate items counted from the right of the list (that is, l[-n] is shorthand for l[len(l)-n]). If you find you need negative indices to indicate an error, then you can simply check for that case and raise the exception yourself (or handle it then and there):", "id": 11235227, "owner_tier": 0.9, "score": 0.9999999995238095}], "link": "https://stackoverflow.com/questions/11235213/why-does-python-return-negative-list-indexes", "question": {"content": "If I have this list with 10 elements: Why will l[10] return an IndexError, but l[-1] returns 0? What I want to do is throw an error if there are no previous elements in the list.", "id": 11235213, "title": "Why does Python return negative list indexes?", "traffic_rate": 3}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python"]}, {"answers": [], "link": "https://stackoverflow.com/questions/23431191/negative-indexing-in-python", "question": {"content": "I have one record in a list I am trying to get the last name 'smith' from this record I use the below command: It provides me 'smith' But the book I am referring to use the below command: it also gives me same result 'smith' Why do indexes [1] and [-1] provide the same result?", "id": 23431191, "title": "Negative indexing in Python", "traffic_rate": 4296}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python", "list"]}, {"answers": [{"content": "The farthest right you can specify with a negative index is -1, which refers to the final item in a sequence. However, slice semantics are that the index following the : is excluded from the slice. Therefore, there is no way, using a negative index to the right of the :, to include the final item in a list. You could \"fix\" this in your function by replacing -i with -i if i else len(arr): Output:", "id": 73571868, "owner_tier": 0.5, "score": 0.999999995}, {"content": "Working: When you had i started at 1, so you told it, in essence, to do Which is what caused it to print nothing. instead, start at the length of the array and incrementally subtract 1.", "id": 73571789, "owner_tier": 0.3, "score": -4.999999969612645e-09}], "link": "https://stackoverflow.com/questions/73571722/why-the-last-element-in-array-using-negative-index-slice-is-not-showing", "question": {"content": "I want to slice an array from the last element to the first element using a for loop to reduce the array, this is my code but for an reason the last element is not showing. Ignore the name of the function. Result: Expect result:", "id": 73571722, "title": "Why the last element in array using negative index slice is not showing?", "traffic_rate": 902}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python", "list", "for-loop", "slice"]}, {"answers": [{"content": "In such situations I don't prefer using css. I rather use XPath for getting the text part. So here are possible solutions with xpath I would use", "id": 45903171, "owner_tier": 0.9, "score": 0.9999999900000002}], "link": "https://stackoverflow.com/questions/45902388/how-does-python-achieve-negative-indexing-in-lists-and-string", "question": {"content": "Just curious to know, how does Python in background achieve concept of negative indexing, because it is written in C, and as far as I know there is no negative indexing in C.", "id": 45902388, "title": "How does Python achieve negative indexing in Lists and String", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "stackoverflow", "tags": ["python", "python-3.x", "list", "indexing"]}, {"answers": [{"content": "You want the last element from the list.\n\nHow would you do it without negative indexing?\n\n    my_list[len(my_list) - 1]\n\nNow this is simpler:\n\n    my_list[-1]", "id": "gjxwaj8", "owner_tier": 0.7, "score": 0.9999999989999999}, {"content": "they go from the end - i.e. `foo[-2]` == `foo[len(foo)-2]` its a shorthand.\n\nSame for slices: foo[:-2] chops the last 2 off the end..\n\nSpecifically as for *why* - well you might know know how long it is, so if you had a string and you wanted to truncate it, or if youhad an array and just wanted the last one (for like a django query set, you could say 'i want the first and last', then doing data[-1] gets the last fast and easily, without forcing your brain to read the extra code of the len() etc.", "id": "gjxwdaj", "owner_tier": 0.1, "score": -9.99999993922529e-10}], "link": "https://www.reddit.com/r/learnpython/comments/l18zv8/whats_the_use_of_negative_indexing/", "question": {"content": "Very noob question, but why would you need to use a negative index over the positive one? Why would I use [-3] over just using [2] for example?\n\nI googled this but couldn't really find an explanation anywhere", "id": "l18zv8", "title": "What's the use of negative indexing?", "traffic_rate": 153.1248148148148}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "See this stackoverflow thread: [Understanding slice notation](https://stackoverflow.com/q/509211/4082052)\n\nThanks for the link. A SO link is always a treat.", "id": "hon0loh", "owner_tier": 0.7, "score": 0.9999999975}, {"content": "On negative step, the default start and stop are reversed.\n\nStart is len-1 stop is 0.\n\nThis is what I thought but I couldn't find any link in official docs.\n\n[deleted]\n\nThanks a ton. I have gone through this page many times before and yet missed this fine prints.", "id": "hon0zp5", "owner_tier": 0.7, "score": 0.9999999975}], "link": "https://www.reddit.com/r/learnpython/comments/rgyh34/list_slicing_with_negative_index/", "question": {"content": "Although I know how slicing works but following examples kind of stumped me.\n\n    values = [3,4,3,7,8,9,5]\n    values[:3:-1]    #o/p [5,9,8]\n    values[5:3:-1]    #o/p [9,8]\n\nI always thought in `list[start:stop:step]`, 'start' defaults to 0, 'stop' defaults to length-1 and 'step' defaults to 1. But this doesn't make sense here. What are the rules? Link to official docs will also be appreciated as I couldn't find that.", "id": "rgyh34", "title": "List slicing with negative index", "traffic_rate": 153.1248148148148}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "negative index is useful if you don't know the size of a list and you want to get elements from the end of the list\n\nit is also useful in slicing for similar reasons, for example to get last two elements\n\n    >>> spam = ['cat', 'bat', 'rat', 'elephant']\n    >>> spam[-2:]\n    ['rat', 'elephant']\n    >>> spam = ['cat', 'bat', 'rat', 'elephant', 'foo', 'hi', 'bye']\n    >>> spam[-2:]\n    ['hi', 'bye']\n\nYeah agreed.  Very helpful with lists that vary in size.  For example, if you had a page of text split up into paragraphs.  From each paragraph, you want to find out the last word.\n\n`last_words = [i.split()[-1] for i in [para1, para2, para3, para4]]`\n\nThat makes sense! I'm just too fresh to fully comprehend all the use cases but I definitely see the potential in Negative Indexes.\n\nExample:  Your hosts are of the format \"device\\_name.site\\_code.orgname.tld\"\n\n    >>> def device_name(name):\n    ...   parts = name.split('.')\n    ...   device = \".\".join(parts[0:-2])\n    ...   return device\n    ...\n    >>> host1 = \"border1.sjc.mynet.org\"\n    >>> host2 = \"tor1.rack1.suite2.sjc.mynet.org\"\n    >>> device_name(host1)\n    'border1.sjc'\n    >>> device_name(host2)\n    'tor1.rack1.suite2.sjc'\n\nThe negative indexing allows you to shave off the domain.tld or orgname.tld.\n\n&#x200B;\n\nSuppose you're working with interfaces that are of the format: \"physical\\_interface.VLAN\".   Easy way to get vlan info for the interface:\n\n    >>> iface = \"Ge1/0/2.10\"\n    >>> vlan = iface.split('.')[-1]\n    >>> vlan\n    '10'\n\nOh I like this! Clean way to handle those sub interfaces (or units for Juniper)\n\nThis is awesome it relates to the Kirk Byers course im taking. Is it common practice to list the vlan at the end of the interface or is that a sub interface and you config'd it to be 2.10 to denote its VLAN?", "id": "fbdgdhj", "owner_tier": 0.7, "score": 0.9999999994117647}, {"content": "imagine i have a list of all primes below 10,000\n\nwhat if i want to find the 10th largest prime below 10,000?\n\neither i find the length of the list of primes, take 10 from that number and then index\n\nor just do `primes[-10]`\n\nsometimes you only care about something's position relative to the end\n\ni agree that in your example it makes more sense to use regular indexing, that's because your input is well defined and will only be 4 elements. it makes more sense in that scenario to think in regular indexes\n\nAwesome, thank you for taking time to help explain the concept to me! Ppreciate you.", "id": "fbdihdt", "owner_tier": 0.7, "score": 0.17647058764705884}, {"content": "There's a lot of useful cases where for negative indexes. Pathlib has eliminated this one in particular but it's the first that comes to mind: \n\nLet's say you have a file path and you want the file name (simplistic in a lot of ways, don't ever use this code):\n\n    file = 'some/file/path/file_name.txt'\n\n    file_name = file.split('/')[-1]\n\n    file_directory = '/'.join(file.split('/')[:-1])", "id": "fbex2fi", "owner_tier": 0.5, "score": -5.882352905426641e-10}], "link": "https://www.reddit.com/r/learnpython/comments/ecsyjn/negative_indexes/", "question": {"content": "Hey squad, I am currently following along with Kirk Byers and his Network Automation with Python class and I was reading through Automate The Boring stuff and was curious as to what the practical use for using a negative index would be?\n\nWhy do:\n\n\\>>> **spam = \\['cat', 'bat', 'rat', 'elephant'\\]**\n\n\\>>> **spam\\[-1\\]**\n\n'elephant'\n\n\\>>> **spam\\[-3\\]** \n\n'bat'\n\n\\>>> **'The ' + spam\\[-1\\] + ' is afraid of the ' + spam\\[-3\\] + '.'**\n\n'The elephant is afraid of the bat.'\n\nwhen you could do:\n\n\\>>> **spam = \\['cat', 'bat', 'rat', 'elephant'\\]**\n\n\\>>> **spam\\[0\\]**\n\n'cat'\n\n\\>>> **spam\\[1\\]**\n\n'bat'\n\n\\>>> **spam\\[2\\]**\n\n'rat'\n\n\\>>> **spam\\[3\\]**\n\n'elephant'\n\nI appreciate the info gang!", "id": "ecsyjn", "title": "Negative Indexes", "traffic_rate": 153.1248148148148}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "`a[-3:]` gives you `[55,66,777]`\n\nIf you want [66,777], replace -3 by -2", "id": "ia71whz", "owner_tier": 0.1, "score": 0.9999999983333333}, {"content": "Hello, I'm a Reddit bot who's here to help people nicely format their coding questions. This makes it as easy as possible for people to read your post and help you.\n\nI think I have detected some formatting issues with your submission:\n\n1. Inline formatting (`` `my code` ``) used across multiple lines of code. This can mess with indentation.\n\nIf I am correct, please edit the text in your post and try to follow [these instructions](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) to fix up your post's formatting.\n\n___\n\n^(Am I misbehaving? Have a comment or suggestion? Reply to this comment or raise an issue )^[here](https://github.com/0Hughman0/pyredditformatbot/issues).\n\nfixed", "id": "ia71fw0", "owner_tier": 0.1, "score": 0.16666666500000002}, {"content": "If you have `start`and `end` as integers that you want to select relative to the *end* of the list instead of the beginning, without special handling or an expensive list copy, and without using the normal slice notation, you can certainly do that.\n\n    >>> from itertools import islice\n    >>> a=list(range(100))\n    >>> start,end = 3,5\n    >>> a[-start:-end:-1]\n    [97, 96]\n    >>> list(islice(reversed(a), start-1, end-1))\n    [97, 96]", "id": "ia7h0qe", "owner_tier": 0.5, "score": -1.6666666565375483e-09}], "link": "https://www.reddit.com/r/learnpython/comments/uyz3n7/rant_annoying_that_there_is_no_simple_way_to/", "question": {"content": "The combination of the fact that the second `:` delimited argument of a slice is excluded and that there is no `-0` index in reverse indexing is annoying and means that you have to jump through hoops to handle edge cases.\n\nSay we have a list:\n\n```\na = [1, 2, 3, 44, 55, 66, 777]\n```\n\n\n- `a[-1]` returns `777`\n- `a[-3:-1]` returns `[55, 66]` (can't access `777`)\n- `a[-1:-3:-1]` returns `[77,66]` (what I might want, but reversed)\nso we can go `list(reversed(a[0:-3:-1]))` to return `[66, 77]`. But that is annoying.  There is also `a[-3:None]` (edit: or `a[-3:]`) but doing [both of those] programmatically requires adding an `if` condition which adds clutter and is an opportunity for a mistake. \n\nSo there is no easy/simple way to get around this problem.  I wish we could specify `-0` for negative indexing when slicing.", "id": "uyz3n7", "title": "[rant] Annoying that there is no simple way to slice the last element of a list with negative indexing", "traffic_rate": 153.1248148148148}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "You could extend the list class to do this: \n\n    class NoNegatives(list):\n        def __getitem__(self, index):\n            if index < 0:\n                raise ValueError(\"Index must be positive\")\n            else:\n                return list.__getitem__(self, index)\n\n    data = NoNegatives(range(20))\n    print(data[5])\n    print(data[-5])\n\nThat said, this smells strongly of an XY problem. There is probably a fundamentally better way to do whatever you are trying to do. ", "id": "dc7qgv1", "owner_tier": 0.7, "score": 0.7272727263636364}, {"content": "No.  Why would you even want to?\n\nI'm creating a game and it's giving me issues\n\nHow?", "id": "dc7o706", "owner_tier": 0.9, "score": 0.999999999090909}, {"content": "You could use the max function to always default to the first value in the list if you try to use a negative index. Don't know if that solves your problem.\n\n    >>> y = -1\n    >>> x = [1,2,3]\n    >>> x[max(0,y)]\n    1\n    ", "id": "dc7rknc", "owner_tier": 0.1, "score": -9.090909090909091e-10}], "link": "https://www.reddit.com/r/learnpython/comments/5n0a71/is_it_possible_to_disable_negative_indexing_in_a/", "question": {"content": "", "id": "5n0a71", "title": "Is it possible to disable negative indexing in a list??", "traffic_rate": 153.1248148148148}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "> I built a class for each element that calculates the indices to access the adjacent elements. However, if the element is at the top row or the left most column, the class will calculate the adjacent element to have an index of -1\n\nIs it out of the question to modify the logic that calculates the adjacent indices?\n\nNothing is out of the question, this is just something I am building for fun this morning after thinking about r's volcano dataset. \n\nI guess I could add the condition, if the value of the index is < 0, return \"None\" and then modify the subsequent methods to handle \"None\"\n\nAlternatively, since you already handle IndexError, just add raise one:\n\nif index<0:\n\nraise IndexError('Too low')\n\nWhen calculating adjacent indices, consider if it's possible to return only adjacent indices that are actually **in** the matrix.\n\nThat would work too, I forgot I could raise my own errors haha. I ended up just modifying the index calculation lines to return None if the index is outside the bounds of the matrix, removed the IndexError, and subbed in a TypeError. This will handle indices less than 0 and greater than the dimensions of the matrix.\n\nRight, that's what I'll try first. I already pass the matrix itself as an argument in the class, so I have the height and width of it. I can set the bounds there and forget about the IndexError.", "id": "er5uxdo", "owner_tier": 0.3, "score": 0.9999999991666666}, {"content": ">  I have an array (a list of lists)\n\nThat's called a 2D list, or sometimes a \"matrix\". An \"array\" is something else in python. \n\n> Is there a way to catch this -1 and group it with the same exception that would return \"None\"?\n\nOnly if you make your own list object. Which isn't that hard: \n\n    class Radil(list):\n        def __getitem__(self, index):\n            if index < 0:\n                raise IndexError(\"list index out of range\")\n            return super().__getitem__(index)\n\n    data = Radil([1,2,3])\n    print(data[0]) # works normally\n    print(data[4]) # raises IndexError\n    print(data[-1]) # raises IndexError\n\nThat said, modifying your code to deal with normal lists as /u/Clede mentioned is a much better approach.\n\nThis is interesting. Didn't think about this. If all else fails, I can work with this.", "id": "er5v4d9", "owner_tier": 0.7, "score": -8.333333282687742e-10}], "link": "https://www.reddit.com/r/learnpython/comments/c0muev/is_there_a_way_to_have_a_negative_index_1_return/", "question": {"content": "Basically I have an array (a list of lists), and I want to access the values of all of the elements that are adjacent to that element in the array (up, down, left, right) and evaluate them. I built a class for each element that calculates the indices to access the adjacent elements. However, if the element is at the top row or the left most column, the class will calculate the adjacent element to have an index of -1, which is outside of the array. This then gets passed to a method to get the value of the adjacent element and it returns the element in the last position. Which is not what I want. \n\nI have the function set up to catch an IndexError if it tries to access an element outside of the array, but because of the way python handles negative indices, this only works if the adjacent element is beyond the right column or bottom row. This try/except sets the value of the adjacent element to \"None\" and that will be handled by the function that I am trying to run over this array. \n\nIs there a way to catch this -1 and group it with the same exception that would return \"None\"? Basically force python to see this as outside of the bounds of the array, rather than accessing the last element instead? This also presents a problem because my function is a pathfinder. If there are no bounds to the array, it could potentially get stuck in an infinite loop.\n\nEdit: I just changed the logic within the class to return None if the index was less than 0 or greater than the dimension of the array. This would result in a TypeError (NoneType not subscriptable) and then changed the error handling to catch a TypeError instead.", "id": "c0muev", "title": "Is there a way to have a negative index [-1] return an IndexError instead of the last item in the list?", "traffic_rate": 153.1248148148148}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "If I try to run that program (and I fix the `inded -= 1` typo to index), it won't work.\n\n`string[index]` is a letter. For your input `test` it will start at index -1 which is `t`. The minus operator won't work on type `str`. Furthermore the `>=` also won't work between `int` and `str`.\n\nWhat's the idea with `while index >= -string[index]:`? Currently you are comparing the index to a letter and I guess that is not what you actually wanted to do.\n\nThanks, I fixed the typo.\n\nI also forgot to type \"len\" into the example because I'm a moron.\n\nSo it should look like: while index >= -len(string\\[index\\]):  \nWhich would  convert the index to an integer, so comparing the value as an integer within the index against the index variable initially set at -1.\n\nThat still doesn't quite work. You get only the last character and then stop.\n\nThere are already answers that suggested how to change the code, so I won't go into that. I'll rather try to explain to you what your code does and where the issue is.\n\nGoing step by step:\n\nWe start with `index = -1`. Let's enter the input `asdf`. What is `-len(string[index])`?\n\n`string[-1]` is the string `\"f\"`  \n`len(\"f\")` is `1`  \nwhich means `-len(string[-1])` is `-1`.\n\nYour while loop comparison `-1 >= -1` is True and the loop runs. You print `\"f\"`.\n\nYou set your index to `-2`.\n\nWhat's `-len(string[-2])`?\n\n`string[-2]` is the string `\"d\"`  \n`len(\"d\")` is again `1`  \nwhich means `-len(string[-1])` is again `-1`.\n\nYour while loop comparison `-2 >= -1` is False and the loop stops.\n\n---\n\nMaybe you want to use `-len(string)` without the index there? That would work. You start with `-1 >= -4` and end with `-4 >= -4`.\n\nYeah, `-len(string)` works.\n\nAnd now I see why you'd want to use operand >= instead of <=, because `-len(string)` turns that end of the condition to a value of -4. When the loop iterates, the following value would be -3 which is greater than -4. \n\nThanks for your help here!\n\nYou could also get rid of the slightly confusing minus signs. Essentially you seem to want to count from 1 to the input length (inclusive) and use that as a negative index.\n\nSo you could keep everything as positives and only use the minus where you use the list slice `[index:]` on the input\n\n    string = input(\"Please enter string: \")\n    index = 1\n    while index <= len(string):\n        print(string[-index:])\n        index += 1", "id": "jvbzg99", "owner_tier": 0.5, "score": 0.9999999983333333}, {"content": "Here you go.\n\n    s = \"test\"\n    for i in range(-1,-len(s)-1,-1):\n        print(s[i:],end=\"\")\n\nThe real trick here is the range iterator by doing:\n\n    range(-1,-len(s)-1,-1)\n\nit comes down to \n \n    range(-1,-4-1,-1)\n\nwhich comes down to\n\n    range(-1,-5,-1)\n\nWhich will count this way, when ```s ``` is 4 letters long:\n    \n    [-1,-2,-3,-4]\n\nWhich will build the following:\n\n    test[-1:] : 't'\n    test[-2:] : 'st'\n    test[-3:] : 'est'\n    test[-4:] : 'test'\n   \nEvidently a way to simplify this complex range is to use positive index and make them negative only when we use them. So we count [1,2,3,4] but we use a minus sign before using the index:\n\n    s = \"test\"\n    for i in range(1,len(s)+1):\n        print(s[-i:],end=\"\")\n\nI don't understand why OP's using negative indexing at all in this example.\n\n    string = input(\"Please enter string: \")\n    for index in range(len(string)-1, -1, -1):\n        print(string[index:], end='')\n\nworks just fine, and the intent is clearer to anyone reading the code.\n\nBecause OP is learning!", "id": "jvbzwyw", "owner_tier": 0.5, "score": 0.49999999833333336}, {"content": "Well negative numbers go past zero so \n\nSo >= can go past zero -1 >= -3 for example. \n\nAs for negatives indexes, the just go from the end of the list to the beginning so if you ever want the last thing in a list my_list[-1] gets you there\n\nThis is just iterating through the list backward\u2026poorly.", "id": "jvchlzd", "owner_tier": 0.7, "score": -1.6666666565375483e-09}], "link": "https://www.reddit.com/r/learnpython/comments/15lp7q0/help_understanding_negative_indexing_with/", "question": {"content": "I'm working on some exercises and the one I'm working on is asking for a program that writes the last indexes from an input string. For example, writing the word \"test\" would print like:tstesttest\n\nI have the solution, which uses:\n\n    string = input(\"Please enter string: \")\n    index = -1\n    while index >= -len(string[index]): # >= to me implies that condition of 0 or higher needs to be met for program to run through the while loop\n    \n    #rest of solution:\n        print(string[index:])\n        index -= 1\n    \n\nBut why does counting backwards (-1, -2, -3) work when using {variable} > -1 ? Is this just something that's specific to indexing?\n\nedit: My bad, I fixed some of the typos and corrected the code to actually mirror my solution", "id": "15lp7q0", "title": "Help understanding negative indexing with conditionals", "traffic_rate": 153.1248148148148}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "The default step size is 1, regardless of whether the second index is larger than the first and regardless of whether you're using negative indices. If you want to print a reversed string, you'll have to explicitly specify a step size of `-1`.", "id": "ieyetzc", "owner_tier": 0.3, "score": 0.199999998}, {"content": "Ranges in this manner are always `[start : end]`. Since index `-1` comes after index `-8`, this results in an empty range\n\nIf you want to reverse the direction as well, you need to also pass the third parameter (step):\n\n    print(text[-1 : -8 : -1])", "id": "ieyf33b", "owner_tier": 0.3, "score": -1.999999987845058e-09}, {"content": "Slice syntax is `[start:end:step]` (any of these are optional).\n\n`[-1:-8]` starts at the last character, and goes to the 8th from the last character. However, this places the start *after* the end, meaning you get an empty string. If you want the result, but backwards, then you need to specify a *negative step value*, making your slice `[-1:-8:-1]`.\n\n[deleted]\n\n`print` doesn't actually know what the slice values are. When you slice a string, you get a new string back. Don't get confused there; `print` isn't doing anything, it's just printing a string, and it's the slice notation that actually constructs the string you want to print. You need the negative step for that reason, though, yes; by default, the `step` is `1`, meaning characters will be taken from left to right. But since the `start` value is further to the right than the `end` value, there's no characters to take. By making `step` negative, you reverse that direction.\n\n[deleted]\n\nCorrect.\n\nYour questions aren't dumb, by the way. You're learning, and by definition that means you can't be expected to know everything. Having questions is normal and expected, just as long as you put some effort into understanding and researching things rather than expecting everyone to spoonfeed you the answer (not accusing you of doing any of that by any means).", "id": "ieyfdip", "owner_tier": 0.7, "score": 0.9999999980000001}], "link": "https://www.reddit.com/r/learnprogramming/comments/vs0yel/why_cant_i_print_negative_indexes_in_python/", "question": {"content": "[deleted]", "id": "vs0yel", "title": "Why can't I print negative indexes in Python?", "traffic_rate": 759.4066198224853}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "There's a better alternative that doesn't seem to be considered often.\n\nLet the language provide a type `FromEnd` that contains a single integer. Let the language provide a value `END` that contains the integer 0 (maybe use the token `$` for this if your language likes that idea).\n\nLet the indexing operator be overloaded, such that it can take a value of type `integer` *or* a value of type `FromEnd`.\n\nThat way, you can type `numbers[END-1] == 30` (or `numbers[$-1] == 30` perhaps). This avoids the need to repeat the array name, which I find gets very awkward.\n\nAlso, you can support `END-0`, which is impossible without the overload.\n\nIs this about backwards indexing? (Indexing counting from the end of an array.)\n\nI use the special symbol `$`, which in the context of an array index, indicates the last element of the array. So in my languages, `A[$]` means the same thing as `A[A.upb]`.\n\nThen backwards indexing is possible but it would need to be 0-based (arrays can be N-based in general):  `A[$-2]` is the third element from the end.\n\n(Where A is 0-based anyway, then both kinds of indexing correspond: `A[2]` is the third from the start, and `A[$-2]` is the third from the end. This scheme also makes it possible to have a negative lower bound.)\n\nThe problem with having `$` be the last element, rather than one-past-the-end, is that that locks you into inclusive ranges. I find that half-open ranges make life much easier.\n\nThat said, I definitely agree that allowing arbitrary start index is useful enough for the minimal cost it has.\n\nMy languages use inclusive ranges anyway (plus various characteristics at odds with most popular languages now).\n\nBut when you add such a feature, you get to define what it means. In a language where arrays are always 0-based, you might prefer having it denote the length of the array.\n\nHowever, if it is the index of last element, then forward and reverse indexing are symmetric: A\\[0\\] is the first element, and A\\[$-0\\] is the last.", "id": "hcrvch8", "owner_tier": 0.7, "score": 0.9999999993333333}, {"content": "First of all, it's a handy capability, so +1 on the capability.\n\nThe issue with negative indexes is that arrays have to handle the index `i`. If it were just `-1`, then the compiler could see that constant value and act accordingly, but with it being any value `i`, now the runtime has to handle the negative value ... on every single array access! (And there will be trillions!)\n\nSo I would vote against the regular `[]` operator handling negative values, if you are planning to optimize for performance.\n\nHaving spent a fair bit of time trying to come up with a better answer, though, here is my better answer:\n\n* &#x200B;\n\nYeah. I don't have one. \ud83d\ude1e\n\nThe best I have, thus far, is an optimized reverse, e.g.: `val lastElement = array.reversed()[0];`\n\nThat may seem expensive, but in our object model, a new object does not necessarily require any allocation or initialization, so `reversed()` could be \"free\" (same identity; different vtable).\n\nIndeed, `reversed()` is essentially a _view_ of the collection.\n\nIt's also nice to have such a view for reverse iteration (top 10 vs bottom 10 in a sorted collection), so while you are at it you may as well implement indexing on top.\n\nAnd if the cost is too big (say, loop), then the user can optimize it to:\n\n    var last = array.length() - 1;\n\n    for ...\n        array[last - i]\n\nYes. The way we've done it, we don't explicitly say that it's a view, but we explicitly say that it could be; see [List](https://github.com/xtclang/xvm/blob/d19e315b146dd9bb3b57c52d077daf69da3cc2c7/ecstasy/src/main/x/collections/List.x#L653). There is a separate method, `reify()`, (on [Collection](https://github.com/xtclang/xvm/blob/d19e315b146dd9bb3b57c52d077daf69da3cc2c7/ecstasy/src/main/x/collections/Collection.x#L583), on [Sliceable](https://github.com/xtclang/xvm/blob/d19e315b146dd9bb3b57c52d077daf69da3cc2c7/ecstasy/src/main/x/Sliceable.x#L79), and on [Array](https://github.com/xtclang/xvm/blob/d19e315b146dd9bb3b57c52d077daf69da3cc2c7/ecstasy/src/main/x/collections/Array.x#L650) \\-- which itself is a List + Collection + Sliceable) that guarantees an independent copy of the data (i.e. mutations to an underlying data structure would not leak through.)\n\nAh! My bias is showing, I was only considering immutable collections so hadn't thought of the difference :)", "id": "hcr8ddh", "owner_tier": 0.5, "score": 0.5999999993333333}, {"content": "I'm not a fan of negative-index-wraps-around.  An obscure feature that can accidentally be invoked by an erroneous run-time value is not my idea of a good time.\n\nEven for slow dynamic languages like Perl and Python, NIWA seems way too clever/precious.  Outside of palindrome interview questions, the need to count backwards from the end is relatively rare, and `thing[thing.length - N]` makes more sense in those cases.\n\nAs others have mentioned, if you really want to support this functionality, you can choose a separate method.  Either `thing.index_from_end(N)` or `thing.reverse()[N]` would be a major improvement over NIWA,", "id": "hcs9g6l", "owner_tier": 0.3, "score": 0.266666666}, {"content": "For those that are curious: Inko uses the following code to support negative indexes:\n\n- [This code](https://gitlab.com/inko-lang/inko/-/blob/8cd94040be77526e2f8d750ac4870a98a4c9ea88/vm/src/slicing.rs#L19-43) is used for converting signed indexes\n- It relies on [this code](https://gitlab.com/inko-lang/inko/-/blob/single-ownership/vm/src/numeric.rs#L47-63) to implement the modulo operator\n\nI don\u2019t understand the need for the modulo operator. Doesn\u2019t doing `length + Val` give the right index when val is negative?\n\nSort of. The modulo operator means you can do something like `-1037023` for a list with 4 values, and still get a valid index (since it wraps around). That's mostly an artefact from when out of bounds access would produce Nil, something that has been removed since.\n\nWithout that it indeed becomes simpler, but you'd still have a branch (as you need to check for the length), which likely can't be predicted reliably. That might not matter much for a high-level language though.", "id": "hcqmbtl", "owner_tier": 0.5, "score": 0.6666666659999999}, {"content": "I prefer Scala's approach of indexing into a reversed view of a collection.\n\n```\nList(1, 2, 3).view.reverse(0) // 3\n```", "id": "hcskgme", "owner_tier": 0.5, "score": 0.13333333266666667}, {"content": "Yay. Python works like that, but the typing system is different  from what I can see abd the described problems do not apply. A language is really an ensemble if features and it's pointless to assess features in isolation.\n\nHonestly, I've found that having signed indices for indexing from the end is only really useful with the inclusion of the range selector (e.g. `pop_drop = [0, 1, 2, 3, 4][1:-1]` or `file_stem = \"./file.txt\"[2:-4]`). So yea I agree, in isolation it's hard to say if, by itself, negative indexing is useful or not.\n\n\nEdit: when talking about Python usecases\n\nI find that negative indexing mostly pops when indexing with a variable or an expression. Besides -1, of course.\n\nYup, or \"the last n entries\" `l[-n:]`. But without slicing U think there is no benefit over `len(l) -n`", "id": "hcqwsfu", "owner_tier": 0.7, "score": 0.7999999993333333}, {"content": "Supporting negative indexing is a cost(small as it may be), but in the broader context if you are working on a dynamic lang with dynamic arrays you already need to do \"getlen\" and \"idx < len\" checks so a sign bit check is not going to add that much more.\n\nThis is it. A language like CPython already has to do a bounds check.\n\nOnly when values are outside 0..N-1 do you then do a further check for a valid negative index. Something like this I think, for 0-based arrays:\n\n    if u64(Index) >= u64(N) then\n        Index += N\n        if u64(Index) >= u64(N) then\n            .... Bounds error\n        end\n    end\n    \n    Access A[Index] ...\n\nYou wouldn't want to do this inline at 1000 places in static code especially when the vast majority of index ops will be conventional. So it mainly suits interpreted code when this logic is only written in one place and the cost of the extra check is zero.", "id": "hct48f2", "owner_tier": 0.3, "score": 0.066666666}, {"content": "I previously had negative indexes for indexing from the end because I thought (still think) it was rather handy.\n\nHowever, it ended up being a little bit confusing, especially when selecting slices. I ended up deciding that it was more useful to be able to approach the edge and go over it, e.g. 1..3 gives first three, 0..2 gives first two, -1..1 gives just the first and -2..0 has no elements. Similarly, 1..-1 should logically be an empty range when considering the approach from the right.\n\nI also concluded like you that it was mostly -1 being used to signal \"end\", so I introduced the context-specific value \"last\" for that instead. 2..last reads much better than 2..-1", "id": "hcxjb0q", "owner_tier": 0.1, "score": -6.666666626150194e-10}, {"content": "I have think (but not implemented) a way that go above this and make \"index\" into things more flexible.\n\nIs partially inspired in how work in [Pascal](http://www.delphibasics.co.uk/Article.asp?Name=Sets):\n\n    nums := [1, 2, 3]\n    \n    //# is the \"index\" operator\n     nums # 0 = 1\n     nums # 1 = 2\n nums # 2..3 = [2, 3]\n nums # 2..3 = [2, 3]\n\n    enum Position {First, Second, Third}\n    \n    nums # First = 1\n    nums # [First, Third] = [1, 3]\n\nOne question is if I allow to have pseudo-indexes like \"first/last\" or allow to have indexing functions:\n\n    fn last(items):UInt //needs certain signature\n       items.len()\n    \n    nums # last = 3", "id": "hd4bmp8", "owner_tier": 0.5, "score": -6.666666626150194e-10}], "link": "https://www.reddit.com/r/ProgrammingLanguages/comments/pno9jm/negativesigned_integer_indexing_yay_or_nay/", "question": {"content": "Inko currently allows you to use negative/signed indexes for arrays and byte\narrays. When used, indexing starts at the end. For example:\n\n    let numbers = Array.new(10, 20, 30)\n\n    numbers[-1] # => 30\n    numbers[-2] # => 20\n\nI originally implemented this without much thought: Ruby did it, it was\nsometimes useful there, so I copied it.\n\nSigned indexes bring some trouble though:\n\n1. You can only represent indexes up to (2^63)-1. Now I think most\n   programs won't store that many values in a single collection, but it's\n   something one has to keep in mind.\n1. You need to convert the signed indexes into unsigned indexes. This requires\n   something like `((index % length) + length) % length`, which is a fair number\n   of instructions.\n1. I have doubts about how useful it really is.\n\nProblem one and two come down to the same: complexity. For example, for Inko\nthis comes in two pieces:\n\n1. A function that takes a signed index and an unsigned length, and converts the\n   index to an unsigned index. My function _does_ support collections larger\n   that (2^63)-1 by upcasting the length and index to an i128, but the index size\n   is still limited to (2^63)-1.\n1. A function to implement the modulo operator (not the remainder). Rust doesn't\n   provide one (it uses remainder), so I had to write my own.\n\nWhile this is hidden from the user, _I_ do have to deal with it, and like most\nthe less code I have to deal with the better.\n\nProblem 3 is more subjective. The most commonly used negative index is simply\n`-1` to get the last value. This however can be handled by introducing a\ndedicated `last()` function. I actually think this is more clear if one isn't\nused to signed indexes. Besides that, indexes like -2, -3, etc are rarely used\nin my experience. For example, in the GitLab Rails source code I can only find\n37 instances of -1 being used, 11 instances of -2, and only one instance of -3.\n\nWith this in mind, I'm starting to think signed indexes aren't really worth the\ntrouble. If you really need to index from the back, you can just do\n`thing[thing.length - N]`.\n\nWhat are the thoughts of the subreddit on this matter? Does your language\nsupport signed indexes? Or am I not too far off wanting to remove support for\nthis?", "id": "pno9jm", "title": "Negative/signed integer indexing: yay or nay?", "traffic_rate": 16.86659877800407}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "Yeah, that's pretty much it.\n\nYou can always look things like this up in the Python documentation: the docs for [`str.find`](https://docs.python.org/3/library/stdtypes.html#str.find) are brief, but do say:\n\n> Return `-1` if *sub* is not found.\n\nThank you!  I'm still sifting through books, web sites, You Tube videos, etc.  A lot to learn, a lot to remember, a lot to keep track of.  Just have to be patient, give it time, and absorb what I can.  Thank you again.\n\nIn general, I'd say prioritize reading official documentation when dealing with something new. It generally gets to the point faster and gives more information (and the information it gives is official). Other resources like videos may be better at exploring use, but docs give important usage information that you should keep in mind before using something.\n\nThank you for the advice.  I'm taking it to heart.", "id": "i72ijx1", "owner_tier": 0.5, "score": 0.9999999966666664}, {"content": "Yep, that's right! And you can verify that by the [API doc](https://docs.python.org/3/library/stdtypes.html) .\n\nThank you, and thank you for the quick response.", "id": "i72i95t", "owner_tier": 0.3, "score": -3.333333313075096e-09}, {"content": "Basically, yes. If you are unsure why -1, exactly, then I have two reasons:\n\nFirst, 0 is a valid index, so it can't really be used to indicate a missing value. Second, uniformity is useful, as with `-1` chosen to represent a missing value, all you'd need to do is add `+1` to the result to check if a match was found, because `-1+1 == 0` and therefore false. All valid indexes + 1 would be 1 or more.\n\n    stuff = [...]\n    if (idx := stuff.find(42)) +1:\n        print(f\"Found at index {idx}\")\n    else:\n        print(\"Not found.\")\n\nIf that is the actual reason -1 was chosen (the adding one bit) I hate it. Never use that to check if a match was found in real code.\n\n    if (idx := stuff.find(42)) != -1:\n\nis much more understandable.\n\nEdit: Just thought I'd mention I'm not knocking you for sharing this info, just saying the technique would be hard to interpret in context.\n\nWell, my example was just meant to show one possible way to make use of it. In reality it's a remnant of how C would've done the same, and Python took a lot of inspiration from C (even if that may not be obvious at first). So basically the reason is ultimately historical in nature.", "id": "i72u1ul", "owner_tier": 0.7, "score": -3.333333313075096e-09}], "link": "https://www.reddit.com/r/learnpython/comments/ugy1ad/newbie_does_a_negative_1_find_return_mean_nothing/", "question": {"content": "  \n\nHello, everyone, thank you for letting me post here.\n\nI am brand new to Python, having begun studying it less than a month ago. I do have a little bit of programming knowledge, having taken a BASIC course in college, but that was over 40 years ago. (I\u2019m 62.) I\u2019ve been reading and watching videos, but haven\u2019t written any code from scratch yet. (I\u2019m still learning the fundamentals.)\n\nI found a piece of code on the Web that I understand for the most part, except for one part of it. I think I know how it works, and I\u2019m here to ask you to tell me if I\u2019m correct or not.\n\nThe code just prints out parts of a small string, in a few different ways. Here\u2019s the code, which I got from [https://www.mikedane.com/programming-languages/python/](https://www.mikedane.com/programming-languages/python/). (Giving credit where credit is due.)\n\ngreeting = \"Hello\"\n\n\\#indexes: 01234\n\nprint( len(greeting) )\n\nprint( greeting\\[0\\] )\n\nprint( greeting\\[-1\\] )\n\nprint( greeting.find(\"llo\") )\n\nprint( greeting.find(\"z\") )\n\nprint( greeting\\[2:\\] )\n\nprint( greeting\\[2:3\\] )\n\nHere is the result:\n\n\"C:\\\\Users\\\\====\\\\PycharmProjects\\\\Test Project 1\\\\venv\\\\Scripts\\\\python.exe\" \"C:/Users/j====/PycharmProjects/Test Project 1/main.py\"\n\n5\n\nH\n\no\n\n2\n\n\\-1\n\nllo\n\nl\n\nProcess finished with exit code 0\n\nMy question is: Why does the z in **print( greeting.find(\"z\") )** return -1 as a result?\n\nMy best guess is this: This code looks for the letter z in the string. There is none. However, it cannot return 0 (zero) as the result, because 0 is the first value in the index, which represents the letter H. \n\nSo, Python returns a negative 1 instead, to indicate no z was found.\n\nAm I correct? Thank you! J. Danniel", "id": "ugy1ad", "title": "Newbie: Does a Negative 1 Find Return Mean Nothing Was Found?", "traffic_rate": 153.17203703703703}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "reddit"}, {"answers": [{"content": "\n \n\r\nIndex was out of range. Must be non-negative and less than the size of the collection parameter name:index\r\nUse the debugger to inspect variable a line of error.\r\nCheck number of rows of DataGridView1 and compare with e.RowIndex\r\nCheck number of Cells in DataGridView1.Rows[e.RowIndex] and make sure there is at least 7.\n\r\nYour code do not behave the way you expect, and you don't understand why !\n\r\nThere is an almost universal solution: Run your code on debugger step by step, inspect variables.\r\nThe debugger is here to show you what your code is doing and your task is to compare with what it should do.\r\nThere is no magic in the debugger, it don't know what your is supposed to do, it don't find bugs, it just help you to by showing you what is going on. When the code don't do what is expected, you are close to a bug.\r\nTo see what your code is doing: Just set a breakpoint and see your code performing, the debugger allow you to execute lines 1 by 1 and to inspect variables as it execute.\nDebugger - Wikipedia, the free encyclopedia[^]\nDebugging C# Code in Visual Studio - YouTube[^]\r\nThe debugger is here to only show you what your code is doing and your task is to compare with what it should do.\r\n", "id": "2_1244905_1", "owner_tier": 0.5, "score": 0}], "link": "https://www.codeproject.com/Questions/1244903/How-do-I-remove-the-value-must-be-non-negative-err", "question": {"content": "\r\n\t\t\t    Hello,\n\r\nI am having an issue with DataGridView1_CellClick event. Whenever I am clicking on any column(cell), I am getting an error \n\r\nIndex was out of range. Must be non-negative and less than the size of the collection parameter name:index.\n\r\nThe error is in the first line itself:\n\n\n\r\nif (Convert.ToString(DataGridView1.Rows[e.RowIndex].Cells[6].Value) != \"\")\n\r\nPlease help.\n\r\nRegards\r\nAman Chaurasia\n\nWhat I have tried:\n\n\n\r\ntry\r\n            {\r\n                if (Convert.ToString(DataGridView1.Rows[e.RowIndex].Cells[6].Value) != \"\")\r\n                {\r\n                    if (ZonesItems == null)\r\n                    {\r\n                        if (PictureBox1.Image == null)\r\n                        {\r\n                            DrawZonesFromDgv(Convert.ToString(DataGridView1.Rows[e.RowIndex].Cells[6].Value));\r\n                        }\r\n                        else\r\n                        {\r\n                            DrawZonesFromDgv();\r\n                        }\r\n                        if (ZonesItems.Count > 0)\r\n                        {\r\n                            foreach (var Zone in ZonesItems)\r\n                            {\r\n                                if (Zone.ZoneNo == Convert.ToInt32(DataGridView1.Rows[e.RowIndex].Cells[6].Value))\r\n                                {\r\n                                    Zone.Clicked = true;\r\n                                }\r\n                                else\r\n                                {\r\n                                    Zone.Clicked = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        if (ZonesItems.Count > 0)\r\n                        {\r\n                            foreach (var Zone in ZonesItems)\r\n                            {\r\n                                if (Zone.ZoneNo == Convert.ToInt32(DataGridView1.Rows[e.RowIndex].Cells[6].Value))\r\n                                {\r\n                                    Zone.Clicked = true;\r\n                                }\r\n                                else\r\n                                {\r\n                                    Zone.Clicked = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    PictureBox1.Invalidate();\r\n                }\r\n                if (e.ColumnIndex == 3 || e.ColumnIndex == 4)\r\n                {\r\n                    RichTextBox2.Text = Convert.ToString(DataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex].Value);\r\n                    DatagridRowClicked = e.RowIndex;\r\n                    DatagridColClicked = e.ColumnIndex;\r\n                }\r\n            }\r\n            catch(Exception ex)\r\n            {\r\n                MessageBox.Show(ex.Message);\r\n            }\n", "id": "1244903", "title": "How do I remove the \"value must be non-negative\" error?", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["C#", "Visual-Studio", "WinForms"]}, {"answers": [{"content": "\r\n    You can try to change C#\n\r\nif (e.RowIndex >= -1)toC#\n\r\nif ((e.RowIndex > -1) && (e.RowIndex < dataGridView1.Rows.Count))to filter out that edge case where you get an array-out-of-bounds issue.\r\n", "id": "2_5316844_2", "owner_tier": 0.5, "score": 0}], "link": "https://www.codeproject.com/Questions/5316842/Index-was-out-of-range-Must-be-non-negative-and-le", "question": {"content": "\r\n\t\t\t    I work on a c# quiz. So the way it's going to work is that when someone clicks on the Datagrid view that shows the question. Whichever question id is clicked it will show the matching multiple choice question.\n\r\nThis is my code that shows the data from the grid into the text box\n\nC#\n\r\nprivate void dataGridView1_CellMouseClick(object sender, DataGridViewCellMouseEventArgs e)\r\n        {\r\n            if (e.RowIndex >= -1)\r\n             {\r\n                DataGridViewRow row = dataGridView1.Rows[e.RowIndex];\r\n                textBox2.Text = row.Cells[0].Value.ToString();\r\n                textBox3.Text = row.Cells[1].Value.ToString();\r\n                textBox4.Text = row.Cells[2].Value.ToString();\r\n                textBox5.Text = row.Cells[3].Value.ToString();\r\n            }\r\n        }\n\n\n\n\r\nI'm getting an Index is out of range error. I'm not sure what the issue is. I'm just trying to show the data in the other four rows of my access database.\n\nWhat I have tried:\n\r\nI have tried removing the index but it not working. I saw another post with this error but it's not really working.\r\n\t\t    ", "id": "5316842", "title": "Index was out of range. Must be non-negative and less than the size of the collection. Error within C# [closed]", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["C#", "WinForms"]}, {"answers": [{"content": "\r\n    Python allows negative indexes to lists, with -1 being the last item, -2 the second to last, and so forth.\r\nSo your code:\n\n\r\nmy_list = [3, 1, -2]\r\nprint(my_list[my_list[-1]])Is the equivelant of:\n\n\r\nindex = my_list[-1]\r\nprint(my_list[index])Since -1 is the last element of the list, index becomes -2, which accesses the second to last element of the list and prints it: 1\r\n", "id": "2_5309213_1", "owner_tier": 0.9, "score": 2.0}], "link": "https://www.codeproject.com/Questions/5309212/Trying-to-understand-why-this-is-the-output", "question": {"content": "\r\n\t\t\t    I am currently learning python and working my way through a course, just done an end of module exam. There was one question I got wrong but I don't understand how the output is what it is.\n\n\nPython\n\r\nmy_list = [3, 1, -2]\r\nprint(my_list[my_list[-1]])\n\n\r\nThe output is 1, can some explain why that is please?\n\nWhat I have tried:\n\r\nI have searched around the internet with not luck\r\n\t\t    ", "id": "5309212", "title": "Trying to understand why this is the output", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["Python3.6"]}, {"answers": [{"content": "\r\n    Python indexes start from zero - so if you have 5 elements in a collection, the only valid indexes are 0, 1, 2, 3, and 4 - any negative number or value greater than four will cause an index out of range error.\n\r\nPixels are organised the same way: so unless your image is exactly square and has dim values in both x and y directions, your code will fail because you access the pixel using the index plus one. I'd suggest using the debugger to check the image dimensions, and think about why your code is trying to access x + 1 and y + 1 at all!\r\n", "id": "2_5321296_1", "owner_tier": 0.9, "score": 5.0}], "link": "https://www.codeproject.com/Questions/5321292/How-do-I-fix-image-index-out-of-range-with-pillow", "question": {"content": "\r\n\t\t\t    This is my code:\nPython\n\r\nfor y in range(0, dim, 3):\r\n    for x in range(0, dim, 4):\r\n        img.putpixel((x, y), color2)\r\n        if not (x+1 > dim):\r\n            img.putpixel((x+1, y), color2)\r\n        if not (x+2 > dim):\r\n            img.putpixel((x+2, y), color2)\r\n        if not ((x+2 > dim) and (y+1 > dim)):\r\n            img.putpixel((x+2, y+1), color2)\r\nI am trying to make a sharkskin pattern by drawing pixels, but keep getting \"IndexError: image index out range.\" I literally have the whole if not () check there so it doesn't. Why does it not respect that statement, oh and btw dim is the dimension of the image (same on both axis)\n\nWhat I have tried:\n\r\nI have tried adding a function checking so it doesn't happen, but it still does.\r\n\t\t    ", "id": "5321292", "title": "How do I fix image index out of range with pillow", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["Python", "picture"]}, {"answers": [{"content": "\nQuote:Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\nAre you sure RequestHeader's first row is number 0 and not 1 ?\n\r\nYour code do not behave the way you expect, or you don't understand why !\n\r\nThere is an almost universal solution: Run your code on debugger step by step, inspect variables.\r\nThe debugger is here to show you what your code is doing and your task is to compare with what it should do.\r\nThere is no magic in the debugger, it don't know what your code is supposed to do, it don't find bugs, it just help you to by showing you what is going on. When the code don't do what is expected, you are close to a bug.\r\nTo see what your code is doing: Just set a breakpoint and see your code performing, the debugger allow you to execute lines 1 by 1 and to inspect variables as it execute.\n\nDebugger - Wikipedia, the free encyclopedia[^]\n\nMastering Debugging in Visual Studio 2010 - A Beginner's Guide[^]\nBasic Debugging with Visual Studio 2010 - YouTube[^]\n\nVisual Basic / Visual Studio Video Tutorial - Basic Debugging - YouTube[^]\nVisual Basic .NET programming for Beginners - Breakpoints and Debugging Tools[^]\n\r\nThe debugger is here to only show you what your code is doing and your task is to compare with what it should do.\r\n", "id": "2_5292606_1", "owner_tier": 0.5, "score": 0}, {"content": "\nIndexOutOfRangeException\nIndex was out of range. Must be non-negative and less than the size of the collection.\n\r\nError type and the contents are self-explanatory in themselves. You are trying to use/access certain index which does not exists for a given collection object. \n\r\nJust look around the code line where you get this error and correct the logic that is trying to access the index which does not exist. \n\r\nDetails on the same:IndexOutOfRangeException Class[^]\n\r\nThis surely would help: Troubleshooting Exceptions: System.IndexOutOfRangeException[^]\n\n\r\nIf error is occuring at: Dim row1 As GridViewRow = RequestHeader.Rows(i) then it would mean that there is no row at index i (i being the value for which the error happens)\r\n", "id": "2_5292607_1", "owner_tier": 0.7, "score": 0}], "link": "https://www.codeproject.com/Questions/5292605/Index-was-out-of-range-Must-be-non-negative-and-le", "question": {"content": "\n\n\r\nIndex was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\n\n\n\r\n<pre>\r\nLine 422:\r\nLine 423:        For i As Integer = 0 To RequestHeader.Rows.Count - 1\r\nLine 424:            Dim row1 As GridViewRow = RequestHeader.Rows(i)\r\nLine 425:            Dim chkdelete As CheckBox = row1.FindControl(\"CheckItem\")\r\nLine 426:\n\nWhat I have tried:\n\n\n\r\nFor i As Integer = 0 To RequestHeader.Rows.Count - 1\r\n    Dim row1 As GridViewRow = RequestHeader.Rows(i)\r\n    Dim chkdelete As CheckBox = row1.FindControl(\"CheckItem\")\r\n\n", "id": "5292605", "title": "Index was out of range. Must be non-negative and less than the size of the collection. Parameter name: index", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["ASP.NET"]}, {"answers": [{"content": "\r\n    That won't compile without the use of the unsafe keyword - it is not recommended to use pointers in C# without very good reason and the unsafe keyword (and build option) are there to enforce that.\r\nAnd your C# code is significantly different from the C original to ensure that even with unsafe and the use of pointers, it won't do the same job without significant changes to the external code as well.\n\r\nGenerally speaking, converting from one language to another does not result in \"good code\" and starting from something using negative indexes if probably never togin to work well.\r\nYou would be much better served by using the C code as a guide, and working out why it needs such indexes. Then designing C# code that doesn't - you will get much more maintainable code as a result.\r\n", "id": "2_1216087_1", "owner_tier": 0.9, "score": 5.0}, {"content": "\nQuote:Convert negative index in C into C#\r\nBasically, negative indexes do not exist.\r\nYou need to understand the underlying structure which appears to have a negative index when in fact it is a positive one with another base address.\n\r\nYou need to analyze your app to understand what is what.\r\n", "id": "2_1216090_1", "owner_tier": 0.5, "score": 0}], "link": "https://www.codeproject.com/Questions/1216083/Convert-negative-index-in-C-into-Csharp", "question": {"content": "\n\n\r\nI have to convert my code from c with pointers into c#\r\ncode in C is like this \r\n\r\nmyMethodName(Word16 exc[],Word16 T0)\r\n{\r\n  Word16 *p_exc;\r\n  Word16 *a;\r\n  a=&(exc[-T0])\r\n  a++;\r\n  b=a;\r\n  c=a;\r\n  a++;\r\n  p_exc = exc;\r\nfor (i = 10; i > 0; i--)\r\n{\r\n\ts2 += ((Word32) * (b--));\r\n\ts1 += ((Word32) * (b));\r\n        s1 += ((Word32) * (c++));\r\n        s2 += ((Word32) * (c));\r\n}\r\n*(p_exc++) = (Word16)(s1 >> 15);\r\n}\n\nWhat I have tried:\n\n\n\r\nI Have tried this\r\nmyMethodName(Int16[] exc,Int16 T0)\r\n{\r\n Int16 pIndex=0;\r\n Int16 a=0;\r\n a = T0;\r\na++;\r\nb=a;\r\nc=a;\r\nfor (i = 10; i > 0; i--)\r\n{\r\n\ts2 += ((Int32) * (b--));\r\n\ts1 += ((Int32) * (b));\r\n        s1 += ((Int32) * (c++));\r\n        s2 += ((Int32) * (c));\r\n}\r\np_exc[pIndex++] = (Int16)(s1 >> 15);\r\n}\n", "id": "1216083", "title": "Convert negative index in C into C#", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["C#3.0", "C++14"]}, {"answers": [{"content": "\r\n    An array cannot have a negative index. So as far as I can see you have three options:\r\n- modify the code to use 0 based arrays\r\n- use 0 based indexing but when using the index subtract/add 2, depending on the situation.\r\n- use a Dictionary(Of TKey, TValue) Class[^]\n\r\nSome examples\nVB\n\r\nDim N1 As Integer = 100\r\nDim W1(0) As Integer\r\nReDim W1(0 To N1 + 4)\r\n\r\nFor counter As Integer = 0 To 104\r\n   W1(counter) = counter\r\nNext\r\n\r\nDim N2 As Integer = 100\r\nDim W2(0) As Integer\r\nReDim W2(0 To N2 + 4)\r\n\r\nFor counter As Integer = -2 To 102\r\n   W2(counter + 2) = counter\r\nNext\r\n\r\nDim W3 As System.Collections.Generic.Dictionary(Of Integer, Integer)\r\nW3 = New Dictionary(Of Integer, Integer)\r\nFor counter As Integer = -2 To 102\r\n   W3.Add(counter, counter)\r\nNext\r\n\n", "id": "2_1033607_2", "owner_tier": 0.5, "score": 2.0}, {"content": "\r\n    Vb6 is not the same as VB.Net. There's a lot of differencies between them. I'd suggest to read this: Upgrading Visual Basic 6.0 Applications to Visual Basic .NET and Visual Basic 2005[^] and this: omparison of Visual Basic and Visual Basic .NET[^] to find out.\n\r\nYou did not provide information about what you want to achieve, but Redim instruction[^] is usually used to reallocate storage space for an array variable. You can increase/decrease the size of array, but you need to remember that low index of array cannot be negative, because arrays are zero based, unless you use Option Base 1 statement[^]. Note that ReDim W(N-2 to N+2) statement creates new array and destoroys original one. If you want to save original array, use Preserve keyword.\n\r\nAs Mika Wendelius[^] mentioned, you can use Dictionary class, but this is not the only way. Depending on what you want to achieve, you can use custom class to manage data.\n\r\nFor further information, please see:\nVisual Basic[^] \nCreating Classes in Visual Basic .NET[^]\nUsing Classes and Structures in Visual Basic .NET[^]\nWalkthrough: Defining Classes (Visual Basic)[^]\r\n", "id": "2_1033613_2", "owner_tier": 0.5, "score": 3.0}], "link": "https://www.codeproject.com/Questions/1033605/is-it-possible-to-start-an-array-with-negative-val", "question": {"content": "\r\n\t\t\t    Here is my visual basic code \n\nVB\n\r\nSub info()\r\nIf False=0 Then\r\nReDim W(-2 to N+2)\r\nEnd If\n \n\r\nthis Coding working in vb 6.0 \r\nBut the same coding transferred to vb.net it shows an error Array lower bound to be  0 \r\nCan any one please guide me how to fix this issue\r\n\t\t    ", "id": "1033605", "title": "is it possible to start an array with negative value vb. net", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["VB"]}, {"answers": [{"content": "\r\n    This is just a guess from what little code you've shown here. I assume your error occurs in method Start since it seems to be the first thing called according to your problem description. Use the debugger and place a breakpoint at the error indicated line to see exactly what is going on.\n\r\nAt the top of your code you've created a new List (displayCard) that can hold some number \"card\" objects (the default capacity). But, at this point it is empty and has no cards in it.\n\r\nIn method Start (and in Update) you try to use the card object at index 0 of displayCard - but there are no cards in it so 0 is out of range. You need to put a card (Add method is one way) in the list first.\n\r\nAgain this is just a guess because I see no code that adds a card object to displayCard before you try to use index 0. If there is code to do this, use the debugger to find out what is happening. Valuable tools those debuggers, take it from someone who started out on a system without one.\r\n", "id": "2_5376204_1", "owner_tier": 0.1, "score": 2.5}, {"content": "\r\n    Just to add to what FreedMalloc has said, an array or ind3exable collection like a List<T> containing N elements has valid index values from 0 to N - 1.\r\nSo a List<int> that contains three valuesC#\n\r\nList<int> myNumbers = new List<int>() {10, 20, 30};Would have three valid indexes: 0, 1, and 2 - any other value (positive or negative) will give you an \"Index out of range\" exception\n\r\nSince your code explicitly uses an index of 0, and you get an out of range exception that means your collection is empty: it has no elements so it has no valid indexes.\n\r\nThe solution to that is to add at least one card to the collection!\n\r\nBut ... your code seems really muddled: I have no idea what class the code you show is in, but there are two possibilities:\r\n1) That code is part of the card class. If so, then it shouldn't be accessing display components like nameText, costText, powerText, and descriptionText because they are part of your form, not the card.\n\r\n2) That code is part of your form. If so, then it shouldn't have card related values like cardName, cost, power, and cardDescription because they are part of the individual card and should be contained there rather than duplicated.\n\r\nHave a think about what you are trying to do: I suspect you are a little hazy on the concept of classes and instances, as well as collections! :D\r\n", "id": "2_5376221_1", "owner_tier": 0.9, "score": 2.5}], "link": "https://www.codeproject.com/Questions/5376202/How-to-fix-index-was-out-of-range-Must-be-non-nega", "question": {"content": "\r\n\t\t\t    I coded it so it displays a card, exept it doesnt,\r\nThe code:\n\n\r\n   public List<card> displayCard = new List<card>();\r\n    public int displayId;\r\n\r\n    public int id;\r\n    public string cardName;\r\n    public int cost;\r\n    public int power;\r\n    public string cardDescription;\r\n\r\n    \r\n    public Text nameText;   \r\n    public Text costText;\r\n    public Text powerText;\r\n    public Text descriptionText;\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    // Start is called before the first frame update    \r\n    void Start()\r\n    {\r\n        displayCard[0] = CardDatabase.cardList[displayId];\r\n    }\r\n\r\n    // Update is called once per frame\r\n    void Update()\r\n    {\r\n         id = displayCard[0].id;\r\n         cardName = displayCard[0].cardName;\r\n         cost = displayCard[0].cost;\r\n         power = displayCard[0].power;\r\n         cardDescription = displayCard[0].cardDescription;\r\n       \r\n\r\n       nameText.text = \" \" + cardName;\r\n       costText.text = \" \" + cost;\r\n       powerText.text = \" \" + power;\r\n       descriptionText.text = \" \" + cardDescription;\r\n    }\r\n}\r\n\r\nI have the cards on a different script\r\n\r\nWhat I have tried:\r\n\r\nChanging the card id etc. Rewriting it incase i forgot something, idk what esle to do\n", "id": "5376202", "title": "How to fix index was out of range. Must be non-negative and less than the size of the collection.", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["C#"]}, {"answers": [{"content": "\r\n    \"Index out of bounds\" means that: you are trying to access an element of an array with an index that is negative, or larger than the number of elements in the array, minus 1 (Because in C, valid indexes for an array on N elements start from 0 and go up to but not including N).\n\r\nCompiling does not mean your code is right! :laugh:\r\nThink of the development process as writing an email: compiling successfully means that you wrote the email in the right language - English, rather than German for example - not that the email contained the message you wanted to send.\n\r\nSo now you enter the second stage of development (in reality it's the fourth or fifth, but you'll come to the earlier stages later): Testing and Debugging.\n\r\nStart by looking at what it does do, and how that differs from what you wanted. This is important, because it give you information as to why it's doing it. For example, if a program is intended to let the user enter a number and it doubles it and prints the answer, then if the input / output was like this:\n \n\r\nInput   Expected output    Actual output\r\n  1            2                 1\r\n  2            4                 4\r\n  3            6                 9\r\n  4            8                16Then it's fairly obvious that the problem is with the bit which doubles it - it's not adding itself to itself, or multiplying it by 2, it's multiplying it by itself and returning the square of the input.\r\nSo with that, you can look at the code and it's obvious that it's somewhere here:\nC++\n\r\nprivate int Double(int value)\r\n   {\r\n   return value * value;\r\n   }\r\nOnce you have an idea what might be going wrong, start using the debugger to find out why. Put a breakpoint on the first line of the method, and run your app. When it reaches the breakpoint, the debugger will stop, and hand control over to you. You can now run your code line-by-line (called \"single stepping\") and look at (or even change) variable contents as necessary (heck, you can even change the code and try again if you need to).\r\nThink about what each line in the code should do before you execute it, and compare that to what it actually did when you use the \"Step over\" button to execute each line in turn. Did it do what you expect? If so, move on to the next line.\r\nIf not, why not? How does it differ?\r\nHopefully, that should help you locate which part of that code has a problem, and what the problem is.\n\r\nSo start with the actual error message as it tell you where the error occurred - file and line number at least. Run your app in the debugger and put a breakpoint on that line. Then when it hits the breakpoint, look at the variables involved and work out which is out of bounds. Then you can start looking back through your code (using more runs through the debugger with breakpoints in different places as needed) to work out why it held that value.\n\r\nThis is a skill, and it's one which is well worth developing as it helps you in the real world as well as in development. And like all skills, it only improves by use! \r\nSorry, but we can't do that for you: time to learn a new (and very useful) skill: debugging!\r\n", "id": "2_5365264_1", "owner_tier": 0.9, "score": 5.0}, {"content": "\r\n    I think the problem is in how you call the function : C++\n\r\nfloat vertices[60];\r\nunsigned int indices[60];\r\n\r\nicosahedron(radius, vertices);\r\nsubdivide(vertices, indices, 1, sizeof(vertices), sizeof(indices), radius);\r\nThe sizeof operator returns the number of bytes in an item, not the number of array elements so the value passed to subdivide is 240, not 60.  There is a _countof macro available in many (most?) compilers that will do that.  If it is not available in yours, here is how it is implemented : C++\n\r\n#ifndef _countof\r\n#define _countof(_Array) (sizeof(_Array) / sizeof(_Array[0]))\r\n#endifAnother option is to use a constant value like this : C++\n\r\nconst int VertexCount=60;\r\nfloat vertices[ VertexCount ];\r\nunsigned int indices[ VertexCount ];\r\n\r\nsubdivide( vertices, indices, 1, VertexCount, VertexCount, radius );\r\nI always tell the compiler to use warning level 4 with my code and it would tell me that in the function : C++\n\r\nvoid subdivide(float* vertices, unsigned int* indices, int subdivision_amount, size_t vertices_arr, size_t indices_arr, int radius)the arguments vertices_arr and indices_arr are not used.  On second thought, that means this is not the problem.  Not directly, that is.\n\r\nAs has been mentioned, I think your best is to use a debugger or, at least, to do some printf-style debugging and display every index used in the code.\n\r\nETA: I was curious so I had a go at this and I found a few problems.  One is the indices array was not initialized so it had invalid values.  Another is null pointers were passed to add_indices.  I adjusted the code to this and it runs but I'm not sure it works correctly : \n\r\nvoid subdivide(       float* vertices\r\n                    , unsigned int* indices\r\n                    , int subdivision_amount\r\n                    , int radius\r\n                    , int vertCount\r\n                    )\r\n{\r\n    float new_v1[3], new_v2[3], new_v3[3];\r\n    float *v1, *v2, *v3;\r\n    unsigned int index;\r\n\r\n    for( int i = 1; i <= subdivision_amount; ++i )\r\n    {\r\n        index = 0;\r\n\r\n        for( int j = 0; j < vertCount; j += 3 )\r\n        {\r\n            v1 = & vertices[ indices[ j ] * 3 ];\r\n            v2 = & vertices[ indices[ j + 1 ] * 3 ];\r\n            v3 = & vertices[ indices[ j + 2 ] * 3 ];\r\n\r\n            compute_half_vertex( v1, v2, new_v1, radius );\r\n            compute_half_vertex( v2, v3, new_v2, radius );\r\n            compute_half_vertex( v1, v3, new_v3, radius );\r\n\r\n            add_vertices( v1,     new_v1, new_v3, vertices );\r\n            add_vertices( new_v1, v2,     new_v2, vertices );\r\n            add_vertices( new_v1, new_v2, new_v3, vertices );\r\n            add_vertices( new_v3, new_v2, v3,     vertices );\r\n\r\n            add_indices( index,     index + 1,  index + 2,  indices );\r\n            add_indices( index + 3, index + 4,  index + 5,  indices );\r\n            add_indices( index + 6, index + 7,  index + 8,  indices );\r\n            add_indices( index + 9, index + 10, index + 11, indices );\r\n            index += 12;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nvoid TestSubdivide() \r\n{\r\n    const int VertCount = 60;\r\n    int radius = 1;\r\n    float vertices[ VertCount ] = { 0 };\r\n    unsigned int indices[ VertCount ] = { 0 };\r\n\r\n    icosahedron( radius, vertices );\r\n    subdivide( vertices, indices, 1, radius, VertCount );\r\n}The indices array never gets set to anything other than zeros but the vertices array has some non-zero values in it.  I am not sure if this is what you want or not.  Also, I don't see what effect the subdivision_amount parameter will have.\r\n", "id": "2_5365304_6", "owner_tier": 0.3, "score": 5.0}, {"content": "\r\n    Accessing an array with some invalid index is a severe bug not only because the runtime crashed, but you ask for data which doesnt exist.\n\r\nSo handle these cases. Most common handling is to check whether you index is equal or higher zero  AND isnt higher than elements in the array. One way is to use constants for size, or you some class to have a count or track count yourself.\n\r\ntip: if this check fails you may have found another bug. Track him down to find the cause.\r\n", "id": "2_5365273_1", "owner_tier": 0.3, "score": 0}], "link": "https://www.codeproject.com/Questions/5365259/Indexing-out-of-bounds-with-arrays", "question": {"content": "\r\n\t\t\t    I've been trying to debug a program I wrote that fills out vertices for an icosahedron (based off of a tutorial I found online). When running the program I get segmentation faults, specifically in functions where I have to access array indexes, and I don't know how to solve it, so I created a MRE (minimal reproducible example) of the program, with the most important parts to show where the errors are, and the usage of the problematic functions.\n\nC\n\r\n#include <stdlib.h>\r\n#include <math.h>\r\n\r\nvoid icosahedron(int radius, float *vertices);\r\nvoid subdivide(float *vertices, unsigned int *indices, int subdivision_amount, size_t vertices_arr, size_t indices_arr, int radius);\r\nvoid compute_half_vertex(float v1[3], float v2[3], float new_v[3], int radius);\r\nvoid add_vertices(float v1[3], float v2[3], float v3[3], float *vertices);\r\nvoid add_indices(unsigned int i1, unsigned int i2, unsigned int i3, unsigned int *indices);\r\n\r\nint main(void) \r\n{\r\n    int radius = 1;\r\n    float vertices[60];\r\n    unsigned int indices[60];\r\n\r\n    icosahedron(radius, vertices);\r\n    subdivide(vertices, indices, 1, sizeof(vertices), sizeof(indices), radius);\r\n\r\n    return 0;\r\n}\r\n\r\nvoid icosahedron(int radius, float *vertices)\r\n{\r\n    float H_ANGLE = M_PI / 180 * 72;\r\n    float V_ANGLE = atanf(1.0f / 2);\r\n\r\n    int i1, i2;\r\n    float z, xy;    \r\n    float h_angle_1 = -M_PI / 2 - H_ANGLE / 2;\r\n    float h_angle_2 = -M_PI / 2;\r\n\r\n    vertices[0] = 0;\r\n    vertices[1] = 0;\r\n    vertices[2] = radius;\r\n    \r\n    for (int i = 1; i <= 5; ++i)\r\n    {\r\n        i1 = i * 3;\r\n        i2 = (i + 5) * 3;\r\n\r\n        z = radius * sinf(V_ANGLE);\r\n        xy = radius * cosf(V_ANGLE);\r\n\r\n        vertices[i1] = xy * cosf(h_angle_1);\r\n        vertices[i2] = xy * cosf(h_angle_2);\r\n        vertices[i1 + 1] = xy * sinf(h_angle_1);\r\n        vertices[i2 + 1] = xy * sinf(h_angle_2);\r\n        vertices[i1 + 2] = z;\r\n        vertices[i2 + 2] = -z;\r\n\r\n        h_angle_1 += H_ANGLE;\r\n        h_angle_2 += H_ANGLE;\r\n    }\r\n\r\n    i1 = 11 * 3;\r\n    vertices[i1] = 0;\r\n    vertices[i1 + 1] = 0;\r\n    vertices[i1 + 2] = -radius;\r\n}\r\n\r\nvoid subdivide(float* vertices, unsigned int* indices, int subdivision_amount, size_t vertices_arr, size_t indices_arr, int radius)\r\n{\r\n    float* tmp_vertices;\r\n    unsigned int* tmp_indices;\r\n    float new_v1[3], new_v2[3], new_v3[3];\r\n    float *v1, *v2, *v3;\r\n    unsigned int index;\r\n\r\n    for (int i = 1; i <= subdivision_amount; ++i)\r\n    {\r\n        tmp_vertices = vertices;\r\n        tmp_indices = indices;\r\n        vertices = NULL;\r\n        indices = NULL;\r\n        index = 0;\r\n\r\n        for (int j = 0; j < sizeof(tmp_indices); j += 3)\r\n        {\r\n            v1 = &tmp_vertices[(int)tmp_indices[j] * 3];\r\n            v2 = &tmp_vertices[(int)tmp_indices[j + 1] * 3];\r\n            v3 = &tmp_vertices[(int)tmp_indices[j + 2] * 3];\r\n\r\n            compute_half_vertex(v1, v2, new_v1, radius);\r\n            compute_half_vertex(v2, v3, new_v2, radius);\r\n            compute_half_vertex(v1, v3, new_v3, radius);\r\n\r\n            add_vertices(v1, new_v1, new_v3, vertices);\r\n            add_vertices(new_v1, v2, new_v2, vertices);\r\n            add_vertices(new_v1, new_v2, new_v3, vertices);\r\n            add_vertices(new_v3, new_v2, v3, vertices);\r\n\r\n            add_indices(index, index + 1, index + 2, indices);\r\n            add_indices(index + 3, index + 4, index + 5, indices);\r\n            add_indices(index + 6, index + 7, index + 8, indices);\r\n            add_indices(index + 9, index + 10, index + 11, indices);\r\n            index += 12;\r\n        }\r\n    }\r\n}\r\n\r\nvoid compute_half_vertex(float v1[3], float v2[3], float new_v[3], int radius)\r\n{\r\n    new_v[0] = v1[0] + v2[0];\r\n    new_v[1] = v1[1] + v2[1];\r\n    new_v[2] = v1[2] + v2[2];\r\n    float scale = radius / sqrtf((new_v[0] * new_v[0]) + (new_v[1] * new_v[1]) + (new_v[2] * new_v[2]));\r\n    new_v[0] *= scale;\r\n    new_v[1] *= scale;\r\n    new_v[2] *= scale;\r\n}\r\n\r\n// first problematic function\r\nvoid add_vertices(float v1[3], float v2[3], float v3[3], float *vertices)\r\n{\r\n    vertices[0] = v1[0];\r\n    vertices[1] = v1[1];\r\n    vertices[2] = v1[2];\r\n    vertices[3] = v2[0];\r\n    vertices[4] = v2[1];\r\n    vertices[5] = v2[2];\r\n    vertices[6] = v3[0];\r\n    vertices[7] = v3[1];\r\n    vertices[8] = v3[2];\r\n}\r\n\r\n// second problematic function\r\nvoid add_indices(unsigned int i1, unsigned int i2, unsigned int i3, unsigned int *indices)\r\n{\r\n    indices[0] = i1;\r\n    indices[1] = i2;\r\n    indices[2] = i3;\r\n}\n\r\nEDIT: I forgot to post the error message\nhere it is\r\nthrough the use of breakpoints that's the same error I get all throughout the  \n\r\nadd_vertices and  \n\r\nadd_indices functions.\n\r\nEDIT 2: Thanks to some debugging, I narrowed down the problem to the subdivision loop in the subdivide function. It's not the other functions.\n\nWhat I have tried:\n\r\nRunning GDB on the code to get more information on the errors, just got the location of the seg faults instead.\r\n\t\t    ", "id": "5365259", "title": "Indexing out of bounds with arrays", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["C"]}, {"answers": [{"content": "\r\n    Without the actual code to work from, we can't be that precise.\n\r\nBut the error is pretty clear: You are accessing a collection of some form (list, array or other) using an index which is either negative, or larger than the index of the last value in the collection.\n\r\nFor example, if you have a list or an array that you are accessing in a loop, the loop counter must be less than the items count:\nC#\n\r\nfor (int i = 0; i < myCollection.Length; i++)\r\n   {\r\n   Console.WriteLine(myCollection[i]);\r\n   }Will be fine, but\nC#\n\r\nfor (int i = 1; i <= myCollection.Length; i++)\r\n   {\r\n   Console.WriteLine(myCollection[i]);\r\n   }Won't.\r\n", "id": "2_424974_1", "owner_tier": 0.9, "score": 5.0}, {"content": "\r\n    You can check if your index is in the range :\nC#\n\r\nstring[] arr = new string[3];\r\nif(index < arr.Length) // check if in range\r\n   string s = arr[index];\n", "id": "2_424975_1", "owner_tier": 0.5, "score": 5.0}, {"content": "\r\n    GridView1.DataKeys.exists(key)\r\n", "id": "2_425041_1", "owner_tier": 0.1, "score": 0}, {"content": "\nC#\n\r\nint id = GridView1.EditIndex;\r\nthis might be the issue , and as per my knowledge,GridView1.EditIndex;can not be emp_id.\n\r\n if GridView1.EditIndex return 1 or 2 , there is a possibility that you have datakey, but if you are editing some 20th row and you dont have 20 different datakeys types.\n\r\nTry to use the code C#\n\r\nint row = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);to get your emp id.\r\n", "id": "2_425360_1", "owner_tier": 0.1, "score": 0}, {"content": "\nint row = Convert.ToInt32(GridView1.DataKeys[id].Value.ToString());\r\nThis line might be throwing the error.\r\nHere id = GridView1.EditIndex, represets an index.\r\nIn (GridView1.DataKeys[id].Value.ToString(), you are trying get value from GridView1.DataKeys at index id. But there might not be any key for this index.\n\r\nCheck for that.\n\r\nHappy Coding :)\r\n", "id": "2_425497_1", "owner_tier": 0.1, "score": 0}], "link": "https://www.codeproject.com/Questions/424972/how-to-solve-index-was-out-of-range-must-be-non-ne", "question": {"content": "\r\n\t\t\t    Hi,\n\r\nCan anyone know this.\n\r\nhow to solve index was out of range. must be non-negative and less than the size of \r\nthe collection?\n\r\ncode is:\n\nC#\n\r\nprotected void GridView1_RowUpdating1(object sender, GridViewUpdateEventArgs e)\r\n   {\r\n       int id = GridView1.EditIndex;\r\n       GridViewRow rows = GridView1.Rows[e.RowIndex];\r\n       int row = Convert.ToInt32(GridView1.DataKeys[id].Value.ToString());\r\n       if (((TextBox)rows.FindControl(\"txtname\") != null) && ((TextBox)rows.FindControl(\"txtaddress\") != null))\r\n       {\r\n           TextBox txtname = (TextBox)rows.FindControl(\"txtname\");\r\n           TextBox txtaddress = (TextBox)rows.FindControl(\"txtaddress\");\r\n           con.Open();\r\n           SqlCommand cmd = new SqlCommand(\"update employee set emp_name='\" + txtname.Text + \"',emp_address='\" + txtaddr.Text + \"' where emp_id='\" + id + \"\", con);\r\n           cmd.ExecuteNonQuery();\r\n           GridView1.EditIndex = -1;\r\n           con.Close();\r\n           bind_grid();\r\n       }\r\n   }\r\n\n", "id": "424972", "title": "how to solve index was out of range. must be non-negative and less than the size of the collection?", "traffic_rate": 0}, "saved_time": "Tue, 16 Jul 2024 03:57:05 GMT", "source": "codeproject", "tags": ["ASP.NET"]}]}