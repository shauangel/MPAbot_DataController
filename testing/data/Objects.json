{"result": [{"answers": [{"content": "I can't find any question that covers this closely, so will try to explain. Well, probably this is the long form of \"you can't, and you shouldn't\". Type checking aims to confirm that all functions are called with proper argument types and return expected types. I suggest to read PEP483 first to understand concept of type better. Suppose you have the following: (join to avoid optimization, but it's another story). Are they the same object? No, is not clearly states this (they have different memory addresses). But will s2 be acceptable whenever you want s1? Definitely yes. You will not create a function that operates only on s1 and checks this fact with is, right? Now what is the difference between self as reference to exact object and self as any A instance? When we talk about type checking, all A instances are completely equivalent and indistinguishable. They have the same set of methods and attributes (including types). We can ask: \"which type errors can be introduced or removed, if we explicitly declare object to be self instance and not just self type?\" I really cannot think of any. If you want this for semantics, use docstring - types should not be abused for everything. self object is absolutely the same as any other A() instance for type checker. Your first code sample is almost fine. Annotate return as A to tell that it returns instance of class A, it will work for final class: However, this approach has a drawback (it is good explained in PEP673 about Self type): If you create new A in foo and return it, then this approach is perfect. If you return self - it is valid, but not precise. That's why we need Self type. Self type was introduced in PEP673, and was not supported by mypy at the time of writing this. (update: supported since mypy 1.0 released on Feb. 6, 2023) Your usage in 3rd example was perfectly valid and will work after implementation in type checkers (see 5-th code block in \"Motivation\" section of PEP). The support was added to mypy in version 1.0, so if you're using this version or later - this section is the proper answer. Here's how you can use Self (assuming python=3.11 not to bother with typing_extensions): However, you can mimic Self accurately with a few lines of code (and python >= 3.7, AFAIR). Now this works. All subclasses will return their class instance.", "id": 72182814, "score": 8}, {"content": "A simple way is to put the class name in the quotation: e.g: In IDE(e.g. Pycharm) you can navigate to the class by ctl(or cmd in macos) and click 'A'.", "id": 76327237, "score": 5}], "link": "https://stackoverflow.com/questions/72174409/type-hinting-the-return-value-of-a-class-method-that-returns-self", "question": {"content": "as the questions describes, I wanna type hint a self return , something like: Things I already tried: Things that might be of help: hovering over the method foo with no annotations of a return value, VScode hints shows - Self@A, i dont understand it but, this definitely differentiates between returning another instantiated class A() and returning self ... Thanks", "id": 72174409, "title": "Type hinting the return value of a class method that returns self?", "views": 6320}, "resource": "StackOverflow", "tags": ["python", "python-typing"]}, {"answers": [{"content": "The cases are not independent of one another.  They are tested from the top-down (like a long if/elif chain) and the first to match wins. In the example, the specific match tests like like list, tuple, and str need to come before more general matches like Iterable.  Otherwise with the current code, a tuple input like (10, 20, 30) will match the I-case instead of the intended T-case. A class pattern performs an isinstance() check which would match both a type and subclasses of the type.  To restrict the case to an exact match, use a type guard: With both solutions applied, here is the new code: Here we show that the two problematic cases work as expected.", "id": 71314804, "score": 3}], "link": "https://stackoverflow.com/questions/71314803/class-pattern-is-matching-the-wrong-cases", "question": {"content": "I'm writing an object serializer but am having issues where the class patterns are not matching the expected cases: When I call dump_obj() with a tuple, it giving an infinite recursion on the I-case for iterables rather than matching the T-case for tuples. When I call dump_obj() with a list subclass, it is matching the L-case for lists instead of the intended I-case for iterables.", "id": 71314803, "title": "Class pattern is matching the wrong cases", "views": 1955}, "resource": "StackOverflow", "tags": ["python", "serialization", "isinstance", "structural-pattern-matching"]}, {"answers": [{"content": "The parent class should be ignorant of the subclass. It is better practice to call the parent constructor with an extra argument that defines how the order should be defined. This could be a comparator function, or a boolean. Here is how you could do it with a boolean: Just extend the base class with the other methods you need, and make use of the maximize attribute like I have done in the build method. NB: I changed the name from build_heap to build, as it is already clear from the class that it is about a heap. No need to repeat that in the method name.", "id": 70089138, "score": 2}], "link": "https://stackoverflow.com/questions/70087318/is-there-a-way-to-detect-which-child-class-called-a-parent-class-method", "question": {"content": "I am working on a heap class for a course I am taking. The way they want us to set it up is to have a general heap class with methods like heapify, heappop, build_heap, etc. Then have classes MinHeap(Heap) and MaxHeap(Heap). FYI: The current Heap class is set up like a MinHeap. My questions mostly regards to heapify and heappop. I am trying to figure out if there is a way to detect which child class called this function, or if I have to overwrite these methods in the child class. THIS IS A HW ASSIGNMENT Here is the Heap.__init__() method: My goal was to have some sort of check to see which child called the function and if it was MaxHeap, heapify would build a MaxHeap else it stays the same.", "id": 70087318, "title": "Is there a way to detect which child class called a parent class method?", "views": 112}, "resource": "StackOverflow", "tags": ["python", "object", "heap"]}, {"answers": [{"content": "MyClass is callable, and returns an instance of MyClass when called. partial just wraps MyClass in a callable object that, when called, calls MyClass with some predetermined arguments. partial(MyClass)(), by definition, will return an instance of MyClass. You don't need to check. (While it's possible to override MyClass.__new__ to return something other than an instance of MyClass, that's not something you would need to check because of partial.)", "id": 68153517, "score": 0}, {"content": "Firstly, class is a reserved word, so I'll use class_ instead (per PEP8). Use is instead of ==, to check identity instead of equality (though they'll usually be the same when dealing with class objects). Or, if you need to account for subclasses, use issubclass(), which includes the case where class_ is MyClass. See point 1, just replace class_ with class_.func. You're on the right track. I would just try to flatten out that nested expression, maybe like this: Example: Output:", "id": 68153473, "score": 2}], "link": "https://stackoverflow.com/questions/68151471/best-way-to-check-if-a-partialclass-is-an-instance-of-class", "question": {"content": "So here's my setup: So there are a few things going on here for me:", "id": 68151471, "title": "Best way to check if a partial(Class) is an instance of Class", "views": 804}, "resource": "StackOverflow", "tags": ["python"]}, {"answers": [{"content": "Everything is an object in Python, which includes ints, strings, functions and classes. Therefore, isinstance(a, object) will return you True . But 3 is actually an integer, which is a sub_class create from object. Therefore type(a) can equal to int only. I can give you an example. Suppose we have two classes, Sub is a sub_class of Base. The result will be:", "id": 51319106, "score": 3}, {"content": "This is a common construct in most object-oriented languages that support inheritance. When a child class (in your case int) inherits from a parent (in your case object), it is said to have an \"is-a\" relationship. That is, an int is a (or an) object. This \"is-a\" relationship is what isinstance is checking. From the docs: Return true if the object argument is an instance of the classinfo argument, or of a (direct, indirect or virtual) subclass thereof. There is a similar issubclass function to check the same relationship for a class instead of an instance of that class. In fact, in most cases, isinstance(x, y) == issubclass(type(x), y). type returns the exact class that an object was constructed from. That means that checking type(3) == object is exactly equivalent to checking int == object. Hopefully you can see that that's unambiguously false. On a related tangent, classes should always be the same reference within a given run of the interpreter, so you can use is instead of == for comparison. So type(3) is int will be true. That's how == is implemented for all the types you're ever likely to come across anyway.", "id": 51319372, "score": 2}], "link": "https://stackoverflow.com/questions/51318855/isinstance-method-returns-false-answer-in-python-3", "question": {"content": "Look at the following code: How is this to be explained?", "id": 51318855, "title": "isinstance() method returns false answer in Python 3", "views": 3973}, "resource": "StackOverflow", "tags": ["python", "python-3.x", "types", "isinstance"]}, {"answers": [{"content": "You want to avoid interfering with this attribute. There is no reason to do any kind of stubbing manually - you want to get out of the way and let it do what it usually does. If it behaves like attributes usually do, everything will work correctly. The correct implementation is therefore to special-case the __objclass__ attribute in your __getattr__ function and throw an AttributeError. This way it will behave the same way as it would in a class that has no __getattr__: The attribute is considered non-existant by default, until it's assigned to. The __getattr__ method won't be called if the attribute already exists, so it can be used without any issues:", "id": 49406762, "score": 4}], "link": "https://stackoverflow.com/questions/49405914/how-to-correctly-stub-objclass-in-a-python-class", "question": {"content": "I have Python class looking somewhat like this: Sometimes, I am working with ptpython (an interactive Python shell) for debugging. ptpython inspects instances of the class and tries to access the __objclass__ attribute, which does not exist. In __getattr__, I could simply check if name != \"__objclass__\" before working with name, but I'd like to know whether there is a better way by either correctly implementing or somehow stubbing __objclass__.  The Python documentation does not say very much about it, or at least I do not understand what I have to do:  The attribute __objclass__ is interpreted by the inspect module as specifying the class where this object was defined (setting this appropriately can assist in runtime introspection of dynamic class attributes). For callables, it may indicate that an instance of the given type (or a subclass) is expected or required as the first positional argument (for example, CPython sets this attribute for unbound methods that are implemented in C).", "id": 49405914, "title": "How to correctly &quot;stub&quot; __objclass__ in a Python class?", "views": 1027}, "resource": "StackOverflow", "tags": ["python", "python-3.x", "class", "inspect", "ptpython"]}, {"answers": [{"content": "In Swift 5 you can test whether one value is the same type as another, if one of the values is 'self', by using 'Self', its type. This works with structs, as you can see below. (I am actually here looking for a way to do this without Self as I am trying to refactor something. The 'type(of: ship)' method mentioned above, looks like the most general way to do this. I have tested that it works with the example below.)", "id": 64281505, "score": 2}, {"content": "For subclasses of NSObject, I went with: Another caveat of this method,  The private subclasses of a class cluster substitute the name of their public superclass when being archived. Apple documentation", "id": 51595668, "score": 4}, {"content": "i'm using this, looks helpful for me: \nit returns true only if all objects are of same type;", "id": 51132374, "score": 1}, {"content": "I feel necessary to quote from the Swift Programming Language documentation first of all: Classes have additional capabilities that structures do not: According to this, it may be helpful for someone in the future: and the tests: you also can overload a new operator for doing such a thing, like e.g. this: and the results: you can also use it for your own new Swift classes, like e.g. those:", "id": 24165165, "score": 34}, {"content": "Swift 3\n- pay attention that comparing instances is not the same as checking if an istance is of a given type:", "id": 45756402, "score": 12}, {"content": "Swift 3.0 (also works with structs)", "id": 40113416, "score": 52}, {"content": "I also answered How do you find out the type of an object (in Swift)? to point out that at some point Apple added support for the === operator to Swift Types, so the following will now work: This works even without importing Foundation, but note it will only work for classes, as structs have no dynamic type.", "id": 26366073, "score": 48}, {"content": "At the moment Swift types have no introspection, so there is no builtin way to get the type of an instance. instance.className works for Objc classes.", "id": 24162565, "score": 0}], "link": "https://stackoverflow.com/questions/24161622/how-to-check-two-instances-are-the-same-class-type-in-swift", "question": {"content": "I know that I can check the type of a var in Swift with is but how can I check that two instances have the same class? The following does not work: I could easily add a \"class\" function and update it in each subclass to return something unique, but that seems like a kludge...", "id": 24161622, "title": "How to check two instances are the same class/type in swift", "views": 36798}, "resource": "StackOverflow", "tags": ["swift"]}, {"answers": [{"content": "Simple, yet powerful =>  type(a) is type(b)", "id": 47113725, "score": 16}, {"content": "Apart from type way in previous answer, I think you can use isinstance. https://docs.python.org/2/library/functions.html#isinstance Operator is can be used for object checking such as a is b if a and b are same objects. Remember is checks only objects and not their values. Or, I havenot seen anyone do this, I guess id(obj1) == id(obj) would work as well when you need to check if two objects are same.", "id": 29837791, "score": 4}, {"content": "You can check to see the type of a variable using the type() function. So your code would read as below: This would check to see if instance[i] is of type MyCustomType. You can replace this with inbuilt types such as dict, list, int, str etc. or it can be custom types/objects you have declared. It is important to note that it will only check the object type and not the object's values. So it will not see if two objects hold identical values. It is also a bit tricky when we come to inheritance, so there are more examples in this answer Determine the type of an object? Also take note from the comments to this answer, as if you are using Python 2.x and not inheriting from object when declaring custom Classes this solution may not work. If you want to know if two instances of a class hold the same value you will have to implement the __eq__ function/method into the class definition. See SO answer Is there a way to check if two object contain the same values in each of their variables in python? for more details.", "id": 29837744, "score": 4}], "link": "https://stackoverflow.com/questions/29837656/how-to-check-if-two-instances-are-of-the-same-class-python", "question": {"content": "So in my pygame game, I have created a list of objects to make things like updating them all and collision checking easier. So when I'm collision checking, I have to check if the current object is the same as the object we are collision checking with. Here is my current code: (All objects in the list/array are a child to the su)", "id": 29837656, "title": "How to check if two instances are of the same class Python", "views": 29706}, "resource": "StackOverflow", "tags": ["python", "class"]}, {"answers": [{"content": "You probably shouldn't be using classes at all in this particular case, because there is no saved state. Remember, classes are useful for grouping data together with methods that operate on that data. But in a binary search, there is no data. What I mean is, you get some input (the list), and you do some computation on that input to produce some output (an index), and then you return the output, and that's it. There is nothing to save after the search algorithm completes. So there is no point in having a class. But suppose you had a scenario where there is some reason to save state. For example, suppose you're doing multiple searches on the same array, where you have reason to believe that the results from consecutive searches will often be close together in the array. You might want to save the result of each search so you can start the next one by searching nearby indices. That's a case when you would want to use a class. In that case, you can distinguish option 3 from the others based on whether the stored state (in this case, the previous result) is relevant to all your algorithms. If all algorithms can make use of the same saved state, it probably makes sense to have one class with multiple search methods, and just choose the best search method by default, but allowing client code to pick the method if they so choose - that'd be something like a combination of option 1 and option 2. But if different algorithms need different saved state, that's where you might want to use subclasses, or generally, different classes for different algorithms. I'd say it makes sense to use a generic search() method rather than, or at least in addition to, specific search methods for individual algorithms (like binary_search() and linear_search()) because in many cases, you know which algorithm will be best and can choose that one. The only reason  I can think of not to provide a generic method in that sense is if you really cannot tell which algorithm to use, if different algorithms will be required in different situations, and you need to make client code choose which one to use.", "id": 44855355, "score": 4}], "link": "https://stackoverflow.com/questions/44855189/python-when-should-you-use-subclasses-instead-of-methods", "question": {"content": "Let's say I'm trying to make a class of two search algorithms, binary search and linear search. The way I see it there are three ways to do this. Option 1: Make a class Search() with two methods binary_search and linear_search. The search algorithm would then depend on which method a user chooses to use. Example: the user would create the object s = Search() followed by usage of s.binary_search(). Option 2: Make a class Search() with a method do_search that calls on two private methods _binary_search and _linear_search based on what \nvalue is passed to an __init__ argument. Example: the user would create the object b = Search('binary'). Option 3: Make a base class Search() with two subclasses Binary() and Linear(). The user would then choose an algorithm by using the appropriate subclass. Example: the user would create the object b = Binary(). My question is which one of the three options should you use and why? I think from a design perspective Option 3 is best, but I'm not really sure why. And I am interested about other perspectives as well (not just design).", "id": 44855189, "title": "Python: when should you use subclasses instead of methods?", "views": 1306}, "resource": "StackOverflow", "tags": ["python", "class", "methods", "subclass"]}, {"answers": [{"content": "Why not use isinstance(instance, class)?", "id": 14668177, "score": 7}, {"content": "If you are defining a like a = A() then a is an instance of the class A. If you are just doing a = A, then the name a points to the class object. You probably want an instance of A and can then test that with New style classes will test True to type(A()) == A though.", "id": 14668181, "score": 2}, {"content": "Try this", "id": 14668215, "score": 7}, {"content": "You should use the new-style classes: That is, derive it from object. The problem is that object of old-style are implemented as if all of them were of type instance. Deriving directly or indirectly from object will solve this issue. Or moving to Python3, where there is no more old-style classes.", "id": 14668172, "score": 14}], "link": "https://stackoverflow.com/questions/14668105/user-defined-type-checking-in-python-typea-is-a-returns-false", "question": {"content": "From this post - What's the canonical way to check for type in Python?, I could use this code to check object o is string type. However, with user defined type, type(a) is A doesn't seem to work.  Why is this? How can I get the correct type checking for user defined type?\nI use python 2.7 on Mac OS X. PS: This is a question out of curiosity, as I got this example from this book to get true as a result, but I got  false. I understand that Duck typing is a preferred way in python. (https://stackoverflow.com/a/154156/260127) rodrigo's answer works for me. Using 'isinstance' doesn't give me an exact type, it just tests if an object is an instance of a class or a subclass.  jdurango's answer (a.__class__ is A) gave me pretty interesting Java equivalent. I don't know which copied which.", "id": 14668105, "title": "User defined type checking in python: &quot;type(A()) is A&quot; returns false", "views": 3495}, "resource": "StackOverflow", "tags": ["python", "types"]}, {"answers": [{"content": "Sometimes it's necessary. It's often the first choice to implement [multiple dispatch](http://en.wikipedia.org/wiki/Multiple_dispatch) in Java when you need it.\n\nIf the choice is between one or two uses of instanceof, and restructuring of your program in an unnecessarily complex way, go with the instanceof. On the other hand, if similar or identical uses of it are seeping throughout your program, then try to hide it away so that it only appears in maybe a handful of methods.\n\nDon't be afraid to break general guidelines; go ahead and implement the simplest solution. But avoid duplication of any kind like the plague -- refactor when it starts to appear to avoid it getting out of control. When you see yourself writing \"instanceof\" in the same pattern for the 3rd time or so, try to capture the pattern.\n\nIt's probably also worth mentioning that the Haskell and ML communities love pattern matching on union types, which is (very roughly) equivalent to the instanceof operator. So if you're using interface inheritance to implement a union type (e.g. Branch is a TreeNode and Leaf is a TreeNode), it's often just fine to use instanceof.  \n\nThe important point here is that the type is intended to be *closed*, i.e. Branch and Leaf are the only two possibilities for a TreeNode. Some people will scream \"visitor pattern\" at this problem, but I'd argue it's fine to go ahead and use instanceof here at least until it becomes a recurring pattern.\n\nOn the other hand, with open types where an undetermined number of polymorphic implementations is the goal you might find using instanceof often becomes painful. To take an example from math, Integer implements Ring, Rational implements Ring, Real implements Ring, Complex implements Ring, Polynomial implements Ring, and so on with no end in sight. Again though, go ahead and use it here once or twice if you think you need to; just remember to refactor when it becomes a recurring theme.\n", "id": "c0ec9p8", "parent": "t3_9tb2v", "vote": 23}, {"content": "I think its perfectly fine when used in the implementation of an equals() method.", "id": "c0ec9wd", "parent": "t3_9tb2v", "vote": 16}, {"content": "If you stick to pure OO in a language like Java, you can easily end up breaking the whole \"single responsibility\" edict. E.g. should a business object know how to serialize itself to different formats? Some kind of home made type dispatch is required in these scenarios. Another classic example is a calculator: is it easy to add new numeric types, or easy to add new operations?\n\nBasically I would say: if it makes things simpler then ignore the dogma.", "id": "c0ecbst", "parent": "t3_9tb2v", "vote": 6}, {"content": "I must admit in my code I've used it for the worst of reasons, namely ``if isinstance(var, list) ... var[0]`` which is probably the worst thing you can do and you shouldn't actually use it at all.", "id": "c0ec744", "parent": "t3_9tb2v", "vote": 5}, {"content": "There's a little bit of debate about instanceof vs switch on constnat mapped to type, embedded in an object, for Java.\nTurns out the JVM uses such a flag for instanceof, what a surprise. \n\nWhen you're using generic paramaters in a function/factory, it's pretty common to try to take advantage of reflection after the fact.", "id": "c0ec8pz", "parent": "t3_9tb2v", "vote": 2}, {"content": "Generally speaking (not language specific), in my opinion, it is bad. You should be filtering on capabilities (\"can it do this?\"), not on pedigree.", "id": "c0ecj58", "parent": "t3_9tb2v", "vote": 4}, {"content": "if you are using instanceof operator against your own classes to filter against data of your application, you are likely to have designs problems.\n\nIf you are using it to adapt some behavior of third party apis/framework that have some limitation (eg, doesn't provide a feature you need), then it's ok in last resort. ", "id": "c0ec5ve", "parent": "t3_9tb2v", "vote": 16}, {"content": "Can you solve this with an appropriate interface?", "id": "c0ec6y1", "parent": "t3_9tb2v", "vote": 3}, {"content": "The only time I've ever used instanceof is if you're writing message classes for network based stuff, and on the other end need to check the type of message..", "id": "c0ec88j", "parent": "t3_9tb2v", "vote": 3}, {"content": "It depends entirely on how much OO religion you've got.", "id": "c0ecjms", "parent": "t3_9tb2v", "vote": 3}, {"content": "[deleted]", "id": "c0ec5t0", "parent": "t3_9tb2v", "vote": 4}, {"content": "What language are you using?", "id": "c0ec934", "parent": "t3_9tb2v", "vote": 2}, {"content": "Can you give an example of how you're using it? The `instanceof` operator isn't bad, anymore than it's good, but it can be misused to circumvent the principles of object-oriented programming.", "id": "c0eccid", "parent": "t3_9tb2v", "vote": 2}, {"content": "Can Java create a map based on object type?  If so, I would implement and AnimalHandler for each animal's behavior and then a map of these handlers based on animal type.  I can then register a paticular instance of an AnimalHandler against each type, then just call something like this:\r\n\r\nHandlers[typeof(animal)].HandleAnimal(animal);\r\n\r\nThis allows me to register new behavior for new animal types without having to change any existing code for existing animals.  Having to touch an object that affects animals just to add a new animal is a violation of the Open-Closed principle and the Single Responsibility Principle.", "id": "c0ecgaf", "parent": "t3_9tb2v", "vote": 2}, {"content": "A common idiom in functional programming languages is (in Scala):\n\n    t match {\n        case v : Integer => // treat v as integer\n        case v : String => // treat v as a string\n        case _ => // treat v as an unknown type\n    }\n\nUnfortunately, the only way to do that type of thing in Java is using instanceof.", "id": "c0ecj3g", "parent": "t3_9tb2v", "vote": 2}, {"content": "My rule of thumb for questions like these is \"use it like it's taxed\". Which is to say it's not verboten, but every time you use it you should feel slightly worried in the same way you do when you get to the supermarket checkout and realise you've overspent again.", "id": "c0ecaus", "parent": "t3_9tb2v", "vote": 1}, {"content": "Most of the time you should be using generics. That's not to say it shouldn't be used, but there is often a better way to approach the situation.", "id": "c0ecfh3", "parent": "t3_9tb2v", "vote": 1}, {"content": "I would steer away from casting, as you'll have to write far more code to accomplish something. I would suggest to use generics for this, so you don't have to cast and all of your methods can work with different data types (as long as they have the same super class).\n\nGenerics are hard to get a grip on syntactically at first, but once you get to know them they are the way to go.", "id": "c0eci7y", "parent": "t3_9tb2v", "vote": 1}, {"content": "I believe there might be 3 problems in over using instanceof.\n\nYou could be stuffing things in and out of an Object and in this case you should really use generics.\n\nThe second problem is that you might be operating over possibly unrelated objects. It would be best to formalize an agreement of how those objects are to be used through the implementation and use of a specific interface.\n\nThe third problem is that you might be operating on the wrong abstraction level, using downcasts to a more specific type to conditionally do some work that ends up breaking polymorphism,i.e., it relies on behavior or state not accessible on the abstraction level that you're operating. In this case you're either trying to do more than you should at once or perhaps there's a flaw on the way you are doings things polymorphically.", "id": "c0eco1d", "parent": "t3_9tb2v", "vote": 1}, {"content": "The only time I've really used it and it has made sense, is usually in equals and comparisons, so its pretty localized to very small portions of code.", "id": "c0ecqjf", "parent": "t3_9tb2v", "vote": 1}, {"content": "yes", "id": "c0ec7xk", "parent": "t3_9tb2v", "vote": 0}, {"content": "Does your code work? Does it do what you intend it to do?  Then you are not writing bad code.  I'm sure the Design Pattern Poo-Poos will start whine, but you know what? They can shove their singletons up their facade.", "id": "c0ec7dd", "parent": "t3_9tb2v", "vote": -12}, {"content": "You probably need a dynamic language. Try Clojure.", "id": "c0eccn8", "parent": "t3_9tb2v", "vote": -10}, {"content": "I suppose I should also say, type systems in programming languages only go so far. Especially in Java-ish languages. Sometimes to capture an abstraction you want (multiple dispatch, for example), you have to ignore the type system and do something more dynamic like use instanceof. Your code isn't necessarily \"bad\" when this happens, you've just gone beyond the point where the type system can help you.", "id": "c0eca91", "parent": "t1_c0ec9p8", "vote": 2}, {"content": "I think the stuff I wrote in [isinstance() considered harmful](http://canonical.org/~kragen/isinstance/) is pretty much applicable to Java too. Summary is: it's not OO, and usually it's better to program in an OO style when you're in an OO language, but sometimes you don't have a choice.", "id": "c0ed7zu", "parent": "t1_c0ec9p8", "vote": 1}, {"content": "This is very true. If you restrict yourself to using polymorphism instead of instanceof everywhere you can, you can end up with interfaces with far too many responsibilities.", "id": "c0ecgr1", "parent": "t1_c0ecbst", "vote": 3}, {"content": "Or you are working around the fact that your language doesn't have multimethods and/or doesn't have open classes.", "id": "c0ec7q0", "parent": "t1_c0ec5ve", "vote": 13}, {"content": "Okay, it's mostly the former, the latter I really have no choice in the matter.\n\nSo really, assuming I have control over the design, whats a better implementation? Just override everything?", "id": "c0ec9ly", "parent": "t1_c0ec5ve", "vote": 1}, {"content": "It definitely looks like a classic \"polymorphism\" thing to me.\n\n    if instanceof(obj, one_type_of_class)\n          do_something()\n    elif instanceof(obj, another)\n          do_something()\n\nshould probably look like this:\n\n    obj.do_something()\n", "id": "c0ec7kq", "parent": "t1_c0ec6y1", "vote": 13}, {"content": "This was what I was going to say.  Do not use it when keeping track of classes is merely inconvenient.  Use it when you really do not know what classes you are receiving. ", "id": "c0ec8ge", "parent": "t1_c0ec88j", "vote": 3}, {"content": "Thanks, this is actually the exact situation I find myself in, I'm just wondering having found myself here, if it was the result of a bad design choice.\n\n", "id": "c0eca51", "parent": "t1_c0ec5t0", "vote": 3}, {"content": "languages with pattern matching (e.g. Scala) [might well be doing instanceof's](http://www.google.com/search?q=scala+pattern+matching+instanceof) under the covers?\n\n", "id": "c0ecipw", "parent": "t1_c0ec5t0", "vote": 2}, {"content": "Java", "id": "c0ec9pd", "parent": "t1_c0ec934", "vote": 3}, {"content": "Ya, it would help to see how its being used.  I just ran into a very similar issue (I'm using C# and the problem was whether I should use GetType()).  The solution I was able to come up with was that there was no need for the conditional \"if(obj.GetType() == typeOf(foo))\" because I just needed to include a little more info in the interface for the objects.  So, my point here is that if you just take a step back and re-think your design, you may be able to avoid using it.  If you really just can't avoid it, use it.", "id": "c0ecdu9", "parent": "t1_c0eccid", "vote": 2}, {"content": ">Open-Closed principle and the Single Responsibility Principle\n\nOh shit, here comes corporate.", "id": "c0echp3", "parent": "t1_c0ecgaf", "vote": 3}, {"content": "> Can Java create a map based on object type?\n\nYes, you'd just make a map with Class objects as keys.", "id": "c0ecmr5", "parent": "t1_c0ecgaf", "vote": 0}, {"content": "The 'match' construct is no better than instanceof from a design perspective, it is just more concise. Overuse of either one indicates poor object oriented design.", "id": "c0ecp17", "parent": "t1_c0ecj3g", "vote": 4}, {"content": "well put...  some people don't realize that these convenience functions for (sometimes) sloppy code comes at a cost.  I need to write that on a post-it and stick it on my monitor or something...", "id": "c0ecbbr", "parent": "t1_c0ecaus", "vote": 0}, {"content": "i was about to tell the same thing.", "id": "c0ecg3r", "parent": "t1_c0ec7xk", "vote": 1}, {"content": "tl;dr \"no one should better themselves\"", "id": "c0ec7lz", "parent": "t1_c0ec7dd", "vote": 7}, {"content": "While I'd like to say I agree with you (I've taken this stance in plenty of programming classes), its so important (from a maintenance and extendability approach) to put more thought into a design than simply making it work the way you intend it to work.  That just isn't how good software is written.", "id": "c0ecd03", "parent": "t1_c0ec7dd", "vote": 2}, {"content": "You have never maintained a piece of code.", "id": "c0ecnz7", "parent": "t1_c0ec7dd", "vote": 2}, {"content": "That's horrible advice. This guy asks if a certain practice is bad, and you recommend another language.", "id": "c0ech7l", "parent": "t1_c0eccn8", "vote": 5}, {"content": "> I suppose I should also say, type systems in programming languages only go so far\n\nHaskell's type system is perfectly suitable for this.\n\nBasically, independent instance declarations allow any type to be used with any interface, regardless of whether that type was declared before or after that interface.", "id": "c0ece83", "parent": "t1_c0eca91", "vote": 1}, {"content": "With instanceof you check the type of an *object*. So I don't understand your point about it not beeing OO. \r\n Now I am not arguing that it is always of good style to use instanceof , but when implementing against code that you have to access to, then instanceof is sometimes the only way to work around a problem. At least in my experience, but maybe I just didn't see the right solution.\r\n ", "id": "c0ed9qg", "parent": "t1_c0ed7zu", "vote": 2}, {"content": "Can you demonstrate using isinstance in a non-OO language?", "id": "c0edjr5", "parent": "t1_c0ed7zu", "vote": 1}, {"content": "It's Java.", "id": "c0ec9ib", "parent": "t1_c0ec7q0", "vote": 4}, {"content": "Good point, although OP should be able to use the visitor pattern in most cases to work around the lack of multimethods in Java.", "id": "c0eceq2", "parent": "t1_c0ec7q0", "vote": 1}, {"content": "In some cases, the right answer is \"interface.\" That is, if you are asking \"Can I do this to this object?\" Well, create an interface. So you either reduce the use of instanceof to \"Does this object have this interface?\" or you build the logic for figuring that out into the implementation of the interface.", "id": "c0ecdxx", "parent": "t1_c0ec9ly", "vote": 5}, {"content": "Funny isnt't it? First they tell you 'dont use instanceof and override everything' and then 'prefer composition over inheritance'. I wonder how far will this get.", "id": "c0ecbzr", "parent": "t1_c0ec9ly", "vote": 1}, {"content": "That implies that all your objects implement do_something, or that you have control over the source for them.", "id": "c0ecfo1", "parent": "t1_c0ec7kq", "vote": 2}, {"content": "in this case, the visitor pattern is a more elegant (and appropriate) solution.", "id": "c0ecg2u", "parent": "t1_c0ec8ge", "vote": 0}, {"content": "pyhon programmers don't have the guts to reckon this.", "id": "c0eccsh", "parent": "t1_c0eca51", "vote": -7}, {"content": "With single dispatch languages (like Java) you'll see them occasionally. Would have to see an example perhaps to know how bad it is.\n\nhttp://en.wikipedia.org/wiki/Multiple_dispatch\n\nThe wiki article suggests the \"Visitor pattern\":\n\nhttp://en.wikipedia.org/wiki/Visitor_pattern\n\nBut:\n\n1. that can get hairy ugly just as fast\n2. that doesn't help when you're using types declared `final` such as, oh, most of the java.util Collections you want to use, etc.", "id": "c0edgzw", "parent": "t1_c0ec9pd", "vote": 1}, {"content": "why wouldn't you use \"is\" instead of relying on GetType?", "id": "c0ecfjv", "parent": "t1_c0ecdu9", "vote": 2}, {"content": "if (obj.GetType() == typeof(FooType)) is dangerous because it won't compare to true for subclasses of FooType. In most cases, that is not desired", "id": "c0eeo6d", "parent": "t1_c0ecdu9", "vote": 0}, {"content": "> its is just more concise\n\nOf course, they all compile to bytecode, so obviously Scala can't do anything that Java can't do, it just makes it a lot more convenient.\n\nIn particular, Scala makes it easier to use idioms which improve reliability (such as returning an Option instead of a variable that may be null).\n\nIn this case, match strongly encourages you (through a compiler warning) to explicitly deal with the situation where the type of t isn't what you expect.  This is a good thing.\n\n> Overuse of either one indicates poor object oriented design.\n\nPattern matching is central to most functional programming languages, I'm not sure you *can* overuse it.", "id": "c0ecpap", "parent": "t1_c0ecp17", "vote": 0}, {"content": "tl;dr \"real programmers ship\"", "id": "c0ec9lv", "parent": "t1_c0ec7lz", "vote": 3}, {"content": "Oh, absolutely. Haskell's type classes handle this problem quite nicely.\n\nI was speaking more generally than just this example. I have little doubt that in the right domain, with enough code, eventually you'll run into conflict with Haskell's type system and suddenly you'll wish you had dependent types in order to capture some concept.", "id": "c0ecf65", "parent": "t1_c0ece83", "vote": 1}, {"content": "In OO, instead of checking the type of an object to decide what to do with it, you send the object a message and let it decide what to do.", "id": "c0edseb", "parent": "t1_c0ed9qg", "vote": 3}, {"content": "It's not OO because there are better mechanisms, such as polymorphism, with which you can most likely solve the problem in a more OO-style way.", "id": "c0edgko", "parent": "t1_c0ed9qg", "vote": 0}, {"content": "`(define (length lst) (if (null? lst) 0 (+ 1 (length (cdr lst)))))`\n\nR5RS Scheme is non-OO but comes with a full complement of type-testing predicates for primitive types.", "id": "c0edsjl", "parent": "t1_c0edjr5", "vote": 3}, {"content": "then yes, you are writing bad code.  Good instincts!\n\n[read this](http://www.amazon.com/First-Design-Patterns-Elisabeth-Freeman/dp/0596007124/ref=sr_1_1?ie=UTF8&s=books&qid=1255377855&sr=8-1) ... a few times.", "id": "c0ecbyb", "parent": "t1_c0ec9ib", "vote": -12}, {"content": "The Visitor pattern also makes your code a lot less extensible. For every new subclass you have to break the interface.", "id": "c0edjth", "parent": "t1_c0eceq2", "vote": 1}, {"content": "THIS\n\nIn some cases (no pun intended) the adapter pattern may work better than an interface.", "id": "c0eck5q", "parent": "t1_c0ecdxx", "vote": 2}, {"content": "\"prefer\" and \"always use\" are two different things.", "id": "c0ecgy7", "parent": "t1_c0ecbzr", "vote": 4}, {"content": "I don't see the problem.\n\n> 'prefer composition over inheritance'\n\ne.g. An alphanumeric display is not a list of parameter names, it *has* a list of parameter names that it has to display. Inherit from std::vector<std::string> to save some typing would be silly.\n\n> 'dont use instanceof and override everything'\n\ne.g. An alphanumeric display and a graphical display are both displays. They should probably inherit from a generic display class or implement a display interface. It would be silly to use instanceof to call the correct \"show\" method.\n\n", "id": "c0eda14", "parent": "t1_c0ecbzr", "vote": 3}, {"content": "Which is why 'interfaces' was brought up.", "id": "c0ech0w", "parent": "t1_c0ecfo1", "vote": 3}, {"content": "[deleted]", "id": "c0echta", "parent": "t1_c0ecfjv", "vote": 2}, {"content": "eh, just about the same when it comes to runtime.  You want to be careful using 'is' in something like a list of objects with a long inheritance chain, as it will run up the inheritance chain until it finds a true.  If I know that the the type I'm checking against SHOULD be a specific type, I'll generally use GetType", "id": "c0ecv33", "parent": "t1_c0ecfjv", "vote": 2}, {"content": "true, however, as it was a small project I had designed from the ground up, I knew that there were only two possible types (and for this, there wouldn't be any types extending from it), so it was fine to use GetType.  I agree though, \"is\" is probably the safer bet.", "id": "c0eeogr", "parent": "t1_c0eeo6d", "vote": 1}, {"content": "In haskell, you most certainly do NOT pattern match on types. Scala seems to have bastardized the pattern matching significantly, please do not advocate what you do not understand.", "id": "c0ed0ph", "parent": "t1_c0ecpap", "vote": -6}, {"content": "Yeah I'm also certain he's delaying the deployment of his software until he gets a consensus on Reddit about the issue. How perceptive of you to read between the lines, I almost didn't spot that in the post's title.", "id": "c0ec9r8", "parent": "t1_c0ec9lv", "vote": 2}, {"content": "> you'll wish you had dependent types in order to capture some concept.\n\nSure, but its far deeper than with Java.  Also, it typically means a bit less safety rather than much more code.  With Java here, it means more boilerplate, ugly code.", "id": "c0ecfek", "parent": "t1_c0ecf65", "vote": 1}, {"content": "That's just one type of OO approach.", "id": "c0eh2og", "parent": "t1_c0edseb", "vote": 0}, {"content": "Polymorphism doesn't always work, especially on primitive objects like integers and strings.", "id": "c0edjoz", "parent": "t1_c0edgko", "vote": 1}, {"content": "**It's not OO because there are better mechanisms**\n\nI think what you mean is that it's not recommended. The fact that there are \"better mechanisms\" has no bearing on whether or not it is a legitimate OO practice.\n\nYou would, for example, be in serious trouble in Java if you implemented equals(Object) without using instanceof...", "id": "c0eh2t7", "parent": "t1_c0edgko", "vote": 1}, {"content": "OOP \"design patterns\" are also workarounds for missing language features.", "id": "c0ed3ba", "parent": "t1_c0ecbyb", "vote": 3}, {"content": "I agree that multimethods are better, but if OP is limited to Java I think visitors are still a hell of a lot better than instanceof.", "id": "c0ee01p", "parent": "t1_c0edjth", "vote": 1}, {"content": "sssht. dont make us think.\n\n(nice example. of course you fell into a troll's trap: i was -kindof- pointing out that you need not follow advices blindly)", "id": "c0edd6s", "parent": "t1_c0eda14", "vote": 2}, {"content": "I've been in situations where I've had collections of unrelated objects. This happened once when parsing some XML, for example. Then, the instanceof operator is a friend indeed. ", "id": "c0ecjh8", "parent": "t1_c0ech0w", "vote": 1}, {"content": "little help if you don't control the sources of said classes", "id": "c0ed8ae", "parent": "t1_c0ech0w", "vote": 1}, {"content": "If you're working in C#3, and you've got a collection of these things, the extension method IEnumerable.OfType<T> is a wonderful thing, too.", "id": "c0eckc7", "parent": "t1_c0echta", "vote": 2}, {"content": "> In haskell, you most certainly do NOT pattern match on types\n\nI didn't say \"pattern matching *on types* is central..\", but Haskell does pattern match on structural properties of a value.  A type is a structural property of a value, so they are similar.\n\n> Scala seems to have bastardized the pattern matching significantly\n\nIf by that you mean that Scala seeks to combine what is good about functional programming with what is practical about OOP, then yes it has.\n\n> please do not advocate what you do not understand.\n\nPlease don't be a condescending twat, people like you give the Haskell community a bad name.", "id": "c0ed1v9", "parent": "t1_c0ed0ph", "vote": 3}, {"content": "what about\nhttp://chplib.wordpress.com/2009/10/07/concurrency-can-be-deterministic/\n", "id": "c0ectfl", "parent": "t1_c0ecfek", "vote": 2}, {"content": "True enough", "id": "c0ecfml", "parent": "t1_c0ecfek", "vote": 0}, {"content": "Have you read much of Alan Kay's work? That's the approach he invented the term \"object-oriented\" to describe. Later he said he should have called it \"message-oriented\" instead, because the objects aren't really the point; it's the decoupling through messages.", "id": "c0ehrjj", "parent": "t1_c0eh2og", "vote": 2}, {"content": "Yes, in both Python and Java this is a problem, and `instanceof` or `isinstance` is often the best solution.", "id": "c0edsrh", "parent": "t1_c0edjoz", "vote": 2}, {"content": "Why is having a fragile interface that you will almost certainly need to break better than using instanceof?", "id": "c0ee0sk", "parent": "t1_c0ee01p", "vote": 1}, {"content": "Side note. In C# it is actually easy to fact multimethods with reflection, I use it all the time when dealing with the QuickFIX library. I would be really surprised to learn Java couldn't do it just as easily, as they too support reflection.", "id": "c0eebqw", "parent": "t1_c0ee01p", "vote": 1}, {"content": "I see that my irony meter needs some fine tunning :P", "id": "c0edgnt", "parent": "t1_c0edd6s", "vote": 1}, {"content": "No, you just define a common interface. They can be totally unrelated, but still implement the same interface. `ArrayList<Comparable> foo` lets you put all kinds of different things into it...they just have to have that one thing in common.\n\nOr are you doing different operations on a bunch of unrelated objects in a collection? Sounds like you're forming the collection wrong, then. Care to give a slightly more concrete example? I mean, parsing XML, don't they all implement some common functionality?\n\n", "id": "c0ecrx8", "parent": "t1_c0ecjh8", "vote": 0}, {"content": "If your language doesn't support open classes, you could always write a wrapper class that does support the interface.", "id": "c0edeam", "parent": "t1_c0ed8ae", "vote": 1}, {"content": ".NET as well. It pisses me off to no end that there is an IAddition interface so I can use generics with numeric types.", "id": "c0edtyf", "parent": "t1_c0edsrh", "vote": 1}, {"content": "String and Integer are unrelated and I can't add an interface to either.", "id": "c0edjyz", "parent": "t1_c0ecrx8", "vote": 1}, {"content": "Define related.\r\n\r\nGUI control are related in the sense they almost always inherit from a base class named \"Control\" or something similar. But if I'm looking for \"controls that contain other controls\", then a Groupbox isn't related to a Textbox.", "id": "c0edw2j", "parent": "t1_c0ecrx8", "vote": 1}, {"content": "You are still doing an instanceOf, you are just doing it in the slowest way you can think of. Especially in Java/C#, where you have to use instanceof to determine the correct constructor to call to create the wrapper.", "id": "c0edk23", "parent": "t1_c0edeam", "vote": 1}, {"content": "I don't know much about .NET, so I'm not sure I understand. You're saying you wish there didn't need to be a specific named interface for you to be able to write algorithms that add numbers without specifying what kind of numbers they add? How is that related to not being able to add an overload of a new method to the integer class?", "id": "c0ef092", "parent": "t1_c0edtyf", "vote": 2}, {"content": "Why would you be iterating over a collection of Strings and Integers? It suggests to me that your base design is probably poor.", "id": "c0edv3q", "parent": "t1_c0edjyz", "vote": 1}, {"content": ">Define related.\n\nThey all implement the same interface.\n\n>GUI control are related in the sense they almost always inherit from a base class named \"Control\" or something similar. But if I'm looking for \"controls that contain other controls\", then a Groupbox isn't related to a Textbox.\n\nThen you don't iterate over ArrayList<Control>, you iterate over ArrayList<IGroupControls>. \"Controls that contain other controls\" are a grouping, that naturally, have some common functions. Those common functions are the IGroupControls interface.", "id": "c0edycn", "parent": "t1_c0edw2j", "vote": 1}, {"content": "I don't think we're connecting here.", "id": "c0edv21", "parent": "t1_c0edk23", "vote": 1}, {"content": "I found myself writing this code way too often:\r\n\r\n    if (myObj is Int) return (int)myObj +1;\r\n    if (myObj is Decimal) return (Decimal)myObj +1;\r\n    if (myObj is Single) return (Single)myObj +1;\r\n    if (myObj is Double) return (Double)myObj +1;\r\n    etc.\r\n", "id": "c0ef2ju", "parent": "t1_c0ef092", "vote": 1}, {"content": "Scenarios I've seen it in:\r\n\r\n**Stored Procedure Parameters**\r\n\r\nStarting with a list of parameter names and a list of typed values, convert them into a list of parameter objects. You can't emit the correct database type of you don't know what object type you are dealing with.\r\n\r\n**Ad-hock reporting with automatic formatting**\r\n\r\nSay you get a recordset from the database and you want to display it. Applying some default formatting is easy, once you determine the which columns contain dates, numbers, etc.\r\n\r\n**Data objects with arbitrary attributes**\r\n\r\nSome data objects are user-extensible with arbitrary key value pairs. An easy example is a contact list that allows you to make up additional fields on the fly. \r\n\r\nYou have to handle this like my previous example, except you can't rely on column-level data as the \"Last Contact\" field may be a date in one object and the string \"sometime in may\" in the next.\r\n\r\n**Mixed Collections**\r\n\r\nOften it doesn't make sense to have a seperate collection for each possible type. For example, let us say you want to change the font on ever Textbox on a Window. You have to use some sort of insanceOf to know if a given control is the right type.\r\n\r\n\r\n\r\n", "id": "c0edvyx", "parent": "t1_c0edv3q", "vote": 1}, {"content": "You just decoded some JSON. You need to check that it contains what you expect.", "id": "c0eet7w", "parent": "t1_c0edv3q", "vote": 1}, {"content": "> Then you don't iterate over ArrayList<Control>, you iterate over ArrayList<IGroupControls>. \r\n\r\nStarting with a your typical Form.Controls or Window.Controls collection, where do you get this ArrayList<IGroupControls>? \r\n\r\n> Those common functions are the IGroupControls interface.\r\n\r\nNo magic wands. You don't get to completely rewrite your platform's GUI layer to support your application's design.", "id": "c0ee13r", "parent": "t1_c0edycn", "vote": 1}, {"content": "How do you get the object into the wrapper in the first place? ", "id": "c0edxto", "parent": "t1_c0edv21", "vote": 1}, {"content": "> Stored Procedure Parameters\n\nI don't have experience with stored procedures. So I won't go read wikipedia and make a half-assed comment, and just defer to your expertise.\n\n> Ad-hock reporting with automatic formatting\n\nObject.toString() should give you some ideas. If I had to do this, I'd make every object that's able to go in a report implement a \"Reportable\" interface that has a function that spits out the string you need in the correct format.\n\n> Data objects with arbitrary attributes\n\nIsn't instatiating objects the job of a Factory(not that I like them...)? You give it an object, a type, and it returns an object of that type.\n\n> Mixed Collections\n\nTo address your example, I'd ask to Window to return a collection of every TextBox that it has, then iterate over those.\n\nHere's the fundamental thing: I won't say that instanceOf is always, 100% bad. It's just a strong indicator of technical debt. You want to be driving down operations like this as far as possible, until it's absolutely not possible any more. I'll concede that it may make code simpler in some cases, but it's very very very much almost just poor design. I've yet to ever actually need to use instanceOf. Then again, I primarily code in Ruby, and it's dynamic enough to not even worry about any of this stuff, and Haskell doesn't really let you instanceOf.", "id": "c0edz2u", "parent": "t1_c0edvyx", "vote": 1}, {"content": "By utilizing the wrapper instead of the base class. IE, you don't use strings, you use your StringWrapper. I'm not suggesting you inject the String into the wrapper right before you put it in your collection. We can both agree that that's retarded.", "id": "c0edz5u", "parent": "t1_c0edxto", "vote": 1}, {"content": "> Object.toString() should give you some ideas. \r\n\r\nThen what? Use regular expressions and pattern matching to determine the underlying type so you can apply the correct formatting? \r\n\r\n> Isn't instatiating objects the job of a Factory(not that I like them...)? You give it an object, a type, and it returns an object of that type.\r\n\r\nWe already did that to create the data object. The question now is how to consume that data object with it's arbitrary collection of non-structured data.\r\n\r\n> To address your example, I'd ask to Window to return a collection of every TextBox that it has, then iterate over those.\r\n\r\nAnd how would you do that without instanceOf?\r\n\r\n", "id": "c0ee1cg", "parent": "t1_c0edz2u", "vote": 1}, {"content": "> Here's the fundamental thing: I won't say that instanceOf is always, 100% bad. It's just a strong indicator of technical debt. \r\n\r\nYou have yet to actually demonstrate that.", "id": "c0ee1df", "parent": "t1_c0edz2u", "vote": 1}, {"content": "So I just have to wave my magic want and change all references in Java from String to StringWrapper?", "id": "c0ee0uv", "parent": "t1_c0edz5u", "vote": 1}, {"content": "....aaaand I'm done.\n\nWe'll just have to agree to disagree.", "id": "c0ee22m", "parent": "t1_c0ee1df", "vote": 1}], "link": "https://www.reddit.com/r/programming/comments/9tb2v/how_bad_is_the_instanceof_operator_if_i_find/", "question": {"context": "", "id": "9tb2v", "title": "How bad is the instanceof operator? If I find myself writing a handful of these, does it mean I'm writing bad code?"}, "resource": "Reddit"}, {"answers": [{"content": "Hi guys, working in finance, thinking of starting to study python.\n\nWhat is the best place to kick off?\n\nThanks!", "id": "fy1d6vo", "parent": "t3_hq54r8", "vote": 3}, {"content": "why can\u2019t I post anything", "id": "fy8ol9n", "parent": "t3_hq54r8", "vote": 3}, {"content": "So I started learning Python as part of my degree plan and after the class had ended I decided to go though \"Learn Python3 the Hard Way\". The exercises are all done for Python 3.6 but the latest version is 3.8, all the info is still relevant right? Thanks in advance y'all :)", "id": "fy00b5z", "parent": "t3_hq54r8", "vote": 2}, {"content": "[removed]", "id": "fy8p4lw", "parent": "t3_hq54r8", "vote": 2}, {"content": "[deleted]", "id": "fy937pp", "parent": "t3_hq54r8", "vote": 2}, {"content": "Am a new guy learning python. Apologies if my question sounds idiotic, so here we go:\n\nThe code below created a pattern \u2018A\u2019 using asterixes, however what I don\u2019t understand is how does the program know to consider the first for loop to be for row and the Second loop for columns. My variables in both loops don\u2019t tell the system to consider the first for row. I just don\u2019t get it. Please if someone could explain?\n\nfor row in range (7):\n    for col in range (5):\n        if ((col==0 or col==4) and row!=0) or ((row==0 or row==3) and (col>0 and col<4)):\n            print(\"*\", end=\"\")\n        else:\n            print(end=\" \")\n    print()", "id": "fy99i1v", "parent": "t3_hq54r8", "vote": 2}, {"content": "hey guys, I have a question referred to the canvas, knowing that canvas is a matrix I want to know what does it mean the \"j:j+3\" part I know that j  its an index and I know that they are located in the column part but I don't know what it does or what it is used for that exactly j:j part, thanks.  \nfor i in np.arange(0, rows-1):  \nfor j in np.arange(0, columns):  \nfor k in range(8):  \nif np.array\\_equal(input\\_pattern\\[k, :\\],canvas\\[i, j:j+3\\]):  \n\\#\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^\\^  \ncanvas\\[i+1,j+1\\] = output\\_pattern\\[k\\]", "id": "fxvtomq", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hey all, just curious what everyone thinks about my \u201clearning path\u201d here. \n\nStarted with learning the basics of Automate the Boring stuff with Python. Then I completed a python for financial algorithms and trading class. Messed around on DataCamp for awhile, started messing around in pandas/matplotlib and learned about data analysis and forecasting. Now I\u2019m doing a project based course simultaneously with a python for data structures and algorithms course. After these two (should be done by this week) I\u2019m going to start tackling projects on my own. This was all over the course of about 3-4 months or so. I know everyone preaches doing projects ASAP, but I wanted some knowledge about how projects are structured first and how to think about attacking problems using Python first. \n\nAnything else I\u2019m missing before I dive in to projects? Or am I good to go?\n\nI\u2019m also looking for some people to buddy up with who are at a similar point to me to chat about projects etc. Just message me!\n\nThanks!", "id": "fxvzpre", "parent": "t3_hq54r8", "vote": 1}, {"content": "Pandas problem:\n\nI have data that is grouped and also has a time component. I made some dummy data for illustration. There is a column with values for specific time points (other rows have nan values). What I want to do is to check if the last 3 values of this column were over a given threshold (>=10 in this case), but for every group seperately.\n\nHere is an example. The Group A had 3 times a value of >= 10 on day 11, so the fourth column gets the value `True`.  Same with group C on days 8 and 11.\n\n    df\n    Out[22]: \n       Group  day  value three_times_over_10\n    0      A    0    NaN                 NaN\n    1      A    1    NaN                 NaN\n    2      A    2    4.0               False\n    3      A    3    NaN                 NaN\n    4      A    4    NaN                 NaN\n    5      A    5   10.0               False\n    6      A    6    NaN                 NaN\n    7      A    7    NaN                 NaN\n    8      A    8   11.0               False\n    9      A    9    NaN                 NaN\n    10     A   10    NaN                 NaN\n    11     A   11   15.0                True\n    12     A   12    NaN                 NaN\n    13     A   13    NaN                 NaN\n    14     A   14    5.0               False\n    15     A   15    NaN                 NaN\n    16     A   16    NaN                 NaN\n    17     A   17    2.0               False\n    18     A   18    NaN                 NaN\n    19     A   19    NaN                 NaN\n    [...]\n    40     C    0    NaN                 NaN\n    41     C    1    NaN                 NaN\n    42     C    2   20.0               False\n    43     C    3    NaN                 NaN\n    44     C    4    NaN                 NaN\n    45     C    5   22.0               False\n    46     C    6    NaN                 NaN\n    47     C    7    NaN                 NaN\n    48     C    8   13.0                True\n    49     C    9    NaN                 NaN\n    50     C   10    NaN                 NaN\n    51     C   11   12.0                True\n    52     C   12    NaN                 NaN\n    53     C   13    NaN                 NaN\n    54     C   14    1.0               False\n    55     C   15    NaN                 NaN\n    56     C   16    NaN                 NaN\n    57     C   17   27.0               False\n    58     C   18    NaN                 NaN\n    59     C   19    NaN                 NaN\n\n&#x200B;\n\nThis is the code I used to create this dummy data:\n\n    import pandas as pd\n    import numpy as np\n    \n    data = list(zip(['A'] * 20 + ['B'] * 20 + ['C'] * 20,\n                    list(range(20)) * 3,\n                    [np.nan, np.nan, 4, np.nan, np.nan, 10, np.nan, np.nan, 11,\n                     np.nan, np.nan, 15, np.nan, np.nan, 5, np.nan, np.nan, 2,\n                     np.nan, np.nan,\n                     np.nan, np.nan, 1, np.nan, np.nan, 2, np.nan, np.nan, 3,\n                     np.nan, np.nan, 20, np.nan, np.nan, 4, np.nan, np.nan, 6,\n                     np.nan, np.nan,\n                     np.nan, np.nan, 20, np.nan, np.nan, 22, np.nan, np.nan, 13,\n                     np.nan, np.nan, 12, np.nan, np.nan, 1, np.nan, np.nan, 27,\n                     np.nan, np.nan]\n            ))\n    column_names = ['Group', 'day', 'value']\n    df = pd.DataFrame(data, columns=column_names)\n\nHow can I create the last column programmatically?\n\n&#x200B;\n\nEdit: I figured something out, although there is probably a less complicated way:\n\n    df.loc[df['value'] >= 10, 'over_ten'] = 1\n    df.loc[(df['value'] < 10) & (~df['value'].isna()), 'over_ten'] = 0\n    \n    only_values = df.loc[~df['value'].isna()]\n    roll = only_values.groupby('group').rolling(3).sum()\n    indices = roll.loc[roll['over_ten'] == 3].index.get_level_values(1)\n    df.loc[indices, 'three_times_over_10'] = 1\n\nFirst I create a dummy column that indicates if the value is 10 or higher, and after I reduce the df to rows only where there is a value in that column, I take the rolling cumulative sum of that, save the indices and use that to create the desired column.", "id": "fxwecf4", "parent": "t3_hq54r8", "vote": 1}, {"content": "[removed]", "id": "fxwoi4z", "parent": "t3_hq54r8", "vote": 1}, {"content": "Help would be appreciated. I'm getting started on using Python in a work environment, and I'm trying to write a really simple piece of code to split a large Excel document (a report of all employee vacation days) in smaller files, based on the team manager. Those files can be used for further distribution. I've written:\n\n*import pandas as pd*\n\n*vacationdays = pd.read\\_excel('filename.xlsx')*\n\n*managers = vacationdays\\['Manager''\\].unique()*\n\n&#x200B;\n\n*for boss in managers:*\n\n*teamreport = vacationdays\\[(vacationdays\\['Manager'\\] == boss)\\]*\n\n*with pd.ExcelWriter(boss+'-report.xlsx') as writer:*\n\n*team(writer, sheet\\_name= 'Report')*\n\nI get the error 'Datafrome object is not callable'. My code goes belly-up when it comes to exporting the data to Excel files. Can anyone help?", "id": "fxwp07x", "parent": "t3_hq54r8", "vote": 1}, {"content": "Are there python (or general programming) books that focus not on things like how to code or syntax but the philosophy and mathematical background of computer programs and algorithms? The higher the mathematical level the better, but I am still more interested in the why of computing (and the low level how, e.g. how code is actually run in the computer.)", "id": "fxwugm4", "parent": "t3_hq54r8", "vote": 1}, {"content": "I'm looking at adding a quit hotkey to the script I'm running - as far as I'm aware, keyboard handling is usually done through *pynput,* which has a Global Hotkey function.\n\nDoes it have the ability to limit these hotkeys to only work when the console window it uses is the top window (aka not when I'm doing something else), and if not, how would I go about that?", "id": "fxx6dis", "parent": "t3_hq54r8", "vote": 1}, {"content": "What are some options for logging the trace of events in a simulation? I'm working on a discrete event simulator and want to keep a record of the time, location, and type of events that occur. I was thinking of storing them as a dictionary and then converting it to a text file or spreadsheet once a simulation run is completed. As opposed to opening and writing directly to a text file every time.", "id": "fxx968j", "parent": "t3_hq54r8", "vote": 1}, {"content": "Currently working with pandas and xlsxwriter. The idea is to select data from 3 diferent excels in only one dataframe. Already have that and can export it to a new excel file.  Now i need to compare the vales of 2 columns and highlight that row id the condition is true. I've tried .iloc and a for loop but it didn't always work for some reason.\n\n&#x200B;\n\nHow can i do this? Thanks in advance\n\nEdit:  I tried the code below but it's not working, it highlights some rows but not all. It doesn't respect always the condition. It's probably a bad use of try/except, idk :(", "id": "fxxa2gw", "parent": "t3_hq54r8", "vote": 1}, {"content": "Still learning but I noticed some of the things I learned to do as a result of getting stuck not knowing how to do a part of a program and doing a search and choosing something most likely from SO or google that works.\n\nMight be a stupid question? \n\nThis example is my favorite python trick so far.\n\nLike using the double star, to combine two dictionaries instead of merge(first\\_dict, second\\_dict): and using method update.\n\n(actually learned python long time ago stopped using for 6 years and started again)\n\nWhat are some of your favorite tricks? \nAre there disadvantages to them?\n\n&#x200B;\n\n`first_dict = {'dc': 'Superman', 'marvel': 'Spider-Man '}`\n\n`second_dict = {'dc': 'Batman', 'marvel': 'Rogue'}`\n\njoin the two dictionaries\n\n`combined_dict = {**first_dict, **second_dict}`\n\n`combined_dict`\n\nOut[2]:\n\n`{'dc': 'Superman', 'marvel': 'Spider-Man ' , dc': 'Batman', 'marvel': 'Rogue'}`", "id": "fxy0jgk", "parent": "t3_hq54r8", "vote": 1}, {"content": "I am trying to learn Python. My background is SAS/R and C/C++.\n\nFor the life of me, what the F is going on here:\n\n[https://imgur.com/L1oeCXt](https://imgur.com/L1oeCXt)\n\nI literally am trying to copy and paste a tutorial on looping through 1D arrays in numpy.", "id": "fxy0l59", "parent": "t3_hq54r8", "vote": 1}, {"content": "[deleted]", "id": "fxy6yai", "parent": "t3_hq54r8", "vote": 1}, {"content": "How can I translate a point with geopandas? Translating polygons is .translate(), but that isn\u2019t working on my points", "id": "fxyfj6j", "parent": "t3_hq54r8", "vote": 1}, {"content": "I'm a bit confused over how to implement end to end encryption for a simple network client / server? Each client will also act as a server because I want to be able to send messages in each direction (the project is a WhatsApp clone). I have Python 3.6 installed on my machine and am using OpenSUSE LEAP 15.2. Can anyone recommend some decent libraries to use for this task? I don't know very much about cryptography so I feel a bit lost.\n\nThank you for your help.", "id": "fxyfnnu", "parent": "t3_hq54r8", "vote": 1}, {"content": "What's the point of abstract methods? In the very simple examples I'm working with (I'm a beginner), I don't understand the point of leaving a method undefined in a parent class just to define it later in a child class. Why not just define it in the child class and leave it out from the parent class?", "id": "fxyk62k", "parent": "t3_hq54r8", "vote": 1}, {"content": "I am very new to python and am curious about the placement of commands and if there is an easy logic to it.  So why for example is the code (lista.split(\",\")) to split a string by commas but to  join a list into a string by commas it is (\",\".join(lista)), one command the list comes first and the other command the character the action acts on comes first, i have noticed this in a few different types of  commands this is just one example and if possible to know why it may help me make less errors in future, thanks", "id": "fxyqtm8", "parent": "t3_hq54r8", "vote": 1}, {"content": "What is the best place to start? I\u2019d like to do some random projects to start to get a better feel for the language. I have a very minimal intro to it so far.", "id": "fxz3uh0", "parent": "t3_hq54r8", "vote": 1}, {"content": "Need some help here with essentially finding patterns in a 2D array. I'm wondering if this is just a forced search type of thing or if python has anything that could help on something like this.\n\nI searched around for something like this but couldn't find anything. Also struggled with the wording of my question so bear with me here. I'm working with data provided in an excel file and have excel/VBA and python available to use. I'm still learning both and I just need a push in the right direction on what method to use so I can work through it and learn.\n\nSay I have a series of 5 processes in a manufacturing facility, each process represented by a column. Occasionally a downstream process (column 5) gets backed up and slows down upstream processes (column 4, then 3, etc). I have a 2D array that indicates running(0) or backed up(1). Each column is an individual process and each row is a time interval. The array will be the same size every time (10000+ rows, 5 columns), but the values change. Example:\n\n>\n>MyArray = \n>\n>                [0 0 0 0 0\n>          \n>                 0 1 0 0 0\n>           \n>                 1 1 0 0 1\n>           \n>                 1 0 0 0 1\n>           \n>                 0 0 0 1 1\n>           \n>                 0 0 1 1 1\n>           \n>                 0 0 1 1 0\n>           \n>                 0 1 1 0 0\n>           \n>                 0 1 0 0 0\n>           \n>                 0 0 0 0 0]\n\n\nEssentially when there is a value of 1, I want to trace it to the upper rightmost adjacent 1. So for column 1, rows 2 & 3 would be traced back to column 2, row 2. For column 2, rows 8 & 9 would be traced back to column 5, row 3. Currently I have just have an if statement looking to the right within the same row and it's better than nothing, but does not capture the cascade effect you get when something backs up multiple upstream processes.\n\nI could figure out a way to do it by looping a search to look up in a column until it finds a zero, then if the next column value is a 1, search up until finds a zero, repeat. But this seems really inefficient and I feel like there has to be a better way to do it. Any kinds of thoughts or comments would be very helpful. Thanks.", "id": "fxz9bxn", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hi all, I am creating a web scraper to eventually email myself updates on my state everyday just as my first small project... Eventually, once the data is being pulled daily I want to include some analysis via pandas and create some graphs etc...\n\nThe issue I am having here is I'm trying to take these variables in the for loop below and now load them into a pandas array? I'm trying to get them to lists but I am unable to get these local variables out and changed into a global variable...\n\n&#x200B;\n\nProbably a stupid question with an easy answer but I am stuck now lol. Any help would be appreciated\n\n    soup = BeautifulSoup(source, 'lxml')\n    covid_table = soup.find('table')\n    \n    for location in covid_table.find_all('tbody'):\n        rows = location.find_all('tr')\n        for row in rows:\n            geo = row.find('td').text.strip()\n            total_cases = row.find_all('td')[1].text.strip().split()\n            new_cases = row.find_all('td')[2].text.strip().split()\n            total_deaths = row.find_all('td')[3].text.strip().split()\n            new_deaths = row.find_all('td')[4].text.strip().split()\n            active_cases =row.find_all('td'[5].text.strip().split()\n            print(geo,total_cases,new_cases,total_deaths,new_deaths)\n\n&#x200B;\n\nedit: I also have no idea how to format the above properly with indentation", "id": "fxza5vu", "parent": "t3_hq54r8", "vote": 1}, {"content": "So guys I am using a if statement, and I don't want my if statement to be cluttered, and was wondering if any of these formats are okay to use, and won't be looked down upon.\n\nSo this is original one.\n\n    user_id = message.from_user.id\n    \n    if user_id in userID.sections() and message.chat.type == 'private':\n\nand I tinkered a little bit and found out this works. (btw does using \"in\" mean it returns true even if I have privateer because the word private is in there, and if thats correct, should I switch to ==? also does it make a difference if I put () on priv\\_chat =  (message.chat.type in 'private') or no? )\n\n        priv_chat = message.chat.type in 'private' #or use == instead of \"in\"\n        user_id = message.from_user.id\n    \n    if user_id in userID.sections() and priv_chat:\n\n&#x200B;\n\n        priv_chat = message.chat.type in 'private'\n        user_id = message.from_user.id\n    \n    if user_id in userID.sections() and is_it_private():\n    \n    def is_it_private():\n        return message.chat.type in 'private' #or == instead of \"in\"\n\nIm open to other suggestions definitely.", "id": "fxzcbfi", "parent": "t3_hq54r8", "vote": 1}, {"content": "I'm having trouble running a python script via cron.\n\nI feel like I've tried every possible variant under the sun.\n\nThe script runs just fine in terminal, but I'm unable to get cron to run it.\n\nI also tried:\n\n* rebooting\n* `sudo service cron reload` and `sudo service cron start` just incase it was being funky\n* confirmed that cron still loves us by typing `ps -eaf|grep cron` to ensure the processes were running (they are)\n\nThe line I have in cron is:\n\n    * * * * * /usr/bin/python3 /home/MYUSERNAME/headphoneadvicebot/src/bot.py > /home/montybot/headphoneadvicebot/status.txt\n\nBreakdown:\n\nthis is where Python is located, according to whereis python: \n\n    /usr/bin/python3\n\nthis is where my script is located, and running `python3 /home/MYUSERNAME/headphoneadvicebot/src/bot.py` in terminal will successfully run the script (once):\n\n    /home/MYUSERNAME/headphoneadvicebot/src/bot.py \n\nThis is me trying to get cron to output to a txt file so I can see wtf is going on, but it's just blank:\n\n    > /home/MYUSERNAME/headphoneadvicebot/status.txt \n\nI can still run `sudo grep CRON /var/log/syslog` to poke around with what cron has been doing, but it's largely inconclusive as it's not giving me any actual errors. I can send this over in a pastebin if anyone is curious.\n\nThanks in advance. I'm learning (slowly)", "id": "fxzk4t1", "parent": "t3_hq54r8", "vote": 1}, {"content": "This was the problem I had to solve:\n\nGiven myList below, sort the list on the absolute value of the entry. Use the sorted function to sort the list. You will need to pass sorted the list and a lambda function as the key parameter. The lambda function returns the absolute value of the parameter. Use the abs function to compute the absolute value.\n\nThis is my code below, but I keep getting lots of errors, and I don't know how to fix it.\n\n    myList = [1, -7, 4, -2, 3]\n    \n    sort_it = sorted(myList, key=lambda x: True if x > 0 else False)\n    print(abs(sort_it))\n\nThe output  is supposed to be (I think):\n\n    [1, -2, 3, 4, -7] [1, 2, 3, 4, 7]\n\nWhat do I need to change?", "id": "fxzqtuv", "parent": "t3_hq54r8", "vote": 1}, {"content": "how to make dictionary through for-loop, not to populate dictionary:\n\nso in other words how to simplify this:\n\n    subj01 = {}\n    subj02 = {}\n    subj03 = {}\n\nI tried:\n\n    for i in range(1, 4):\n        subject = 'subj0{}'.format(i)\n        subject = {}\n\nbut then it will only have\n\n    subject = {}\n\nshould I assign the new variable to global()? hmm but I read somewhere it's not a good habit to do that", "id": "fxzxh9c", "parent": "t3_hq54r8", "vote": 1}, {"content": "x-post (comment?) from r/Python\n\n&#x200B;\n\nHello, I have a simple question on Pycharm that I can't find an answer to anywhere else. In pycharm you can hit tab after entering into a ( ), \\[ \\], { }, ' ', f\" \", and pretty much anything else and it will exit whatever your working in and place caret right outside it. Easy to continue coding without using directional keys or mouse. However, when I use triple quote strings and triple quote comments, \"\"\" \"\"\", hitting tab will just add a tab into the string/comment rather than exit the string/comment, \"\"\"     \"\"\". I've tried shift+tab, ctrl+tab and ctrl+shift+tab (this just opens another file). Idk what else.\n\n&#x200B;\n\nI'm running windows 10, Python 3, Pycharm 2020.1.2 if that helps. I'm around 33% done with Python Crash Course and this has been bothering me the whole time lol.\n\n&#x200B;\n\nThanks a bunch!", "id": "fxzysfb", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hey guys I've been using spyder to code lately I've been doing some programs that require time to execute because they are heavy codes indeed, I looked in the task manager of windows and my computer only uses like 140 mb, is there any way to make the calculations faster?, I have a core i5 of 8th gen and 8 GB of ram, and I have no more windows open, thanks.", "id": "fy021xk", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hey everyone, im quite new to python, taking a neuroscience class that deals with programming in python and applying it to neuroscience datasets. Anyways, for one of my assignments, I\u2019m having trouble with a concept. Say I have a dataset, gene_data, with multiple lists ranging from brain region names to gene expression levels. Brain regions is the first list in the genedata dataset. I have to find values in the data set, specifically floats, that are >1.5. These values represent gene expression levels for the gene DISC1 in different brain regions. The part I\u2019m struggling with is:\nI have to compile said values >1.5 into a list. I managed to do so with a for loop, but now I have to match the values with the corresponding brain region. I\u2019m having trouble creating a for loop that matches the value >1.5 to the brain region. Any help would be appreciated, sorry if it doesn\u2019t make sense here, I can clarify by showing what I managed to code so far", "id": "fy02sxx", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hi everyone, \n\nI have a networkx graph that has:  \nnodes: \\[1,2,3\\]  \nedges: \\[1,2\\],\\[3,4\\],\\[2,4\\]\n\nMy desired output is something like :\n\nnode | lvl 1 | lvl 2 | lvl 3|\n\n1        | 2      | 4      | NaN\n\n2        | 4      | NaN| NaN\n\n3        | 4      | NaN| NaN\n\nIs there any way I can convert my graph to a tabular form to attain my desired output? Based on what I read, to\\_pandas\\_adjacency and to\\_pandas\\_edgelist does not give the desired result I need.\n\nThanks in advance!", "id": "fy0nz8y", "parent": "t3_hq54r8", "vote": 1}, {"content": "I have a dict and if this dict is called with a certain key, it's very likely that the user made an error. (She didn't properly set up). However I don't want my user to crash, but return a default reponse and issue a warning. I could think about ways to accomplish this like wraping everything inside a function, but what's a good Pythonic way to implement this?", "id": "fy0o4c1", "parent": "t3_hq54r8", "vote": 1}, {"content": "Total newbie here, is there any way for a vpython simulation to run in a new, offline window instead of going straight to localhost?", "id": "fy0ora6", "parent": "t3_hq54r8", "vote": 1}, {"content": "&#x200B;\n\nHi, I'm new to programming  and  I'm working with Atom. I have a problem with running user input even though platformio-ide-terminal is installed. Also I have the script package installed if it's of any help\n\nThanks to all in advance:)", "id": "fy0yl7r", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hey guys, \n\nI made two different functions. For both of the functions, i get a pandas dataframe. Everything was fine, as long as i calculated values in each of the functions. But now I want to compare values of the two different data frames. So I created a new .py-file and imported both of the functions. However, I can\u00b4t call the data frames in the new file. I don't want to combine both functions into one file, because it gets too big. What\u00b4s the normal approach here? Thank you!", "id": "fy13dkb", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hi,\n\nWhat do you do when you are unable to get an external package to work - even in the examples provided by the package? I've been trying to get CleverHans and Foolbox to work but even getting one of the examples/tutorials to work takes for ever. I'm using virtualenv to make sure I am using the dependencies the git repositories say they test on, but it still never seems to work out of the box. I know once I can get the examples to work, I should be able to complete my task as it is relatively straightforward.\n\nUnfortunately, I'm not experienced enough with Python to figure out why nothing seems to work. My general process is:\n\n* Create a new virtualenv\n* pip install cleverhans/foolbox\n* pip install specific versions of any of their dependencies if not already installed\n* Copy example/tutorial into a new file within the virtualenv\n* Try to run\n\nMost often my errors tend to be typing errors (not something I am used to coming from MATLAB) and look similar to:\n\"expected object of scalar type long but got scalar type int for argument #2 'target' in call to _thnn_nll_loss_forward\".\n\nThese errors I can spend hours trying to debug, but usually fixing one pushes an error further down the scenario. Is it normal for these examples to ship with errors or is it something about my process that makes me more prone to them?", "id": "fy1b1fs", "parent": "t3_hq54r8", "vote": 1}, {"content": "I want to give command line input to my program in a format with predefined tags. Is there a way to do this thing in python and store those string in a variable. The format would be something like :\n\n    myprogram.py -f \"string1\" -t \"string2\" -i \"string 3 some directory path\"\n    \n    Any help appreciated!!", "id": "fy1vpow", "parent": "t3_hq54r8", "vote": 1}, {"content": "I'm following a youtube beginner tutorial on Python and i was wondering why cant i use the variable \"translation\" outside of the translate function?\n\n`def translate(phrase_input):`  \n`translation = \"\"`  \n`for letter in phrase_input:`  \n`if letter in \"AEIOUaeiou\":`  \n`translation = translation + \"g\"`  \n`else:`  \n`translation = translation + letter`  \n`return translation`  \n\n\n`print(translate(input(\"Enter a phrase: \")))`", "id": "fy2baif", "parent": "t3_hq54r8", "vote": 1}, {"content": "Im having issues with an interview question for a company about a program and I have a rough outline of what I need to do and what I have made so far. Id prefer to send a DM with the problem does anyone think they can help me?\n\nEdit: it isnt too much just sorting a list of objects but I am curious of building the classes and the best method to sort the list.", "id": "fy2lfd4", "parent": "t3_hq54r8", "vote": 1}, {"content": "Been working on a few beginner projects I had in mind, one of which is a script that is meant to help practice mental math. I now want to implement code that can track the performance of a session (for example, how many times you answer correctly out of 10 questions) and return the results from past sessions, as a way to track improvement. My initial idea was using something like openpyxl and modify an excel worksheet for this task, but I was wondering if this is an example of over-engineering and that I don't need an excel file at all to do this (i.e. the script returns past logs in the terminal). Any thoughts?\n\nMy code is here:   [https://github.com/uofcyzd/mental-math/blob/master/main.py](https://github.com/uofcyzd/mental-math/blob/master/main.py)", "id": "fy2n0bg", "parent": "t3_hq54r8", "vote": 1}, {"content": "Could someone tell me why I can't get Pandas to read this CSV? Here are the parameters I'm using, which just result in unnamed columns and NaN rows:\n\n    import pandas as pd\n    df = pd.read_csv(\"pizza.csv\", encoding = \"Latin\", sep='\\t',  header = 4)\n    df.head(3)\n\nLink to the csv:", "id": "fy2npz9", "parent": "t3_hq54r8", "vote": 1}, {"content": "I have this problem that I have been stuck on, any help would be great: \n\nThe function bestScrabbleWords should accept a list of words, sort them by their scrabble value, and return the top howMany words. You need to use the key parameter to the sorted function with the key parameter specifying a lambda function.\n\n    #The code I have so far is:\n    \n    letter_values =  {'a':1, 'b':3, 'c':3, 'd':2, 'e':1, 'f':4, 'g': 2, 'h':4,\n        'i':1, 'j':8, 'k':5, 'l':1, 'm':3, 'n':1, 'o':1, 'p':3, 'q':10, 'r':1,\n        's':1, 't':1, 'u':1, 'v':8, 'w':4, 'x':8, 'y':4, 'z':10}\n    \n    def scrabbleValue(word):\n        v = 0\n        for letter in word.lower():\n            v += letter_values[letter]\n        return v\n    \n    def bestScrabbleWords(words, howMany=3):\n        scores = []\n        for score in range(len(words)):\n            if scrabbleValue(words[score]) >= 0:\n                scores.append((words[score],scrabbleValue(words[score])))\n        return scores\n        print(sorted(scores, key=words)) \n    \n    scrabbleWords = ['python', 'program', 'list', 'string', 'unix', 'hours', 'syntax', 'error']\n    bestWords = bestScrabbleWords(scrabbleWords, 4)\n    print(bestWords)\n\nThe output I get is:\n\n    [('python', 14), ('program', 12), ('list', 4), ('string', 7), ('unix', 11), ('hours', 8), ('syntax', 16), ('error', 5)]\n\nI am not getting any errors, but it isn't sorting that data in order of the scrabble value. I also have no idea where I would put lambda in this code either.", "id": "fy2vblh", "parent": "t3_hq54r8", "vote": 1}, {"content": "What's the difference between a vector and a factor? When do you use one over the other?", "id": "fy3gxgg", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hello, I'm trying to make a saved post manager using `praw`.\n\nI'm following this [tutorial](https://praw.readthedocs.io/en/latest/getting_started/quick_start.html) and all the links within. I have \"made\" my app (\"My Test App\") in reddit, got the client and secret, and the next step, as I understand it, should be to acquire a token. I followed the Python example [here](https://github.com/reddit-archive/reddit/wiki/OAuth2-Quick-Start-Example#python-example) but in a python file. Upon running it I got this `json` response.\n\n    {'message': 'Too Many Requests', 'error': 429}\n\nI used this account's credentials as username and password, the request is posted to [`https://www.reddit.com/api/v1/access_token`](https://www.reddit.com/api/v1/access_token), and lastly the client and secret is from what reddit gave me when the app was made. I tried running it every other hour and it still returns that error. I googled around but the results doesn't really offer much solution.\n\nAnother thing I'd like to ask, which may also be the reason the above is happening, is what to put in the `\"User-Agent\"` under `headers`. I put in `My_Test_App/0.1 by renscy`, following the tutorial's convention, but the following code snippets I found like [this](https://www.reddit.com/r/redditdev/comments/hr53ut/unauthorized_error_on_request/) use them in a different way. Can someone help me determine what would be mine? For context this is just a personal use script only, developing on Windows 10 using PyCharm, and I'm not sure yet how or where to run it (most possibly Django). In the first linked, it said:\n\n> To use Reddit\u2019s API, you need a unique and descriptive user agent. The recommended format is `<platform>:<app ID>:<version string> (by u/<Reddit username>)`. For example, `android:com.example.myredditapp:v1.2.3 (by u/kemitche)`\n\nIn my case, is it correct that it's `windows:My_Test_App:0.1 (by u/renscy)`? I tried to use it, but now the error is:\n\n    {'message': 'Unauthorized', 'error': 401}\n\nNow I'm at a loss, any ideas what I'm doing wrong?\n\nThanks!", "id": "fy4n4k5", "parent": "t3_hq54r8", "vote": 1}, {"content": "hi, im currently working on a research paper for school on chaos in the double pendulum.\n\ni needed to make some graphs but i had no idea how to so i looked online and found  [https://adamdempsey90.github.io/python/double\\_pendulum/double\\_pendulum.html](https://adamdempsey90.github.io/python/double_pendulum/double_pendulum.html)  this website.\n\nthe problem is that it worked fine 2 days back and gave me proper results with a graph that updated for 25 seconds after which it became a static image.\n\nbut now the simulation wont run. it will only load for the first 0.01th second and then not update at all.\n\ni havent done anything different to the code.\n\nalso before the simulation used to open in  different file ( i am using jupyter notebook), but now the simulation open under the cell itself and doesnt update.\n\nim completely lost and as i am not familiar with the code or libraries used i have no idea whats wrong.\n\nthanks\n\nthis is the code which i used to make it easier for you guys\n\n    import matplotlib.pyplot as plt\n    import numpy as np\n    from scipy.integrate import odeint\n    \n    g = 9.8\n    \n    class Bob():\n        \"\"\" This class holds all of pendulum variables such as\n        position, velocity, length, mass, and energy.\n        \"\"\"\n        def __init__(self,length, mass, initial_angle):\n            self.l = length\n            self.m = mass      # FIX ME!  Set this line to be equal to the mass variable\n            self.theta = initial_angle\n            self.v = 0       # FIX ME!  Set the v variable equal to 0\n            self.x = 0\n            self.y = 0\n            self.p = 0\n            self.a = 0\n            self.energy = 0\n            self.ke = 0\n            self.pe = 0\n            self.display_values()\n        def display_values(self):\n            # FIX ME!\n            # Print out the initial length, mass, and angle on the lines below\n            # Use the self.l, self.m, and self.theta variables\n            print (self.l,self.m,self.theta)\n    \n    def initialize_plots(b1,b2):\n        \"\"\" Set up the plots that will be used by the animation. \"\"\"\n    \n        fig,axes = plt.subplots(2,2,figsize=(15,10))    # Opens up a figure with four subplots\n    \n        total_l = b1.l + b2.l\n        data =[]\n    \n        xlist = [0,b1.x,b2.x]       # Grab the locations of the bobs.\n        ylist = [0,b1.y,b2.y]\n    \n        axes[0,0].plot([-.5,.5],[0,0],'-k',linewidth=5)\n    \n        # FIX ME!\n        # On the line below pass the xlist and ylist variables to the plot function\n        # Additionally, set the linewidth=3 by using the linewidth variable.\n        line, = axes[0,0].plot(  xlist   ,   ylist   , '-bo', markersize=10,linewidth=3     )# FIX ME!\n    \n        line1, = axes[0,0].plot(b1.x,b1.y,'-b',linewidth=2)\n        line2, = axes[0,0].plot(b2.x,b2.y,'-r',linewidth=2)\n        axes[0,0].set_xlim(-total_l,total_l)\n    \n    \n        axes[0,0].set_ylim(-total_l,total_l)\n        axes[0,0].set_title('t = 0',fontsize=20)\n        axes[0,0].set_xlabel('x',fontsize=20)\n        axes[0,0].set_ylabel('y',fontsize=20)\n        data.append([line,line1,line2])\n    \n        line2, = axes[1,0].plot(0,b1.theta,'-b')\n        line3, = axes[1,0].plot(0,b2.theta,'-r')\n        axes[1,0].set_ylim(-np.pi,np.pi)\n        axes[1,0].set_xlabel('t',fontsize=20)\n        axes[1,0].set_ylabel('$\\\\theta$',fontsize=20)\n        data.append([line2,line3])\n    \n    \n    \n        line1, = axes[0,1].plot(b1.theta,b1.v,'b.')\n    \n        axes[0,1].set_xlabel('$\\\\theta$',fontsize=20)\n        axes[0,1].set_ylabel('$\\\\dot{\\\\theta}$',fontsize=20)\n        axes[0,1].set_xlim(-4,4)\n        axes[0,1].set_ylim(-6,6)\n    \n    \n        line2, = axes[0,1].plot(b2.theta,b2.v,'r.')\n    \n        axes[1,1].set_xlabel('t',fontsize=20)\n        axes[1,1].set_ylabel('Energies',fontsize=20)\n    \n        data.append([line1,line2])\n    \n        line1, = axes[1,1].plot(0,b1.energy,'-b')\n        line2, = axes[1,1].plot(0,b2.energy,'-r')\n        line3, = axes[1,1].plot(0,b1.energy+b2.energy,'-m')\n        data.append([line1,line2,line3])\n        axes[0,0].plot(xlist,ylist,'-o',color='grey',linewidth=3,markersize=10)\n    \n        plt.show()\n        return fig,axes,data\n    \n    def evolve(l1,l2,m1,m2,p1,p2,tend,dt):\n        \"\"\" Entry point for the simulation.\n        l1 = Length of the first bob.\n        l2 = Length of the second bob.\n        m1 = Mass of the first bob.\n        m2 = Mass of the second bob.\n        p1 = Angle of the first bob with respect to the vertical.\n        p2 = Angle of the second bob with respect to the first bob.\n        tend = Total length of the simulation.\n        dt = Time between plot updates.\n        \"\"\"\n        b1,b2 = initialize(l1,l2,m1,m2,p1,p2)\n        fig,axes,data = initialize_plots(b1,b2)\n    \n        t = np.arange(int(tend/dt)+1)*dt\n    \n    \n        i = 1\n        for i,ti in enumerate(t[1:],start=1):\n            pyode(b1,b2,dt)\n            x1,y1,x2,y2 = get_positions(b1,b2)\n            e1,e2 = get_energies(b1,b2)\n            update_plots(b1,b2,ti,fig,axes,data)\n    \n        return\n    \n    def initialize(l1,l2,m1,m2,theta1,theta2):\n        \"\"\" Initialize the simulation,\n            see evolve function for descripton of inputs.\n        \"\"\"\n        b1 = Bob(l1,m1,theta1)\n        b2 = Bob(l2,m2,theta2)\n        junk = get_positions(b1,b2)\n        junk = get_energies(b1,b2)\n        b1.a,b2.a = kick(b1,b2)\n    \n        return b1,b2\n    \n    def kick(b1,b2):\n        \"\"\" This calculates the acceleration on each bob.\"\"\"\n        m1 = b1.m\n        l1 = b1.l\n        v1 = b1.v\n        v12 = v1*v1\n        t1 = b1.theta\n    \n        m2 = b2.m\n        l2 = b2.l\n        v2 = b2.v\n        v22 = v2*v2\n        t2 = b2.theta\n    \n        c = np.cos(t1-t2)\n        c1 = np.cos(t1)\n        c2 = np.cos(t2)\n        s = np.sin(t1-t2)\n        s1 = np.sin(t1)\n        s2 = np.sin(t2)\n        ss = s*s\n    \n    \n    \n        norm = (m1 +m2*ss)\n    \n        a1 = -.5*m2*np.sin(2*(t1-t2))*v12/norm - l2*m2*s*v22/(l1*norm)\n        a1 += (-.5*g/l1)*((2*m1+m2)*s1 + m2*np.sin(t1-2*t2))/norm\n    \n        a2 = l1*(m1+m2)*v12*s/(l2*norm) + m2*np.sin(2*(t1-t2))*v22/(2*norm)\n        a2 += (g/l2)*(m1+m2)*c1*s/norm\n    \n        return a1,a2\n    \n    def get_positions(b1,b2):\n        \"\"\" Calculate the x,y positions of each bob. \"\"\"\n        l1 = b1.l\n        t1 = b1.theta\n    \n        l2 = b2.l\n        t2 = b2.theta\n    \n        x1 = l1*np.sin(t1)\n        y1 = -l1*np.cos(t1)\n    \n        x2 = x1 + l2*np.sin(t2)\n        y2 = y1 - l2*np.cos(t2)\n    \n        b1.x = x1\n        b1.y = y1\n        b2.x = x2\n        b2.y = y2\n    \n        return x1,y1,x2,y2\n    def get_energies(b1,b2):\n        \"\"\" Calculate the kinetic and potential energies of each bob.\"\"\"\n        x1,y1,x2,y2 = get_positions(b1,b2)\n    \n        vx1 = -y1*b1.v\n        vy1 = x1*b1.v\n        vx2 = vx1 + (y1-y2)*b2.v\n        vy2 = vy1 + (x2-x1)*b2.v\n    \n        b1.ke = .5*b1.m*(vx1**2 + vy1**2)\n        b1.pe = b1.m*g*y1\n        b1.energy = b1.ke + b1.pe\n        b2.ke = .5*b2.m*(vx2**2 + vy2**2)\n        b2.pe = b2.m*g*y2\n        b2.energy = b2.ke + b2.pe\n        return b1.energy,b2.energy\n    \n    def kick_wrapper(y0,t,b1,b2):\n        \"\"\" This is a wrapper to the kick function\"\"\"\n    \n        b1.theta,b2.theta,b1.v,b2.v = y0\n        a1,a2 = kick(b1,b2)\n        res = np.array([b1.v,b2.v,a1,a2])\n        return res\n    \n    \n    def pyode(b1,b2,dt):\n        \"\"\" This is a wrapper to the odeint integrator. \"\"\"\n        y0 = np.array([b1.theta,b2.theta,b1.v,b2.v])\n    \n        res=odeint(kick_wrapper,y0,[0,dt],args=(b1,b2))\n        b1.theta,b2.theta,b1.v,b2.v = res[1]\n        if b1.theta > np.pi:\n            while b1.theta > np.pi:\n                b1.theta -= 2*np.pi\n        if b1.theta < -np.pi:\n            while b1.theta < -np.pi:\n                b1.theta += 2*np.pi\n        if b2.theta > np.pi:\n            while b2.theta > np.pi:\n                b2.theta -= 2*np.pi\n        if b2.theta < -np.pi:\n            while b2.theta < -np.pi:\n                b2.theta += 2*np.pi\n        return\n    \n    \n    \n    \n    \n    def update_plots(b1,b2,t,fig,axes,data):\n        \"\"\" Update all of the plots. \"\"\"\n        axes[0,0].set_title('t = %f' % t)\n        line,line1,line2 = data[0]\n        line.set_xdata([0,b1.x,b2.x])\n        line.set_ydata([0,b1.y,b2.y])\n        line1.set_xdata( np.append(line1.get_xdata(),b1.x))\n        line1.set_ydata(np.append(line1.get_ydata(),b1.y))\n        line2.set_xdata( np.append(line2.get_xdata(),b2.x))\n        line2.set_ydata(np.append(line2.get_ydata(),b2.y))\n    \n        line1,line2 = data[1]\n        line1.set_xdata( np.append(line1.get_xdata(), t))\n        line1.set_ydata(np.append(line1.get_ydata(),b1.theta))\n        line2.set_xdata( np.append(line2.get_xdata(), t))\n        line2.set_ydata(np.append(line2.get_ydata(),b2.theta))\n        if t > axes[1,0].get_xlim()[1]:\n            axes[1,0].set_xlim(0,2*t)\n    \n    \n    \n        line1,line2 = data[2]\n        line1.set_xdata( np.append(line1.get_xdata(), b1.theta))\n        line1.set_ydata(np.append(line1.get_ydata(),b1.v))\n        line2.set_xdata( np.append(line2.get_xdata(), b2.theta))\n        line2.set_ydata(np.append(line2.get_ydata(),b2.v))\n    \n    \n        line1,line2,line3 = data[3]\n        line1.set_xdata( np.append(line1.get_xdata(), t))\n        line1.set_ydata(np.append(line1.get_ydata(),b1.energy))\n        line2.set_xdata( np.append(line2.get_xdata(), t))\n        line2.set_ydata(np.append(line2.get_ydata(),b2.energy))\n        line3.set_xdata( np.append(line3.get_xdata(), t))\n        line3.set_ydata(np.append(line3.get_ydata(),b1.energy+b2.energy))\n        if t > axes[1,1].get_xlim()[1]:\n            axes[1,1].set_xlim(0,2*t)\n    \n    \n        plt.pause(1e-5)\n        plt.show()\n        return\n    \n     evolve( 1 , 1 , 6 , 6 ,3.21 ,3.21, 25, 0.1)\n\nthanks again", "id": "fy4nmdc", "parent": "t3_hq54r8", "vote": 1}, {"content": "Pandas question. Let's say I want to filter my dataframe by items in a list, something like\n\n    exclude_values = ['a', 'b', 'c']\n    df = df.loc[~df['foo'].isin(exclude_values)]\n\nThis is pretty straighforward. But what if I have a list of tuples and want to exclude those rows where the columns 'foo' and 'bar' match both? e.g. if 'foo' is 'a' and 'bar' is 1, exclude it?\n\n    exclude_values = [('a', 1) ('b', 1), ('c', 2)]\n\nI know that I could iterate over this list, but that's slow. How can I create a mask like the first one?\n\nedit: basically a mask that does the same as this loop:\n\n    for foo, bar in exclude_values:\n        df = df.drop(df[(df['foo'] == foo) & (df['bar'] == bar)].index)", "id": "fy4o79b", "parent": "t3_hq54r8", "vote": 1}, {"content": "This will likely get buried but im gonna ask anyway.\n\nIs it possible to write a script that will take my input or paste or whatever, search a given folder and subfolders excel spreadsheets and return which spreadsheet it is in? Or even better, open that spreadsheet to the relevant cell. Kind of like the Windows search function but one that actually works!\n\nProbably simple to some people but this is where I'm at!", "id": "fy5ldjz", "parent": "t3_hq54r8", "vote": 1}, {"content": "I'm trying to write a class method to check if a list contains other instances of that class, not including itself. Is this sufficient?\n\n    class Request:\n        def is_contested(self):\n            for req in all_requests:\n                if type(req) == Request and req != self:\n                    return True\n            return False\n\nThis seems to work but I'm wondering if there are any instances where it would fail.", "id": "fy64jcn", "parent": "t3_hq54r8", "vote": 1}, {"content": "Why can't the `requests` module access reddit properly? It's always returning errors, the main site returns 401 and everything else I've tried returns a 502.", "id": "fy6aogq", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hi, can someone please help me with this error.. I'm fairly new to programming and would like some advice. Any help or tips would be appreciated!\n\nI'm receiving an error in the main saying \"No value arugment 'I' in classmethod call and No value argument 'w' in classmethod call'\n\n \n\nclass AreaRectangle():  \n \\#\u00a0Default\u00a0Variables  \n def \\_\\_init\\_\\_\u00a0(self):  \n '''  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Initalize\u00a0members  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'''  \n pass  \n@  classmethod   \n def area(cls,\u00a0l,\u00a0w):  \n return\u00a0l\u00a0\\*\u00a0w  \n @ classmethod  \n def userInput(cls,\u00a0l,\u00a0w):  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0length\u00a0=\u00a0float(input('Enter\u00a0Length:\u00a0'))  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0width\u00a0=\u00a0float(input('Enter\u00a0Width\u00a0:\u00a0'))  \n cls.area(length,width)  \ndef main():  \n\u00a0\u00a0\u00a0\u00a0AreaRectangle().userInput() <--- Error here  \nif \\_\\_name\\_\\_\u00a0==\u00a0'\\_\\_main\\_\\_':  \n\u00a0\u00a0\u00a0\u00a0main()", "id": "fy6h3z9", "parent": "t3_hq54r8", "vote": 1}, {"content": "Yes, this is an assignment. No it's not high school work or whatever, I'm doing this as a hobby but I just cannot connect the materials with the exercise.\n\nSo there is a primitive .txt file that contains hundreds of lines, and some of them have the following pattern:\n\n    From random.rando@ucla.edu Sun Feb 7 04:13:16 2003\n\nThe expected output is an ascending list of the hours (hh) and their frequency. In other words, if this file contains 23 messages sent at 04:XX:YY 20ZZ, the output should be 04 23. Likewise, if 5 messages are sent at 13:AA:BB 20CC, that should appear as well, so the overall output\n\n    04 23\n    13 5\n\n(1) I don't really expect a direct solution or a code here, just some guidance on where should I start. The way I see it, obviously I should loop through every single line, with an if statement checking whether the line starts with \"From \". Got it. For these lines, I should split the lines, so I will have a list that will include the hours in HH:MM:SS format. How can I alter these elements, so that they only include the hours?\n\n\n(2) The idea is (I think) that I can pass these to a dictionary, which would act as a histogram, checking with .get() whether the element exists already or not (if exists, increase value by one, if not, value equals one). I guess afterwards I could do something with them to sort them to ascending order. The much bigger question for now is that how do I get from (1) to (2)? According to the specification, I should use split again (after splitting the lines). But I cannot use split on a list. What worries me more is that I was told lists are not required for this exercise...", "id": "fy6q5uk", "parent": "t3_hq54r8", "vote": 1}, {"content": "```\nword = \"apple\"\nc = len(word) \nfor i in range(1,c+1):\n    print(word[-i])\n```\nHow do I print this in a single line?", "id": "fy6slie", "parent": "t3_hq54r8", "vote": 1}, {"content": "When a module folder, molduleA, contains an __init__.py file and additional folders for submodules, where in moduleA would one put a docstring containing an explanation of moduleA contents?", "id": "fy6zyit", "parent": "t3_hq54r8", "vote": 1}, {"content": "I\u2019m confused which web server to host my django web application surely it must be more python friendly can anyone suggest me a good option? Right now I\u2019m testing it on heroku also considering nginx...need some help guys", "id": "fy7f2h4", "parent": "t3_hq54r8", "vote": 1}, {"content": "Can someone explain in lay terms what an \"object\" and what a \"class\" is?", "id": "fy8hnaa", "parent": "t3_hq54r8", "vote": 1}, {"content": "hi, can anyone tell me why this code only prints the first paragraph of the article? if i inspect the article with firefox it shows the full article in the html code.\n\nThanks in advance \n        \n    import request\n    url=\"https://www.derstandard.at/story/2000118726314/insider-verraet-dass-schwer-kriminelle-elemente-zu-lebenslanger-sperre-von\"\n    response=requests.get(url)\n    \n    print(response.content)", "id": "fy95t2t", "parent": "t3_hq54r8", "vote": 1}, {"content": "Can anyone with the `requests` module try accessing reddit? Any link from reddit will do. It keeps returning 401 or 502 errors on my end.", "id": "fy9bnwe", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hello, Im just starting with python, using a udemy course, and in one of the labs they ask you to open the a file and have a function read it.  My file is in the same directory as my script, but when I execute the script it tell me there is no such file.  Im using Visual Studio Code.\n    \n    print()\n    print('---------------------Customer Information--------------------')\n    print()\n    person_no = 1\n\n    with open('customerinfo', 'r') as people_file:\n\n    for person in people_file:\n\n        print(person_no, '     Customer:', person.strip())\n        person_no += 1        # same as person_no = person_no +1\n\n    print(\"\")\n    print(\"Total customer: \", person_no-1)", "id": "fy9xdgb", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hi I am running using threads to \"loop\" through 2000 different news urls to grab body texts. I have the code set up so that if there is an error, print out the error and the associated url. The problem is out of the 2000 urls, only 58 body texts are downloaded with only 3 errors. What happened to the other requests?", "id": "fya69ho", "parent": "t3_hq54r8", "vote": 1}, {"content": "I am struggling to understand Kaggle's section over lists and list comprehension.  Why does the else statement break this piece of code from Kaggle?:\n\n    def has_lucky_number(nums):\n        \"\"\"Return whether the given list of numbers is lucky. A lucky list\n        contains at least one number divisible by 7.\n        \"\"\"\n        for num in nums:\n            if num % 7 == 0:\n                return True\n            else:\n                return False\n\nThe given solutions are as follows:\n\n>Remember that return causes a function to exit immediately. So our original implementation always ran for just one iteration. We can only return False if we've looked at every element of the list (and confirmed that none of them are lucky). Though we can return early if the answer is True:\n\n    def has_lucky_number(nums):\n        for num in nums:\n            if num % 7 == 0:\n                return True\n    # We've exhausted the list without finding a lucky number\n        return False\n\n>Here's a one-line version using a list comprehension with Python's anyfunction (you can read about what it does by calling help(any)):\n\n    def has_lucky_number(nums):\n        return any([num % 7 == 0 for num in nums])\n\nI specifically don't understand how in the first solution, by removing the line that uses \"else:\" it magically fixes the code. I understand that the return statement exits the for loop, and that the if statement needs to check all the numbers in the list before deciding whether it is or is not a lucky list. Could someone please give me a ELI5-esque explanation?", "id": "fyauyy3", "parent": "t3_hq54r8", "vote": 1}, {"content": "I want a variable to equal nothing till a person answers a input prompt\n\ni.e\n\np2 = \\_\\_\\_\\_ (Supposed to be nothing)\n\ninput(\"Are you blue, Yes or No?\")\n\nwhile p2 == \"Yes\"\n\nprint(yes)\n\nbreak\n\nif p2 == \"No\"\n\nprint(no)\n\n&#x200B;\n\n&#x200B;\n\nIs this possible?", "id": "fyax0k2", "parent": "t3_hq54r8", "vote": 1}, {"content": "I am python n00b.\n\nTrying to make famous rock paper scissors game. I have noticed when using random to generate a computer pick between 1 and 3, 1 never seems to come up. I am assuming I am doing something wrong in my code so I have linked to a pastebin. Any help is appreciated.   \n[https://pastebin.com/MPcnkLLc](https://pastebin.com/MPcnkLLc)", "id": "fybdb2q", "parent": "t3_hq54r8", "vote": 1}, {"content": "When using the while loop, why is it necessary to put ==0. Basically, I'm doing a course and it says, if the number is divisible by 4 put that in the else statement of the while loop or whatever. So I did x %% 4 and it was wrong, turns out the answer is x %% 4==0. What does the \"==0\" mean? I know it means equal to 0 but why it is needed in this case?", "id": "fybhf2h", "parent": "t3_hq54r8", "vote": 1}, {"content": "I'm currently learning about recursion. How would I be able to recursively go through a string and update dictionary values if a character is a number or letter without using loops? I have figured out how to iterate through the string I just do not know how I can update key values.\n\nGiven a string, have to use recursion and no loops, return a dictionary with {'letters': number of occurrences, 'numbers': number of occurrences}", "id": "fyc3vvq", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hey guys, I have 12 hour shifts at work and I don't have a lot of responsibilities during my shifts, a lot of the time I'm just trying to pass the time - but unfortunately I don't have access to my laptop.\n\nHow could I use this time to learn some Python on my phone? I have PyDroid. For reference, I'm quite new to Python (been learning since lockdown began), but I'm familiar with the basics and have built a simple game. I'd like to go into data analysis. Any tips or resources for how I can most effectively spend my time learning Python on my phone?", "id": "fyd7vnw", "parent": "t3_hq54r8", "vote": 1}, {"content": "I'm in the midst of learning python3 through the very fun libtcod - make a roguelike tutorial. I find myself wanting to practice more when I'm away from my PC though.\n\nI remember when Google put out Grasshopper to teach people JavaScript, I was wondering if there was a similar, mobile-friendly resource like that app for Python?", "id": "fydc4p5", "parent": "t3_hq54r8", "vote": 1}, {"content": "I am trying to find more information about variables on python documentation, but looking up variable doesn't seem to yield results that I want.\n\nWhat I am referring to is this\n\n    foo = \"bar\"\n    intNum = 42\n    booly = True\n    degrees = 42.0\n\nI usually see this an call it a variable, or a variable declaration, or we can get more specific and say its a string, int, boolean, float/double variable (even though in python we don't have to add \"string\",\"int\",\"boolean\",\"float\"/\"double\" in front of the variable name.\n\nedit; apparently when I googled string, and I guess its more referred to as string instead of variable. \n\n [https://docs.python.org/3.8/library/string.html](https://docs.python.org/3.8/library/string.html)", "id": "fydq4r5", "parent": "t3_hq54r8", "vote": 1}, {"content": "If I'm a medical student that's involved in clinical research would I gain more value from learning R or learning python if I want to do statistical analysis without relying on excel or SPSS? This is basic statistics (t-tests, ANOVA, linear regression, etc...).\n\nI hear R has the slight advantage but I'm also drawn to python because it has a lot more uses outside of statistical analysis in terms of automating tasks and writing scripts.", "id": "fyf5m6v", "parent": "t3_hq54r8", "vote": 1}, {"content": "I'm getting trouble in school club assignment.\n\n*****\n~\n\n        input_english.append(0:input_void)\n        input_korean.append(input_void:-1)\n\n~\n*****\n\ninput_english, input_korean => list\n\ninput_void => int?(just few numbers)\n\n\n\nWhich part has the error? (Syntax error)\n\n(Sorry for my terrible english)", "id": "fygbl5k", "parent": "t3_hq54r8", "vote": 1}, {"content": "[deleted]", "id": "fyh2u34", "parent": "t3_hq54r8", "vote": 1}, {"content": "PYTHON 3 INSTALL HELP (MAC\\_OS). Could someone please help me understand how to install python3 using the terminal on mac OS? I would have gone with PC tbh but I'm using the mac to produce music... long story. Anyway, my mac is running Catalina 10.15.2. I was trying to understand the install process using the Hitchhiker's Guide to Python [here](https://python-guide.readthedocs.io/en/latest/starting/install3/osx/#install3-osx) and the Homebrew website [here](https://docs.brew.sh/Homebrew-and-Python#setuptools-pip-etc). I've done what research I could and I'm still struggling. Right now I believe I'm stuck on $(brew --prefix)/opt/python/libexec/bin and inserting the Homebrew directory at the top of my environment variable. Hitchhiker's Guide to Python says I can do this by adding the following line at the bottom of your \\~/.profile  \n file:\n\nexport PATH=\"/usr/local/opt/python/libexec/bin:$PATH\"\n\nBut I'm stuck. I've tried sudo nano /etc/paths but I'm lost. I appreciate your feedback and help with this. Truly. Thank you for taking the time to read this post. Stay safe out there during COVID-19.", "id": "fyhb7nm", "parent": "t3_hq54r8", "vote": 1}, {"content": "[deleted]", "id": "fyhxxxt", "parent": "t3_hq54r8", "vote": 1}, {"content": "Where should one define constant variables, after imports, inside functions, or else?", "id": "fyhyaj5", "parent": "t3_hq54r8", "vote": 1}, {"content": "[deleted]", "id": "fyi5has", "parent": "t3_hq54r8", "vote": 1}, {"content": "I joined codewars today and first project it asked me to do was the morse code/decoder. I think it put me in a way more advanced project then what i thought but i watched some videos and basically copied someone, I just couldnt get it. Maybe someone can explain it to me and write it in a more friendly way for me to understand better...\n\ndef morse(text):  \nencrypt = {'A':'.-', 'B':'-...',  \n 'C':'-.-.', 'D':'-..', 'E':'.',  \n 'F':'..-.', 'G':'--.', 'H':'....',  \n 'I':'..', 'J':'.---', 'K':'-.-',  \n 'L':'.-..', 'M':'--', 'N':'-.',  \n 'O':'---', 'P':'.--.', 'Q':'--.-',  \n 'R':'.-.', 'S':'...', 'T':'-',  \n 'U':'..-', 'V':'...-', 'W':'.--',  \n 'X':'-..-', 'Y':'-.--', 'Z':'--..',  \n '1':'.----', '2':'..---', '3':'...--',  \n '4':'....-', '5':'.....', '6':'-....',  \n '7':'--...', '8':'---..', '9':'----.',  \n '0':'-----', ', ':'--..--', '.':'.-.-.-',  \n '?':'..--..', '/':'-..-.', '-':'-....-',  \n '(':'-.--.', ')':'-.--.-', 'SOS':'\u00b7\u00b7\u00b7\u2212\u2212\u2212\u00b7\u00b7\u00b7'}  \n\n\ndecrypt = {value: key for key, value in encrypt.items()}  \n\n\nif '-' in text:  \nreturn ''.join(decrypt\\[i\\] for i in text.split())  \nreturn ' '.join(encrypt\\[i\\] for i in text.upper())  \n\n\nprint(morse('python'))  \nprint(morse('.--. -.-- - .... --- -.'))  \n\n\nmainly its this part i'm confused by..................\n\nif '-' in text:  \nreturn ''.join(decrypt\\[i\\] for i in text.split())  \nreturn ' '.join(encrypt\\[i\\] for i in text.upper())\n\nif there is a hyphen in text do something, but we didn't define text ahead of time.\n\nThe next two lines are confusing as well, I see \\[i\\] is the value of the dictionary and then it says for i in text.split() so its splitting the word into letters to decode it but it has .join at the very start with nothing in front of it.  \nI dont know, i am so confused any help is appreciated.", "id": "fyj7nfq", "parent": "t3_hq54r8", "vote": 1}, {"content": "I'd like to build an overlay, HUD, or mouse-over tooltip but I'm unsure how to do that with the standard GUI tools recommended online. I wanted to start small with a tooltip popup from my mouse on certain conditions, but I am looking to have it interact with another program, so a standard tkinter GUI won't really work I don't think. Thoughts?", "id": "fyjqi5d", "parent": "t3_hq54r8", "vote": 1}, {"content": "[deleted]", "id": "fyjr6cv", "parent": "t3_hq54r8", "vote": 1}, {"content": "Hi all,\n\nI am trying to create a webscraper that runs daily, scrapes the new COVID data posted on the table that is updated on [worldometers.info](https://worldometers.info), and then writes all of this data to an Excel sheet as a personal project with the purpose of using it as a database and eventually doing statistical analysis. I'm a little caught up though and am unable to find what answers I am looking for on google...\n\n&#x200B;\n\nMy code is below, but I am having two main problems. 1) I do not know how I would be able to create a \"timeseries\" database to write the date of the data taken into a new column in my database. 2) Other problem is that my data is not coming out parsed correctly, and when I print the below all I get is a mess of HTML code that I do not know what to do with.\n\n&#x200B;\n\nthanks in advance for any help...\n\n&#x200B;\n\n    soup = BeautifulSoup(source, 'lxml')\n    covid_table = soup.find('table')\n    \n    for location in covid_table.find_all('tbody'):\n        rows = location.find_all('tr')\n        for row in rows:\n            geo = row.find('td').text.strip()\n            total_cases = row.find_all('td')[1].text.strip().split()\n            new_cases = row.find_all('td')[2].text.strip().split()\n            total_deaths = row.find_all('td')[3].text.strip().split()\n            new_deaths = row.find_all('td')[4].text.strip().split()\n            active_cases =row.find_all('td'[5].text.strip().split()", "id": "fykvy5u", "parent": "t3_hq54r8", "vote": 1}, {"content": "If I am trying to use matplotlib using an anaconda, which app/environment/IDE/etc. should I use? I am thinking JupyterLab, but would another one be easier?", "id": "fykwool", "parent": "t3_hq54r8", "vote": 1}, {"content": "I am new to python\nI'm using Jupiter Notebook\nI want to create a function where a string is printed as it is but with the Mixed Case words in the string shuffled. I'm having trouble with it.\nCan anyone help me out?", "id": "fykxibi", "parent": "t3_hq54r8", "vote": 1}, {"content": "Pyglet - is there a way to separately blend two images and then blend those two blended images with the background? I am trying to make a light effect by drawing a gradient circle on a gray plane, and then blending that mix with the background using `glBlendFunc(GL_DST_COLOR, GL_ZERO)`.\n\n&#x200B;\n\nThis is what I have for now, but the problem here is I want to be able to modify the light size and position in the `gray_and_lights_image` which would mean drawing to that image.\n\n    # draw background\n    background_image.blit(x, y)\n    tree_image.blit(x, y)\n    \n    # change blend mode\n    glBlendFunc(GL_DST_COLOR, GL_ZERO)\n    \n    # draw the gray image with gradient lights\n    gray_and_lights_image.blit(x, y)\n    \n    # change blend mode back\n    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)\n\nI have tried flipping the order by blending the background on the `gray_and_lights_image` which allowed me to modify the lights and then add them on the gray plane since the background is not yet drawn, but it becomes wonky if I have many background elements.\n\nWent through many google searches and can't quite wrap my head around the OpenGL stuff.\n\n&#x200B;\n\nTL;DR - how tf do you blend two images offscreen in Pyglet", "id": "fykxxb6", "parent": "t3_hq54r8", "vote": 1}, {"content": "does anyone know how to download GTK for anaconda? \n\nI tried their  \n\n    conda install -c conda-forge gtk3\n    \n    but it says \"failed with initial frozen solve\"\n    Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.", "id": "fylh34w", "parent": "t3_hq54r8", "vote": 1}, {"content": "Botty bot says: Me too!!", "id": "fylshnq", "parent": "t3_hq54r8", "vote": 1}, {"content": "This is my first time trying to use Class and it isn't working and I don't know why. Every time I try to run it, it says \"TypeError: object() takes no parameters\"\n\nThis is the question along with the code I have so far\n\n    #Define a class named Book. Each instance of Book should have three instance variables:\n    \n    #title\n    #author\n    #checked_out.\n    \n    #The Book constructor should take two arguments, title and author. Use these to set the initial #values for the corresponding instance variables. The instance variable checked_out should be set #to False.\n    \n    class Book:\n        def _init_(self, title, author):\n            self.title = title\n            self.author = author\n            self.checked_out = False\n        def get_title(self):\n            return self.title\n    \n        def get_author(self):\n            return self.author\n    \n        def set_title(self, title):\n            self.title = title\n            \n        def set_author(self, author):\n            self.__author = author\n    \n    mybook1 = Book('Kokoro','Natsume Souseki')\n    mybook2 = Book ('A Wild Sheep Chase', 'Murakami Haruki')\n    mybook3 = Book('Kappa', 'Akutagawa Ryuunosuke')\n    mybook4 = Book('No Longer Human', 'Dazai Osamu')\n    \n\nCan anyone help me figure this out?", "id": "fyo54zy", "parent": "t3_hq54r8", "vote": 1}, {"content": "I have found the python for everybody text ($1.99 if you want it on Kindle) to be a good place to start, the freecodecamp tutorials are based on it. I also really love the tech with Tim videos on YouTube. He is very good at explaining things and takes his time to get it right. Highly recommend.", "id": "fy1t9e6", "parent": "t1_fy1d6vo", "vote": 2}, {"content": "Yes, you will have no problems.  There are other [learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index?utm_source=reddit&utm_medium=usertext&utm_name=learnpython&utm_content=t5_2r8ot).", "id": "fy01uuz", "parent": "t1_fy00b5z", "vote": 5}, {"content": "Some small amount of new stuff has been added (\":=\", for example), and it's worth googling the changes when you have a bit, but 3.6 stuff will continue to work, and you're not real behind our anything.", "id": "fy0fxqp", "parent": "t1_fy00b5z", "vote": 1}, {"content": "i'd avoid escaping quotation marks where possible, change the outer quotes to apostrophes. if you're on python 3.6+ use an f-string; it's much eaiser to read and write:\n\n&#x200B;\n\n    f'adb shell \"echo {cmd} | microcom -t3 /dev/ttyAT\"',", "id": "fy92kiz", "parent": "t1_fy8p4lw", "vote": 2}, {"content": "you could test this yourself - check out the timeit module\n\nwhile it's useful to have a basic understanding of complexity - realistically, python is often used because its fast to write, not because it's fast at runtime. i'd argue that if performance is crucial enough that you're worrying about string concatenation (which even if you use in the most optimal way isn't going to save much time), perhaps python is not the right tool for the job. i'd only start to worry about performance issues when they actually arise, and until then i tend to write python code as short and as quickly as i can, while still being somewhat self-documenting.", "id": "fy963pb", "parent": "t1_fy937pp", "vote": 1}, {"content": "I assume the loop looks like this:\n\n    for row in range (7):\n        for col in range (5):\n            if ((col==0 or col==4) and row!=0) or ((row==0 or row==3) and (col>0 and col<4)):\n                print(\"*\", end=\"\")\n            else:\n                print(end=\" \")\n        print()\n\nMaybe it'll help to visualise the area in which the letter A was drawn as a grid with coordinates:\n\n||||||\n:--:|:--:|:--:|:--:|:--:\n0,0 | **0,1** | **0,2** | **0,3** | 0,4 |\n**1,0** | 1,1 | 1,2 | 1,3 | **1,4** |\n**2,0** | 2,1 | 2,2 | 2,3 | **2,4** |\n**3,0** | **3,1** | **3,2** | **3,3** | **3,4** |\n**4,0** | 4,1 | 4,2 | 4,3 | **4,4** |\n**5,0** | 5,1 | 5,2 | 5,3 | **5,4** |\n**6,0** | 6,1 | 6,2 | 6,3 | **6,4** |\n\nThe outer loop (with `row`) is responsible for the first coordinate.\n\nWithin each row the inner loop (with `col`) supplies in the second coordinate.\n\nAt this point we have both coordinates for the position we are in so a decision can be made using `if` whether or not an asterisk should be placed in this location.\n\nAfter each inner loop (`col`) the empty `print()` on line 7 moves the cursor to the beginning of the next line (it does that by default whenever a different `end` argument is not supplied). Then the next row is again processed left-to-right.\n\nIn other words, the order in which the cells are considered is: 0,0 - 0,1 - 0,2 - 0,3 - 0,4 - 1,0 - 1,1 etc.", "id": "fy9t0b7", "parent": "t1_fy99i1v", "vote": 1}, {"content": "That's slicing notation. It's `[j:(j+3)]` (the `:` has lower precedence than the `+`), and it just means take all indices from `j` (inclusive) to `j + 3` (exclusive).\n\nFor example, `'0123456789'[4:4+3]` is `'456'`.", "id": "fxvuxu4", "parent": "t1_fxvtomq", "vote": 2}, {"content": "A couple different ways are available. \n\nI prefer to just use the other type of quote for most cases. Strings can be quoted either by single or double quotes, you if you want double quotes: `print('Hello \"quoted\"')`\n\nMore canonically (this is an important concept so you should be familiar with it), you can *escape* the quote within the string. Like, you can use a backslash to tell python that you don't want the string to end with the next character: `print(\"Hello \\\"quoted\\\"\")`\n https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals", "id": "fxwrczr", "parent": "t1_fxwoi4z", "vote": 2}, {"content": "Where does `team` come from? It looks like you're trying to call an object like a function (\"object is not callable\"), so it makes me think that team is an object that has some methods available, and you're not telling which method should be used.\n\nLike, is `team.write(writer, sheet_name='Report')` or something similar an option?", "id": "fxwqjkj", "parent": "t1_fxwp07x", "vote": 2}, {"content": "These things exist, but I don't have any good and current references for you to read.\n\nI would recommend running through nandgame.com, which is a game that builds up a computer from logic gates.", "id": "fxxnedg", "parent": "t1_fxwugm4", "vote": 1}, {"content": "An online book I used to learn (more like try to learn) some math for machine learning  (not sure if will help in your usecase)\n\n[http://www.deeplearningbook.org/front\\_matter.pdf](http://www.deeplearningbook.org/front_matter.pdf)\n\n[http://www.deeplearningbook.org/](http://www.deeplearningbook.org/)\n\n* [Linear Algebra](http://www.deeplearningbook.org/contents/linear_algebra.html)\n* [3 Probability and Information Theory](http://www.deeplearningbook.org/contents/prob.html)\n* [4 Numerical Computation](http://www.deeplearningbook.org/contents/numerical.html)", "id": "fxyc4c2", "parent": "t1_fxwugm4", "vote": 1}, {"content": "You might just want to trap Ctrl-C; it's simple, standard, built-in and only active in the specific window.\n\n[https://www.devdungeon.com/content/python-catch-sigint-ctrl-c](https://www.devdungeon.com/content/python-catch-sigint-ctrl-c)", "id": "fxxywif", "parent": "t1_fxx6dis", "vote": 1}, {"content": "That could work, really depends on your use case. Is it going to be running long enough that you might not want to store all the events in memory? Are you concerned about losing data to a crash? Do you intend to do any analysis on them as a whole? And so on. \n\nWhat I'd probably actually do is just keep the file open and keep writing more to it as I go (explicitly flushing to the file often), possibly keeping track of how much has been written and closing and creating a new one every so often (perhaps based on time and/or file size).", "id": "fxxeyw6", "parent": "t1_fxx968j", "vote": 2}, {"content": "One way to make this log writing robust and low memory footprint is to use a simple DB like sqlite. You an generate csv output from sqlite tables, or just do your analysis directly in the db.", "id": "fxxygbw", "parent": "t1_fxx968j", "vote": 2}, {"content": "    for i in range(len(t_final[\"Material\"])):\n        try:\n            if float(t_final.iloc[i,12]) > int((t_final.iloc[i,13])):\n                worksheet.set_row(i, 15, cell_format)\n        except ValueError:\n            continue", "id": "fxxsv4m", "parent": "t1_fxxa2gw", "vote": 1}, {"content": "A python list is converted to a numpy array, which is usually used with math due to being  faster. This array is then given to the function printArray. PrintArray uses a numpy function that returns the items in array one by one. (which is given to the loop, i think the C++ this would be the syntax for range loop over a vector: `for (int& x: string) {...}` )\n\nHowever, the user takes these items (which are looped over in the order 1, 0, 1, 0,1), and accesses the original array at index 0 and 1 depending on what the item is, which gives the appearance of swapping 0s to 1 or vice versa.\n\n    loop sets x to 1, the first item in the loop\n    user prints string[x] -> string[1] -> 0 (item in second position in array)\n    loop sets x to 0, the second item in the loop\n    user prints string[x] -> string[0] -> 1 (item in first position in array)\n    loop sets x to 1, the third item in the loop\n    user prints string[x] -> string[1] -> 0 (item in second position in array)\n    ...\n\nThose values are printed. If you change of those numbers in the original list to something above 4, it'll crash because it'll try to access an index larger than the array.\n\nThe last line just prints the array, as it's in a notebook and things not assigned to a variable are printed. (Unless you end the line with a ; i think)", "id": "fxy58i0", "parent": "t1_fxy0l59", "vote": 1}, {"content": "Assuming the timestamps always increase, build an index of the starting time of each file first and use that to build the list of files you need to read.\n\nBTW, your code is posted in a format that has no indentation; could you use a \"code block\"?\n\n[https://www.reddit.com/r/learnpython/wiki/faq#wiki\\_how\\_do\\_i\\_format\\_code.3F](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)", "id": "fxz68e9", "parent": "t1_fxy6yai", "vote": 1}, {"content": "This looks like a decent place to start: https://stackoverflow.com/a/35866632\n\nI haven't done anything like this, can't help much more.", "id": "fxz18b9", "parent": "t1_fxyfnnu", "vote": 1}, {"content": "If you can arrange a way to safely exchange keys beforehand (eg. the clients can download a certificate over https) then use SSL.\n\n[https://docs.python.org/3/library/ssl.html](https://docs.python.org/3/library/ssl.html)\n\nIf you can't exchange keys beforehand use DH\n\n>[Diffie-Hellman key exchange](https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange) (D\u2013H) is a method that allows two parties to jointly agree on a shared secret using an insecure channel.\n\n[https://cryptography.io/en/latest/hazmat/primitives/asymmetric/dh/](https://cryptography.io/en/latest/hazmat/primitives/asymmetric/dh/)", "id": "fxz59j2", "parent": "t1_fxyfnnu", "vote": 1}, {"content": "Typically abstract methods are used with abstract base (parent) classes- meaning that there will never be an instance of the parent. There will be various children who implement that function in different ways.\n\nSometimes you can choose an appropriate default as a fallback, and put that in the parent class. Sometimes YOU aren't actually the one who will be writing that behavior, and someone will use your base class in a variety of ways, and it should still just work.\n\nI guess it's a bit of a stylistic decision: you can implement a default behavior that will be correct sometimes and blow up other times, or you can leave it unimplemented as a clear signal that the child class should write this.\n\nEither way, these aren't something you should be using too much in most domains. The reasoning is usually given as \"Favor composition over inheritance\"; you can find plenty of discussions about that if you're interested further.", "id": "fxz10rs", "parent": "t1_fxyk62k", "vote": 1}, {"content": "That seemed weird to me at first as well. The short answer is \"because they decided to do it that way\", but in more detail, it's basically which object has a member function to do the thing. \" \".join(yourlist) calls the join function (or method of whatever the cool kids call them these days) that is part of the string class, so it's the string that knows how to combine the items in that way. \n\nLikewise, they decided that the list should be the object that knows how to split. If you read what the python people say about why they made these decisions, they go on about how they thought that was more natural or something, because *really* it's the string that's the main player in the combining or something. It kind of makes sense, but also kind of just sounds made up.\n\nWhich brings us back to the short answer - it is made up. They just decided to do it that way. Eventually you kind of get used to how they did things though, and it starts seeming less weird.", "id": "fxytnaa", "parent": "t1_fxyqtm8", "vote": 1}, {"content": "Pick a project (lean towards something small) and then try to build it. Ask questions here when you get stuck for more than 5-10 minutes. Programming is very much something you learn by doing, not by studying.", "id": "fxz7wf2", "parent": "t1_fxz3uh0", "vote": 1}, {"content": "This should get your data organized but it might need some massaging to fit your dataframe indexing scheme.\n\n    columns = [\"total_cases\", \"new\", \"total_deaths\", \"new_deaths\", \"active_cases\"]\n    data = {}\n    cells = row.find_all('td')\n    for index, col in enumerate(columns):\n        data[(location, geo, col)] = cells[index + 1].text.strip().split()\n\nBTW, to format code look for \"code block\" here:\n\n[https://www.reddit.com/r/learnpython/wiki/faq#wiki\\_how\\_do\\_i\\_format\\_code.3F](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)", "id": "fxzgldt", "parent": "t1_fxza5vu", "vote": 2}, {"content": "You want \"==\" I think; but it's easy to test:\n\n    >>> message = \"private\"\n    >>> \"private\" in message \n    True\n    >>> message = \"privateer\"\n    >>> \"private\" in message \n    True\n    >>> message = \"notprivate\"\n    >>> \"private\" in message \n    True\n    >>>\n\nIf you want to be clear I think you want:\n\n    if len(userID.sections()) > 0 and message.chat.type == 'private':\n\nor maybe:\n\n    if userID.sections() != [] and message.chat.type == 'private':", "id": "fxzf42g", "parent": "t1_fxzcbfi", "vote": 1}, {"content": "Hard to say.  The environment when running from cron is different from running a program from the terminal.  This might be the cause of your problem.\n\nIf you haven't run anything from cron before I suggest you try a very simple thing first.  Make a small program `test.py`\n\n    out_file = '/home/MYUSERNAME/headphoneadvicebot/test.txt'\n    with open(out_file) as fd:\n        fd.write('It worked\\n')\n    print('Done')\n\nTest the program in the terminal, then put an entry in cron:\n\n    * * * * * /usr/bin/python3 /abs/path/to/test.py > /abs/path/to/status.txt 2>&1\n\nThat `2>&1` bit redirects `stderr` to the same place that `stdout` is directed to, a file in this case. This works in the bash shell so you'll need to do something else if your shell is different.  After cron runs your file you should see something in the `status.txt` file, probably \"Done\", and the `test.txt` file should contain \"It worked\".  If none of that is true then you need to fix this problem first.  If there are problems then it's likely `status.txt` contains data that was written to `stderr`.\n\nAfter you get all that working, try running your original code from cron again, but add the `2>&1` bit at the end as above.", "id": "fy04d51", "parent": "t1_fxzk4t1", "vote": 1}, {"content": "[deleted]", "id": "fy0pcwm", "parent": "t1_fxzqtuv", "vote": 3}, {"content": "What you've actually done is create a variable named subject, set it to the string subject01, then replaced it with the empty dictionary.\n\nIf you want to make several dictionaries like that, it is much, much better to make a list of dictionaries than to try to dynamically define variable names like that.\n\nSo: \n\n    subjects = [{} for i in range (4)]\n\nOr alternatively\n\n    subjects =[]\n    for i in range (4):\n        subjects.append({})\n\nThen instead of referencing subject00, do subject[0].", "id": "fy00e5k", "parent": "t1_fxzxh9c", "vote": 1}, {"content": "So it really depends on your task. Can you break it into pieces that can be done at the same time? If memory is not the problem and it's a mathy program, the issue is probably cpu - but you've probably got several of those, and (unless you've explicitly programmed it otherwise), you're probably only using one. It could also be waiting on network stuff or similar, if you're doing any of that. \n\nA simple example, if it's cpu: if you're goal is \"find the squares of all numbers between 0 and 1000000\", there's no reason why you'd have to wait until you finish figuring out start 456^2 is before you figure out what 7623^2 is. But if you need to use the result of each step in your next step, then it might be harder.\n\nIf you think you can divide it up into pieces, I'd suggest multiprocessing. (Note: if this is cpu intensive and you want to use multiple cores, use multiprocessing, *not* threading. If you think it's io, threading *might* be faster, and is similar syntax.) \n\nIf your task is easily divisible into entirely separate tasks, multiprocessing.Pool will help you with only a few more lines of code. If it's complicated to divide up, with pieces needing to talk to other pieces, multiprocessing.Process will be your friend.\n\nMultiprocessing can seem daunting to learn at first, but it turns out that it's not that bad once you get the hang of it.", "id": "fy0frkw", "parent": "t1_fy021xk", "vote": 1}, {"content": "Are you using vectorized operations in numpy, pandas or scipy?\n\nThat should  memory use and spread operations of all your cores.\n\n[https://numpy.org/doc/stable/reference/generated/numpy.vectorize.html](https://numpy.org/doc/stable/reference/generated/numpy.vectorize.html)\n\n[https://cloudxlab.com/blog/numpy-pandas-introduction/](https://cloudxlab.com/blog/numpy-pandas-introduction/)", "id": "fy16er2", "parent": "t1_fy021xk", "vote": 1}, {"content": "If I understand, you have (at least) 2 lists, one a list of numbers, and one a list of names of brain regions. I don't know anything about brain regions, so I'm gonna make stuff up for an example. So, something like:\n\n    values = [1.2, 1.3, 42, 1776]\n    brain_bits = [\"front bit\", \"side bit\", \"donuts\", \"BBQ\"]\n\nAnd you want to get the brain bits in the same position as the numbers greater than 1.5 (so in this example, the last two). Your best bet is probably `zip`. Example code:\n\n    for val, brain_bit in zip(values, brain_bits):\n        if val > 1.5:\n            print(val, brain_bit)\n\nWhere you can of course store them in a list or similar instead of printing them.\n\nYou might also consider looking into the dictionary type - it can make it much easier to deal with multiple data values about the same thing. You can also toss more lists inside the zip, so if you have 2 different values and want to find the brain types week restrictions on both, you could do `for val1, val2, brain_bit in zip(values, values2, brain_bits): ...`\n\nBut I do think dictionaries may be your friend of you end up doing a lot with this data.", "id": "fy0echq", "parent": "t1_fy02sxx", "vote": 1}, {"content": "> what's a good Pythonic way to implement this?\n\nYou wrap the lookup of the dictionary that might fail in a try/except block and catch the `KeyError` exception.  If the exception occurs you \"issue a warning\".", "id": "fy0swa3", "parent": "t1_fy0o4c1", "vote": 2}, {"content": "I don't know how you get a terminal working inside Atom, but in general you want to be able to run your code outside of any GUI IDE; eg, scheduled with cron or a headless system.\n\nTry to open a system terminal and run your script with \"python3 myscript.py\", and perhaps look at using sys,argv to pull input from the command line so you can run \"python3 myscript.py input1 input2\".", "id": "fy15p8l", "parent": "t1_fy0yl7r", "vote": 1}, {"content": "Make  the functions return the dataframe so that you can do something like:\n\n    df1 = module1.func(data1)\n    df2 = module2.func(data2)\n    comparison_df = df1.merge(df2, indicator=True, how='outer')", "id": "fy14x13", "parent": "t1_fy13dkb", "vote": 1}, {"content": "> Is it normal for these examples to ship with errors or is it something about my process that makes me more prone to them?\n\nIf you're using pure example code that was written for the same version of the packages you're using, that's definitely not normal. My best guess is that the git repositories were written for previous versions of your packages, and the package people have since made it more picky about types (probably increases performance, at the cost of making programmers work harder). Just a guess though.\n\nIf you're supplying your own inputs to their functions, I suspect that their functions are just very picky about types. That's somewhat nonstandard in python, but sometimes happens when people are trying to eek some performance out of something. Best bet in that case is to look up the documentation for each function you use, and see what type it expects. \n\nIn this case a long is just an integer that takes more room in memory than a normal int does in something like C. Python usually uses it's own special integer type that doesn't care so much (if at all) about things like size in memory when you do something like `x=4`, but that comes at a cost. If this is a performance package, it might not have wanted to pay that cost, and so decided to use integer types that have a fixed memory footprint. So if you are supplying your own inputs, it's possible that you have to specify the type somehow (I'm not familiar with those packages, but in numpy, you'd use numpy.int32(4) numpy.int64(4) instead of 4, or something - though in a perfect world, the functions would handle that conversion for you).\n\nFor sure though, the whole point of example code is that you install the packages, then run the code and it just works. Assuming that you have the correct versions of the packages and all dependencies, and that you're using purely their code, I can't imagine any error on your part that would result in type errors (though sometimes things I can't imagine end up being true). Perhaps look for more recently written example code? \n\nAnd/or, if it's code supplied by the people maintaining the package, bug them about it and tell them their stuff appears to be broke.", "id": "fy48iy2", "parent": "t1_fy1b1fs", "vote": 1}, {"content": "`argparse` is the standard as far as I'm aware. Some other options: https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/", "id": "fy1w5la", "parent": "t1_fy1vpow", "vote": 1}, {"content": "I'll take a look, feel free to send it my way.", "id": "fy3z4sf", "parent": "t1_fy2lfd4", "vote": 2}, {"content": "I would store the data as text file or csv, and just write a new row after each session. It's much more lightweight than writing to excel.", "id": "fy3z38z", "parent": "t1_fy2n0bg", "vote": 1}, {"content": "Try changing `encoding = \"Latin\"` to `encoding = \"utf_16\"`. You still get a bunch of nans, but they seem to correspond to empty cells, and a cursory glance suggested that the data did show up.\n\nTo describe what I did rather than just hand you the result, I did the following:\n\n    with open(\"Pizza.csv\", \"rb\") as fin:\n        lines = fin.readlines()\n    print(lines[0])\n\nThis shows the the bytes of the first line. There were a whole lot of \\x00 in there, and I also saw `\\x00D\\x00y\\x00n\\x00a\\x00m\\x00i\\x00c`, which is ascii characters with \\x00s between them. This is generally a sign of the utf 16 encoding.\n\nIn general, if a file gets read weird, it's worth trying a few different common encodings to see if that fixes it (even if you're not familiar enough with them to recognize them from bytes, just try some and see if one looks right). I'd suggest trying the following common ones if you have similar problems in the future: utf8, utf_16, utf_16le, utf_16be are most common (ascii files are also common, but will open if you tell python they're utf8, because the encodings are compatible in that direction). Maybe Latin as well, but I personally haven't seen that as much.\n\nHope that helps, encodings are a pain.", "id": "fy46jkz", "parent": "t1_fy2npz9", "vote": 4}, {"content": "    return sorted(scores, key=lambda item_tuple: item_tuple[1], reverse=True)[:howMany]\n\nThe lambda argument `item_tuple` is the word-value tuple and its return is just the value. The scores list gets sorted by those. If that's confusing, you can put this function somewhere at the top of your code:\n\n    def get_value(item_tuple):\n        print(f'returning {item_tuple[1]} from {item_tuple}')\n        return item_tuple[1]\n\nAnd then replace the lambda in `bestScrabbleWords` with a reference to it:\n\n    return sorted(scores, key=get_value, reverse=True)[:howMany]", "id": "fy37blr", "parent": "t1_fy2vblh", "vote": 1}, {"content": "In what context? If you're coming from R then a vector is a sequence of data that has the same type. Similar to a list in Python (though elements of a list don't have to have the same data type). \n\nA factor is a categorical data type that can take one of multiple levels, like \"male\" or \"female\". So in this case you would say that gender is the factor. You could store a series of such observations in a vector, so the two aren't really alternatives.", "id": "fy3y2r5", "parent": "t1_fy3gxgg", "vote": 3}, {"content": ">also before the simulation used to open in  different file ( i am using jupyter notebook), but now the simulation open under the cell itself and doesnt update.\n\nI haven't used Jupyter Notebook but if it's anything like in Google Colab, there should be an option to run all cells as opposed to a single cell. Maybe you only ran the first cell. I'm not sure.", "id": "fy4pvwc", "parent": "t1_fy4nmdc", "vote": 1}, {"content": ">level 1AaditNagori1 point \u00b7 3 hours ago \u00b7 edited 3 hours agohi, im currently working on a research paper for school on chaos in the double pendulum.i needed to make some graphs but i had no idea how to so i looked online and found  https://adamdempsey90.github.io/python/double\\_pendulum/double\\_pendulum.html  this website.the problem is that it worked fine 2 days back and gave me proper results with a graph that updated for 25 seconds after which it became a static image.but now the simulation wont run. it \n\ni figured it out guys,\n\nmatplotlib wasnt activated.\n\nthanks a lot", "id": "fy53i68", "parent": "t1_fy4nmdc", "vote": 1}, {"content": "You can use '&' to get the conjunction of two boolean functions.\n\nYou can use a comprehension to split your exclude\\_values  tuples:\n\n    >>> exclude_values = [('a', 1), ('b', 1), ('c', 2)]\n    >>> foo_values = {t[0] for t in exclude_values}\n    >>> foo_values\n    {'a', 'b', 'c'}", "id": "fy6wfuf", "parent": "t1_fy4o79b", "vote": 1}, {"content": "I'm not so sure how the tools for opening spreadsheets are working, but in pure theory, listing all files in a folder and finding which ones is a spreadsheet is pretty easy.(just find out filetype from extension, eg. \".csv\") \n\nThe hard part is that you need something to load those files. If you can load the files you can check if a string is inside any of the \"cells\" or a bulk text block of everything if that's the only option (but i doubt it). When you find a match, you can save the filename and location, and print it when the search ends, for simplicity. You can tell your OS to open that file in the default program or a specific one. If the opening program support command line arguments to select a cell on startup then you could make it do that, but that's a program specific thing, not python. \n\nDepending on the number of files and their sizes, the search may potentially be slow, if you are working with really large files.", "id": "fy5ybep", "parent": "t1_fy5ldjz", "vote": 1}, {"content": "Equality means it can find find itself if \\_\\_eq\\_\\_ is implemented. (One of the behind the scenes methods), and you should therefore use `is` operator to make sure the req is not the same as self. (When \\_\\_eq\\_\\_ is not implemented, your way works, but if you want to ever compare requests based on some property of them, you may suddenly break your program.)\n\nYou can also use `isinstance(req, Request)` to check if a class is of a type or subclass of it.", "id": "fy6a6x6", "parent": "t1_fy64jcn", "vote": 1}, {"content": "Are you using praw, The Python Reddit API Wrapper?\n\n[https://praw.readthedocs.io/en/latest/getting\\_started/quick\\_start.html](https://praw.readthedocs.io/en/latest/getting_started/quick_start.html)", "id": "fy6va6q", "parent": "t1_fy6aogq", "vote": 1}, {"content": "When you write\n\n    @classmethod\n    def userInput(cls, l, w):\n\nYou're telling python that the class method userInput must be given arguments l and w explicitly (cls is given implicitly by your `AreaRectangle().`\n\nProbably, you simply don't want l and w to be arguments of that function, since that function gets length and width from the user when you call it and you're not using l and w anywhere. So just delete the l and w from def line.\n\nAlso, I assume that function is supposed to end with `return cls.area(length, width)`, rather than just having cls.area(lenght,width) unindented at the end of that function. Could be a copy and paste error though.\n\n(I'm also not sure why you're using class methods here, but that's a separate thing, and for sure it'd be worth making sure you know how to get this working regardless.)", "id": "fy6r83u", "parent": "t1_fy6h3z9", "vote": 1}, {"content": ">to a dictionary, which would act as a histogram\n\nCapture all the hours in a list and use collections.Counter:\n\n    >>> import collections\n    >>> all_hours = ['04', '03', '04', '05']\n    >>> collections.Counter(all_hours)\n    Counter({'04': 2, '03': 1, '05': 1})\n    >>> for item, freq in collections.Counter(all_hours).items():\n    ...     print(\"{} {}\".format(item, freq))\n    ... \n    04 2\n    03 1\n    05 1\n    >>>", "id": "fy6upw4", "parent": "t1_fy6q5uk", "vote": 3}, {"content": "My first thought would be to split at the first semicolon. This should give you two strings - one containing all information up to the first semicolon, the second containing all information from minutes onward.\n\nYou can then take the last two characters from the first string to give you an hour value. This assumes that all Strings beginning with \"From\" follow the same pattern.", "id": "fy6rplx", "parent": "t1_fy6q5uk", "vote": 2}, {"content": "> How can I alter these elements, so that they only include the hours?\n\nYou can use an regexp and split:\n\n    >>> import re\n    >>> def extract_hours(s): return re.search(r\"\\d+:\\d+:\\d+\", s).group().split(':')[0]\n    ... \n    >>> line = 'From random.rando@ucla.edu Sun Feb 7 04:13:16 2003'\n    >>> extract_hours(line)\n    '04'", "id": "fy6tpwi", "parent": "t1_fy6q5uk", "vote": 2}, {"content": "Keeping it simple, and assuming your format is regular enough that the HH:MM:SS part is always at the same position in the split of the line (if not, you'll have to search the result of your first list), you could do `hour = line.split(' ')[5].split(':')[0]`. \n\nThe dictionary thing is exactly what I would do, though I might avoid checking a conditional: you can always do something like `stuff_d[hour] = stuff_d.get(hour, 0) + 1`\n\nAlso, note that you can use `sorted` on a dictionary to get a sorted list of keys.", "id": "fy70bei", "parent": "t1_fy6q5uk", "vote": 2}, {"content": "    print(word[-i], end='')", "id": "fy6wbgz", "parent": "t1_fy6slie", "vote": 2}, {"content": "It looks like you're trying to reverse the word. If so, then the easiest way is just to do `print(word[::-1])`. \n\nThis is called slicing - in more detail `word[start: end_ish: step]` will give you the collection of characters you get by starting at the index `start`, then moving `step` positions over (negative means backwards) until your index is reaches or passes `end_ish`. I'm calling it `end_ish` because that index is not included.\n\n...Though as I'm writing this, it occurred to me that you meant you want the characters that are printed all on the same line, and not that you wanted to use one line of code. So, uh, what I said will do both, but GoldenVanga's answer is less modification to your code.\n\nI do recommend learning about slicing though, it is very powerful.", "id": "fy6zkzb", "parent": "t1_fy6slie", "vote": 2}, {"content": "In the `__init__.py` file", "id": "fy8h2ox", "parent": "t1_fy6zyit", "vote": 1}, {"content": "https://medium.com/@_christopher/deploying-my-django-app-to-a-real-server-part-i-de78962e95ac and part 2 https://medium.com/@_christopher/deploying-my-django-app-to-a-real-server-part-ii-f0c277c338f4", "id": "fy8h1t2", "parent": "t1_fy7f2h4", "vote": 1}, {"content": "An object is a thing. A class is a type of thing. Analogy: The actual chair you're sitting on is a particular object. The general idea \"chair\" is a class.\n\nIn programming practice, you define a class with some methods/functions and such:\n\n    class Chair:\n        def __init__(self, is_swivel): \n            # this function is called whenever you make a new Chair\n            self.is_swivel = is_swivel  # the self. means the chair your making has this property built in to it\n        def swivel(self):\n            if self.is_swivel:\n                 print(\"Wheeee\")\n            else:\n                 print(\"You try to swivel, but just fall off and land on your face instead.\")\n\nThen you instantiate the class, and can do things with it:\n\n    bobs_chair = Chair(is_swivel = True)\n    my_chair = Chair(is_swivel = False)\n    bobs_chair.swivel()\n    my_chair.swivel()", "id": "fybz1u5", "parent": "t1_fy8hnaa", "vote": 2}, {"content": "A class is the blueprint for creating objects and an object is an instance of the class hope this helps!", "id": "fy9avzh", "parent": "t1_fy8hnaa", "vote": 1}, {"content": "I think `requests` gets the \"first time visitor\" treatment - same as I got: https://imgur.com/a/O0ARr9p. And when I inspect the page source, only the first paragraph is there.\n\nYou'll need to either use a tool like Selenium, which automates the browser (and clicks buttons) or try including a premade cookie with your request, which identifies you as a return visitor who has given permission for data gathering etc.", "id": "fy9wffq", "parent": "t1_fy95t2t", "vote": 2}, {"content": "Reddit has an API you can use, and there\u2019s the python package PRAW which acts as a wrapper.\n\n[https://praw.readthedocs.io/en/latest/](https://praw.readthedocs.io/en/latest/)", "id": "fyg5xhx", "parent": "t1_fy9bnwe", "vote": 1}, {"content": "Hi, you might need to specify the file type of 'customerinfo'. Like is it a .csv/.txt/ etc.", "id": "fya53dc", "parent": "t1_fy9xdgb", "vote": 1}, {"content": "Hard to say without seeing your code, but if I were to take a random guess - if applicable, did you call .join on your threads in the main body of your code?\n\nIt's possible that your main thread simply finished its code and exited, closing down some your other threads before they got through all the websites they were assigned.", "id": "fybxqu5", "parent": "t1_fya69ho", "vote": 1}, {"content": "Please [format your code for reddit](https://old.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F).  Because your post lost all indentation we can't tell if the `else:` is part of the `if` or the `for`.", "id": "fybq1kv", "parent": "t1_fyauyy3", "vote": 1}, {"content": "`p2 = input(\"Are you blue, Yes or No?\")`  \n`while True:`  \n `if p2 == \"Yes\":`  \n `print(\"Yes\")`  \n `break`  \n `else:`  \n `print(\"No\")`  \n `break`\n\nSo in this example, p2 is always null until user provides a value", "id": "fybdj5p", "parent": "t1_fyax0k2", "vote": 2}, {"content": "> I want a variable to equal nothing\n\nTechnically, a python variable can never be \"nothing\".  The best you can do is set the variable to something that isn't a valid value and *that* depends on what you are trying to use the variable for.  In your case (getting input from the user) you could do:\n\n    p2 = None\n\nAnother \"nothing\" value could be an empty string:\n\n    p2 = ''\n\nBut you often don't need to set a variable to \"nothing\".  The code you showed doesn't require it.", "id": "fybpp7v", "parent": "t1_fyax0k2", "vote": 1}, {"content": "If you look at the [doc for random.randrange()](https://docs.python.org/3/library/random.html#random.randrange) you will see that the function behaves a bit like the range() function and the `stop` integer is never part of the result.  That is, `random.randrange(1, 3)` will only return 1 or 2 and never 3.  Don't know why you think 1 is never returned.\n\nTry using ` random.randint(1, 3)` instead.  That is documented just below `randrange()` in the link above.", "id": "fybp2gk", "parent": "t1_fybdb2q", "vote": 1}, {"content": "If a number is divisible by 4 that means that the remainder after dividing by 4 must be zero.  The expression `x % 4` gets the remainder after dividing by 4 and the ` == 0` part tests if the remainder is zero.  So if the whole thing `x % 4 == 0` is True that means `x` is a multiple of 4, ie, divisible by 4 with no remainder.", "id": "fybofb9", "parent": "t1_fybhf2h", "vote": 2}, {"content": "Hi I am probably more of a n00b than you but I wanted to point out that == doesn't mean equal to in python.  '==' is a logical operator used to compare to values and returns true or false.", "id": "fyblvv2", "parent": "t1_fybhf2h", "vote": 0}, {"content": "As function arguments are passed by reference, you can pass your counter dict with it\n\n    def char_counter(text, counts):\n        if text:\n            char = text[0]\n            if char.isdigit():\n                counts['numbers'] += 1\n            elif char.isalpha():\n                counts['letters'] += 1\n            char_counter(text[1:], counts)\n\n    counts = {'letters': 0, 'numbers':0}\n    char_counter('hello world', counts)\n    print(counts)", "id": "fyc7q16", "parent": "t1_fyc3vvq", "vote": 1}, {"content": "Have you tried Pyto. I use it on my iPhone to write code and learn python. It\u2019s not free though.", "id": "fyg0921", "parent": "t1_fydc4p5", "vote": 1}, {"content": "It's not clear to me what exactly you mean. In your code snippet, foo, intNum, booly, and degrees are all variables. \"bar\" is a string. We might also say that foo is a string after the `foo = \"bar\"` line gets run, but that could change if your next line is `foo = 7`.  Sometimes when it's necessary to talk about the variables themselves as distinct from their values, people will start saying things like \"foo is a variable, the value of which is the string \"bar\".\" But often, that sort of thing is unnecessary.\n\nThe documentation you found is for strings in particular. If you tried to use that string stuff on intNum, it wouldn't work.\n\nWhat type of information about variables are you trying to find?", "id": "fydzqk3", "parent": "t1_fydq4r5", "vote": 1}, {"content": "I don't have much experience with R, but I do know many people who know R who are moving to python. I do not know so any moving the other way. \n\nThis is of course my own observations and limited to who I know, and so it could be different in the medical fields - but I have read many times that what advantages R has in statistical areas is shrinking. And of course, python is a general purpose language.\n\nSo I'd recommend python, but I'm also biased and can't speak to your field in particular.", "id": "fyg43an", "parent": "t1_fyf5m6v", "vote": 1}, {"content": "You will get a wide overview by searching for topics of interest in these PyCon and PyData presentations:\n\n[https://pyvideo.org/](https://pyvideo.org/)", "id": "fyguhza", "parent": "t1_fyf5m6v", "vote": 1}, {"content": "The syntax error is the colon inside of the parentheses. It's hard to say what kind of error it is without knowing what you're trying to do, however.\n\nIf you're trying to add a dictionary as an element of a list, you need curly brackets around the stuff: `your_list.append({your_key: your_val})`. If you're trying to add another key to a dictionary, you can just do `your_dict[your_key] = your_val`. If you're not trying to do either of those, I would need more details to advise.", "id": "fygs4v6", "parent": "t1_fygbl5k", "vote": 1}, {"content": "\\ is an escape character. When you do \"\\n\", for example, the \\ combines with the n to tell python that you didn't actually want a \\ or an n, but a new line. If you actually did want a \\ rather than to use the \\ as an escape character, then you have to do \"\\\\\\\\\" (edit: this originally was just \"\\\\\" because it slipped my mind that it's escape character on reddit too - it's pretty universal). The first slash tells python that you're using an escape character, and the second tells it that what you actually wanted was a \\. Ex:\n\n    print(\"Sup\\nDog\")\n    print()\n    print(\"Sup\\\\nDog\")", "id": "fyieons", "parent": "t1_fyh2u34", "vote": 1}, {"content": "I've always just installed from https://www.python.org/downloads/mac-osx/ .  I never need to fiddle with PATH, etc.  You run python 3 from the terminal using `python3`.\n\nFor instance, right now I would click on the \"Download macOS 64-bit installer\" link under \"Python 3.8.4 - July 13, 2020\".", "id": "fyimo67", "parent": "t1_fyhb7nm", "vote": 1}, {"content": "As with most things like, this, the answer is because someone thought it made more sense. In this case, the python people wanted to have a function len that you could use to find the length of lots of different things. \n\nWhat this function actually does, however is access the `__len__` method of whatever object you call it on. so you could do `your_list.__len__()` if you wanted. And you can implement such a function on custom classes as well:\n\n    class Cheese:\n        def __len__(self):\n             return 42\n\n    x = Cheese()\n    print(len(x))\n\n(Python gets angry if you do that and `__len__` doesn't return an integer, and you probably should make that integer make sense as a length, but hey.)", "id": "fyie7fu", "parent": "t1_fyhxxxt", "vote": 1}, {"content": "I prefer to do them immediately after imports. If there are a lot, then I will put them in a different module, and import that module to use as constants. I personally very much do not like using function calls to define constants.", "id": "fyideoa", "parent": "t1_fyhyaj5", "vote": 1}, {"content": "[pep 8](https://www.python.org/dev/peps/pep-0008/#imports) implies they should go after the imports:\n\n* Imports are always put at the top of the file, just after any module comments and docstrings, and before module globals and constants.", "id": "fyime5u", "parent": "t1_fyhyaj5", "vote": 1}, {"content": "(I really hope that HTML is an example, not actual code)\n\nWith HTML, you're meant to close _most_ tags e.g. <div> </div>, <table> </table>. \n\nThat HTML code you have doesn't include all the </td>'s - for example, the SANDAL row should have 6 </td>'s, not 1. Modern browsers like Chrome will fix these problems, however it makes parsing with BS4 more difficult.\n\nI posted some example codes - Solution 2 has fixed HTML code.\n\n    from bs4 import BeautifulSoup as bs\n    \n\n    # Solution 1 - No closing (<td>SANDAL<td>...)\n    \n    with open(\"test1files/index.html\", \"r\") as file:\n        index_file = bs(file, \"html.parser\")\n    \n    product = index_file.find_all(\"tr\")[1].select(\"td\")[0].text\n    print(product)  # returns SANDAL77313wearnewid878717\n    \n\n    # Solution 2 - Closing (<td>SANDAL</td>)\n    \n    with open(\"test1files/index - Copy.html\", \"r\") as file:\n        index_file = bs(file, \"html.parser\")\n    \n    product = index_file.find_all(\"tr\")[1].select(\"td\")[0].text\n    print(product)  # returns SANDAL\n\nIf you need to fix Solution 1, it depends if you're searching for the string \"SANDAL\" - could finish off Solution 1 with `if product[:6] == \"SANDAL\"` I suppose.\n\nHope this helps!", "id": "fyj7ctc", "parent": "t1_fyi5has", "vote": 1}, {"content": "Please [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq) next time you post.\n\nI won't answer your questions as I think it's better to explain from the top of your code.  The function `morse()` takes a single parameter, a string named `text`.  This is the string to convert to morse or convert back to text.\n\nThe next statement defines a dictionary `encrypt` that maps a single character to the morse equivalent string.  This dictionary is used to convert one character (uppercase only) into the equivalent morse string.  This means if we do `encrypt['A']` we get a string `.-`, which is morse code for \"A\".\n\nThe next line \"inverts\" the `encrypt` dictionary.  This changes the key:value pairs in `encrypt` to value:key pairs in `decrypt` dictionary.  This gives us a dictionary which can convert a string of morse back to the character it represents.  So `decrypt['.-']` evaluates to `A`.  Get into the habit when reading code like this to put a print after the line(s) you don't understand and see what is generated.  So add this line after the line that creates `decrypt`:\n\n    print(decrypt)\n\nThe line `if '-' in text:` looks for a `-` character in `text`, which is the string we were given to process.  If the string contains the `-` character we assume that it's morse code and we convert it back to ABCDE...  Otherwise we convert each character to its morse code string.\n\nThe `''.join(l)` thing is a method of a string.  It basically joins each element of list `l` placing the string (before the `.`) between each element of the list.  So if we have `', '.join(['1', '2', '3'])` we would get a string \"1, 2, 3\".", "id": "fyjdc3x", "parent": "t1_fyj7nfq", "vote": 1}, {"content": "I would rather try a strptime per possible format\n\n    from datetime import datetime\n\n    def dt_from_str(s):\n        for parse_str in ['COE until %b %Y',\n                          'COE expiry: %d/%m/%Y',\n                          'COE till  %d/%m/%y',\n                          'COE lasts until %d %B %Y non renewable']:\n            try:\n                return datetime.strptime(s, parse_str)\n            except ValueError:\n                pass\n\n    strings = ['COE until JUL 2029',\n               'COE expiry: 25/12/2010',\n               'COE till 21/12/29',\n               'COE lasts until 21 MARCH 2009 non renewable']\n    for s in strings:\n        dt = dt_from_str(s)\n        print(dt.year, dt.month)", "id": "fyky8z1", "parent": "t1_fyjr6cv", "vote": 1}, {"content": ">the date of the data taken\n\nThose pages have a \"Last Updated\" div; parse that with datetime.strptime.", "id": "fylj0c9", "parent": "t1_fykvy5u", "vote": 1}, {"content": "Start with the plain Jupyter notebook and switch to JupyterLab when you have more than one developer.", "id": "fylhsi1", "parent": "t1_fykwool", "vote": 1}, {"content": "You can test that a word has both upper and lowercase letters:\n\n    >>> def mixed_case(s): return any(c in string.ascii_lowercase for c in s) and any(c in string.ascii_uppercase for c in s)\n    ... \n    >>> mixed_case('abc')\n    False\n    >>> mixed_case('aBc')\n    True\n    >>> import random\n    >>> def shuffled(s):\n    ...     l = list(s)\n    ...     random.shuffle(l)\n    ...     return ''.join(l)\n    ... \n    >>> words = \"The quick Brown fOx jumped\"\n    >>> [shuffled(w) if mixed_case(w) else w for w in words.split()]\n    ['Teh', 'quick', 'onrBw', 'xfO', 'jumped']\n    >>>", "id": "fylhmdp", "parent": "t1_fykxibi", "vote": 1}, {"content": "Tks bro! https://youtu.be/sxTmJE4k0ho\n\nWould you say that this one is a good starting point? Never crossed with this YouTube channel.", "id": "fy1u9cr", "parent": "t1_fy1t9e6", "vote": 2}, {"content": "Awesome, thank you for the answer !", "id": "fy07h5m", "parent": "t1_fy01uuz", "vote": 1}, {"content": "This is perfect. Thank you for the explanation. The missing link for me was that the row and column are basically the coordinates of the grid where the first loop is the 'X' value and the second loop is the 'y' value. \n\nMuch appreciated.\n\nApologies for the format of the code that i put in there, i posted this through my mobile and couldn't format it like you have done.", "id": "fybcjnx", "parent": "t1_fy9t0b7", "vote": 2}, {"content": "ok, thank you very much!!", "id": "fxvwfhc", "parent": "t1_fxvuxu4", "vote": 1}, {"content": "What do you mean \"more canonically\"?", "id": "fxwukyx", "parent": "t1_fxwrczr", "vote": 1}, {"content": "Thanks! You were right that I screwed up that last line. Really wasn't paying attention, I guess. I just had to add the .to\\_excel bit. This worked:\n\n*for boss in bosses:*\n\n*team = vacationdays\\[(vacationdays\\['Leidinggevende'\\] == boss)\\]*\n\n*with pd.ExcelWriter(boss+'-report.xlsx') as writer:*\n\n*team.to\\_excel(writer, sheet\\_name= 'Report')*", "id": "fxws5aj", "parent": "t1_fxwqjkj", "vote": 2}, {"content": "That's pretty helpful, thanks.\n\nI haven't been able to find *anything* on keyboard shortcuts that only work in the active window, but I'm sure python must be capable of it. It's going to bug me, but trapping ctrl-c is a useful workaround.", "id": "fy0n9if", "parent": "t1_fxxywif", "vote": 1}, {"content": "I'm not too concerned about memory, at the very most I'd be looking at something on the order of tens of thousands of events. The purpose is mostly so that I can verify that the processing in the simulation are scheduling events correctly. I think writing to a text file will work, I'll give that a shot.", "id": "fxxz0x4", "parent": "t1_fxxeyw6", "vote": 1}, {"content": "I'll look into that, thanks.", "id": "fxxzbn2", "parent": "t1_fxxygbw", "vote": 1}, {"content": "I think you want to use boolean indexing to filter out row that fail the condition: it would look something like:\n\n    matched = t_final[t_final['Materials'] > t_final['myColumn']]\n\n[https://chrisalbon.com/python/data\\_wrangling/pandas\\_selecting\\_rows\\_on\\_conditions/](https://chrisalbon.com/python/data_wrangling/pandas_selecting_rows_on_conditions/)", "id": "fxxxqz5", "parent": "t1_fxxsv4m", "vote": 1}, {"content": "Ah yes I noticed this. But I declared it as a numpy array, I thought that would make it iterate 0.... \n\nI need to move it to a while loop I don't like these loops that you don't initialize. In C it doesn't work that way, arg.", "id": "fxy5u8z", "parent": "t1_fxy58i0", "vote": 1}, {"content": "Thanks man! But the main issue is  how do i extract the data if the start and end date are in different files.", "id": "fy0km8o", "parent": "t1_fxz68e9", "vote": 1}, {"content": "Thanks!!", "id": "fxz15fo", "parent": "t1_fxz10rs", "vote": 1}, {"content": "Thank you! I was attempting to see if there was a pattern but having a hard time of it, I'll just stick to learning the commands fully in that case.", "id": "fy2s3lr", "parent": "t1_fxytnaa", "vote": 2}, {"content": "any suggestions? Anything more complicated than print \u201chello world\u201d haha. i\u2019m just not really sure where to start", "id": "fxz940v", "parent": "t1_fxz7wf2", "vote": 1}, {"content": "Put this in my existing nested for loop?", "id": "fxzguqb", "parent": "t1_fxzgldt", "vote": 1}, {"content": "oh crap I am sorry, I meant this\n\n    user_id = message.from_user.id\n    \n    if user_id in userID.sections() \n\nwould \"in\" be appropriate since sections() in configparser returns a list?\n\n[https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.sections](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.sections)\n\nI fixed my original post.\n\nedit edit; hopefully you see this part, the section where you have >>> is this a python environment? Seems useful to do quick tests like you did.", "id": "fxzgr3t", "parent": "t1_fxzf42g", "vote": 1}, {"content": "Thanks! I got the output I was looking for now!", "id": "fy2shsm", "parent": "t1_fy0pcwm", "vote": 1}, {"content": "didn't think this approach, thanks for this!.", "id": "fy01mzg", "parent": "t1_fy00e5k", "vote": 1}, {"content": "hello, if you dont mind follow up question, previously I was thinking to create nested dict, but now you propose the list of dictionary:\n\nSo this\n\n    all_subj = {\n    \n    subj01 = {name :a, age:1},\n    subj02 = {name :b, age:2},\n    }\n\nvs this\n\n    all_subj = [\n        {name: a,\n         age: 1\n        },\n    \n        {name: b,\n         age: 2\n        }\n    ]\n\nI want to ask functionality-wise they are the same, right? which one is more preferred, does it depend on how I use it?", "id": "fy03hfo", "parent": "t1_fy00e5k", "vote": 1}, {"content": "I would normally agree. But I want a general KeyError to be treated different from when it's called this particular key. Currently I'm leaning towards something along the line of (`'pre_setup'` is the special case)\n\n    status_dict = {'state_0': 'ThisIsInterestingData',\n                'state_1': 'AlsoExciting'}\n    \n    try:\n        datum = status_dict[our_key]\n    except KeyError:\n        if datum ='pre_setup':\n            raise 'MyWarning'\n            return 'default_datum'\n        else:\n            raise", "id": "fy1k44b", "parent": "t1_fy0swa3", "vote": 1}, {"content": "Thank you for your answer! df1 and df2 are the new variables, module1 and module 2 are my functions, data1 and data 2 are the dataframes, right? What does func stand for?", "id": "fy172ou", "parent": "t1_fy14x13", "vote": 1}, {"content": "I tried reading the docs for argparse but its really difficult to understand", "id": "fy1woyh", "parent": "t1_fy1w5la", "vote": 1}, {"content": "Sorry for the late reply but ended up making it work just looked ugly \ud83d\ude02.", "id": "fy493tg", "parent": "t1_fy3z4sf", "vote": 1}, {"content": "Thank you so much, this is really helpful. I was hoping the issue was just encoding and not some other weird thing going on. I'm able to get the original file this was based off up and running in pandas with this info.", "id": "fy573ez", "parent": "t1_fy46jkz", "vote": 2}, {"content": "I kept getting lots of errors at first, but I just made a quick fix and now it works! Thank you!", "id": "fy3bpr8", "parent": "t1_fy37blr", "vote": 1}, {"content": "I was coming from R. But I think you answered my question so thank you.", "id": "fy42q3v", "parent": "t1_fy3y2r5", "vote": 1}, {"content": "hi,\n\nso the actual evolve call can be done in the same cell or the next one after running the main code in the notebook. i have been running it in the next cell only and before i used to get the simulation correctly so i dont think its that.\n\nalso i tried copying the entire code along with the evolve call in pycharm and it gave me the same thing\n\nbut thanks for replying!", "id": "fy4qfgy", "parent": "t1_fy4pvwc", "vote": 1}, {"content": "But how does that get me the result I want? When I split the tuples, they are checked independently, but the rows have to match the specific items in one tuple.", "id": "fy89t7q", "parent": "t1_fy6wfuf", "vote": 1}, {"content": "Thank you for the reply. I think I may be better off using software developed for it rather than using my own python script but from what I've learned so far, it does seem like it would be possible but like you say, probably slow.", "id": "fy62qu3", "parent": "t1_fy5ybep", "vote": 1}, {"content": "No, just the requests module. I'm sorting through a bookmarks list and testing each link, and it can't access anything from reddit.", "id": "fy71dud", "parent": "t1_fy6va6q", "vote": 1}, {"content": "I will give this one a try as well. Thanks.", "id": "fy8px4h", "parent": "t1_fy6upw4", "vote": 1}, {"content": "A similar approach was used. Thanks for the idea!", "id": "fy8pyo8", "parent": "t1_fy6rplx", "vote": 1}, {"content": "thanks", "id": "fy8pvkl", "parent": "t1_fy6tpwi", "vote": 1}, {"content": "I went with this option and it worked! Thanks", "id": "fy8pw6y", "parent": "t1_fy70bei", "vote": 2}, {"content": "i'd consider this bad practice, calling print multiple times depending on the number of characters doesn't seem good, compared to calling print once on the reversed slice of the string as u/FerricDonkey mentioned", "id": "fy93cu8", "parent": "t1_fy6wbgz", "vote": 1}, {"content": "thanks!", "id": "fy9z3wk", "parent": "t1_fy9wffq", "vote": 1}, {"content": "ok, I should of thought of that, thank a lot. that worked.", "id": "fyaa1g2", "parent": "t1_fya53dc", "vote": 1}, {"content": "I didn't use a .join on my threads. I just use the \n\n\"with concurrent.futures.ThreadPoolExecutor() as executor:\n\nexecutor.map(download\\_text, chunk.iloc\\[:,3\\])\" syntax.\n\nFor the second part of your response. How would I be able to check for that?", "id": "fyhpmoy", "parent": "t1_fybxqu5", "vote": 1}, {"content": "Sorry about that, I fixed my post. Please let me know if you can't see the indentation.", "id": "fybrsq2", "parent": "t1_fybq1kv", "vote": 1}, {"content": "Yea thats basically what I want to try and get.", "id": "fyehj3k", "parent": "t1_fybdj5p", "vote": 1}, {"content": "So just have the variable as something that isnt used in the actual code so it can be changed later?", "id": "fyehme0", "parent": "t1_fybpp7v", "vote": 1}, {"content": "Thanks I will look into the docs.\nWhen I execute my program, and only choose 1 I either loose or draw and never win. I have ran it many times and never had 1 be generated by computer. I will test out with 3 although I now suspect it will be the same case.\n\nBefore I look in the docs, I am wondering if I can change to randrage(0,4) and get the results I was expecting", "id": "fybq9gg", "parent": "t1_fybp2gk", "vote": 1}, {"content": "> I wanted to point out that == doesn't mean equal to in python. '==' is a logical operator used to compare to values and returns true or false.\n\nYou contradict yourself. The logical comparison between values is what's called comparision by equality, in simple terms: if they are equal. See even the official tutorial https://docs.python.org/3/tutorial/introduction.html\n\n> The standard comparison operators are written the same as in C: < (less than), > (greater than), **`==` (equal to)**, <= (less than or equal to), >= (greater than or equal to) and != (not equal to).", "id": "fyc7ypm", "parent": "t1_fyblvv2", "vote": 2}, {"content": "Thank you very much, however, what if I could not pass the dict and the only function parameter is the string.\n\nthe only code allowed to be passed is  \n\ntest = char\\_counter('hello world')\n\nprint(test)", "id": "fyc8a5o", "parent": "t1_fyc7q16", "vote": 1}, {"content": "Ah i should have specified, I'm on Android. The tip is appreciated though!", "id": "fygxy5z", "parent": "t1_fyg0921", "vote": 1}, {"content": "To be honest, my question might be vague, but I am essentially wondering if python has a documentation that covers.. short hands outside of using them in conditional statements, and to be honest the example below may not even be considered short hand.\n\n    hello = \"hello\"\n    tmp_hello = \"hello\"\n    \n    tmp_hello, hello = \"hello\"", "id": "fye270s", "parent": "t1_fydzqk3", "vote": 1}, {"content": "Ooh thanks you so much!", "id": "fygui59", "parent": "t1_fygs4v6", "vote": 1}, {"content": "[deleted]", "id": "fyiljqn", "parent": "t1_fyie7fu", "vote": 1}, {"content": "[deleted]", "id": "fymly3a", "parent": "t1_fyky8z1", "vote": 1}, {"content": "Thanks!", "id": "fyliy3f", "parent": "t1_fylhsi1", "vote": 1}, {"content": "I found him when I got stumped on object oriented programming, and sockets so those two videos got me hooked. I think I'll go back and watch this one.", "id": "fy28a4c", "parent": "t1_fy1u9cr", "vote": 1}, {"content": "The different quote thing is specific to python, and specific to quotes - in other languages, swapping which quote you use may not be possible, and in python other things that may not be displayed by default (say you want the characters \\n in your string rather than a newline) require escaping to display.\n\nSwitching quote types is very standard in python - in fact, if you want both types of quotes in a string, you can do something like \n\n    \"\"\"This has \"double\" and 'single' quotes.\"\"\"\n\nBut if someone is asking this question, it means they don't know about escaping characters, and that's core enough to how strings work that it's worth mentioning even if it might not be what they actually do in this actual case.\n\nWhether or not that makes it canonical, I can't say, but it certainly makes it important.", "id": "fxwwp2n", "parent": "t1_fxwukyx", "vote": 3}, {"content": "I might be slightly misusing the word \"canonical\", but it looks like it still fits for what I was going for.\n\nThe idea of \"escaping\" strings is a common concept, across all languages. It's something that you should know, akin to knowing how to call a function.\n\nPython has other ways of dealing with the problem, but it's not common to all other languages. Like, if you were using Go or C++, etc, changing-your-quote-type way to fix this wouldn't be available.", "id": "fxxlpj1", "parent": "t1_fxwukyx", "vote": 1}, {"content": "Could you elaborate a bit? I don't quite see what the problem is. If you only want to print the items, don't do string\\[x\\], just print x.", "id": "fxy694h", "parent": "t1_fxy5u8z", "vote": 2}, {"content": "You could build a personal web page, you could do some statistical analysis on data from a favorite game, you could build a board game, you could automate some boring task you have to do all the time, etc.\n\nReally the best projects are the ones that are naturally interesting to you because it won't feel like work as you build more and more. Pick one of your hobbies, see if there are any python projects related to it, and go from there.\n\nThere's a ton of sites with generic recommendations [here](https://www.reddit.com/r/learnpython/wiki/index), and maybe something will catch your eye.", "id": "fxz9p5g", "parent": "t1_fxz940v", "vote": 1}, {"content": "It might work, but if you give examples of the data and code with indentation included a more precise recommendation is possible.\n\nYou might need to find a way to put dates and total population data in before any useful analysis is possible, so give yourself some staged goals and take it one step at a time.", "id": "fxzn33m", "parent": "t1_fxzguqb", "vote": 1}, {"content": "If you're checking if a string is in a list, \"in\" is absolutely appropriate - it will not evaluate to true if your string is just some substring of a string in the list, but is not itself in the list.\n\nRegarding the testing thing, you can probably just type python (possibly python3 if you're on Mac or Linux) into any terminal to get a python terminal where you can test commands (even importing functions from your code to test them one at a time), and it is incredibly useful. \n\nI personally prefer ipython to default one - it has better tab complete and colors - but for me at least, I had to tinker with something to get it to work with windows 10. (You can install it with \"pip install ipython\", then just type ipython in a terminal to open it).", "id": "fxzky9n", "parent": "t1_fxzgr3t", "vote": 2}, {"content": "It really depends on the use case - dictionaries of dictionaries are great if order isn't a high priority, but fast look ups/membership checking, or looking things up by a more meaningful identifier than an index is important. (Even if all your subjects have numerical id numbers, if they aren't contiguous, then a dictionary using those id numbers as keys might be the way to go.)\n\nIf you do care about the order, or all you'll ever do is access the subdictionaries directly (either in a loop or by index), and will not be trying to determine membership often, then lists of dictionaries will be more efficient. I use both regularly. \n\nIn the case of a dictionary of dictionaries, your dictionary of dictionaries could look something like `subject_data = {\"Fred\" : {\"age\": 42,...},...}`, so you access Fred's age by `subject_data[\"Fred\"][\"age\"]` (or of course in a loop using variables. And if names might not be unique, you could easily do id numbers or something where I put the name.) \n\nThe syntax is a bit different than you wrote - `key: sub_dictionary`, not `key = sub_dictionary` and the key must be a [variable containing] something like a string or number (something \"hashable\"), and not the variable sub_dictionary is currently stored in (that would try to make the dictionary its own key, and would fail because dictionaries are not hashable). So {\"Fred\": data_d} is fine, as is {\"subject00\": data_d} or even {0: data_d} - but not {data_d: data_d}. You could create the key in a loop as in your first example:\n\n    subjects ={}\n    for i in range(4):\n        subjects[\"subject0{i}\".format(i)] ={}\n\nOr just use the number i as your key, or the name or id of the subject or similar. \n\n(Also, mandatory mention that dictionary comprehension can look cleaner once you get used to it, and I believe might be a bit faster - though the speed difference is incredibly unlikely to matter, if it even exists.)", "id": "fy0cef1", "parent": "t1_fy03hfo", "vote": 1}, {"content": "Sorry, I don't follow your code.  If an exception is raised the value in `datum` will be whatever it was **before** the `try` block was entered.  Unless you  meant:\n\n    if our_key == 'pre_setup':\n\nYour checking of some condition in the `except` block is fine, but the `raise` before the `return` means the `return` is ignored and an exception will terminate the program, unless you have an enclosing `try/except` catching the `MyWarning` exception.", "id": "fy1n5ft", "parent": "t1_fy1k44b", "vote": 1}, {"content": "Define a new exception called say `BadKeyProvidedException` that inherits from KeyError, check the key, and raise an instance of that exception if the key is the known bad key.", "id": "fy1wmzf", "parent": "t1_fy1k44b", "vote": 1}, {"content": "Not exactly; if you have module1.py that contains something like:\n\n    import pandas as pd\n    def func(data):\n        # do some stuff with data\n        return pd.DataFrame(data, columns = [...])\n\nAnd module2.py has something similar.\n\nThen your main.py can be\n\n    import pandas as pd\n    import module1\n    import module2\n    \n    data1 = ... # get the raw data for module1.func from csv, or scraping, or extract from DB\n    df1 = module1.func(data1)\n\nThe data variables are lists or dicts of raw python data and df1 and df2 are the two dataframes and func is the function that creates and returns a dataframe. That is a flexible way to use the module and function systems to organize your work, although I am guessing at what func should do or take as an parameter. Sorry for using meaningless names like module, func, data, df; they should all be something meaningful in the domain you are working in.\n\nI hope that make more sense...", "id": "fy1box6", "parent": "t1_fy172ou", "vote": 1}, {"content": "module1 and module2 are files. `func` is a defined function within the module.", "id": "fy1wc43", "parent": "t1_fy172ou", "vote": 1}, {"content": "Yeah, it's not great. Just copy someone else's example and use it as a template.", "id": "fy1wsr6", "parent": "t1_fy1woyh", "vote": 1}, {"content": "Yes, you are right, that doesn't help. This makes a tuple of the two attributes and uses isin(exclude\\_values):\n\n    >>> import pandas as pd\n    >>> df = pd.DataFrame({'foo' : ['a', 'b', 'c', 'a'], 'bar': [1, 2, 2, 2]})\n    >>> df\n      foo  bar\n    0   a    1\n    1   b    2\n    2   c    2\n    3   a    2\n    >>> exclude_values = set([('a', 1), ('b', 1), ('c', 2)])\n    >>> df[~df[['foo', 'bar']].agg(tuple, 1).isin(exclude_values)]\n      foo  bar\n    1   b    2\n    3   a    2", "id": "fy9a9zv", "parent": "t1_fy89t7q", "vote": 2}, {"content": "There are libraries for opening spreadsheets, however - which one is appropriate would depend on your spreadsheet, but it shouldn't be hard.\n\nSo your program wouldn't be that hard to write *if all you wanted was to check if text was in a cell*. If you start wanting to get fancier about almost matches and such, it gets more complicated, but it's not insurmountable. Psuedo code:\n\n    file_list = get_spread_sheet_files(base_directory)\n    for file in file_list:\n        data = some_reader.read(file) # depends on library and their syntax\n\n        # also very dependent on your library, this loop could be more\n        # complicated and could also keep track of where it is in the\n        # the file - but specifics would definitely vary on how you get \n        # your data back (\"in\" alone might not work, for instance)\n        if thing_youre_looking_for in data:\n            print(\"Found in\", file)  # and/or open file with a program or whatever", "id": "fy6q2h9", "parent": "t1_fy62qu3", "vote": 1}, {"content": "If you're on Windows, for some reason it has a default behavior of hiding known file types. I personally think this is stupid of them in all cases, but it's especially annoying if you're coding since, as you just learned, the file extension is literally part of the file name, so is necessary every time you access a file. You can disable that \"feature\" in the folder options/file explorer options (hit windows key, start typing folder options).", "id": "fyby38o", "parent": "t1_fyaa1g2", "vote": 1}, {"content": "Hmm. As far as I am aware, that method of doing threading should not have the issue I was describing - I believe the .map will block further code execution until all those results are complete. (Not incredibly familiar with concurrent.futures, but after a quick test, it seems to be the case.)\n\nUnfortunately, that was the only idea I had off the top of my head without seeing code. Only other suggestion I would have is to temporarily modify your download_text function to simply return the url, and make sure that it's being called on all urls (so that if you do `print(len(list(executor.map(...)))` you get 2000.", "id": "fyi7uft", "parent": "t1_fyhpmoy", "vote": 1}, {"content": "The `else:` code executes if the test in the `if` part is False.  So if the very first number in the sequence `nums` is **not** divisible by 7 you will return False.  Meaning you don't check any other numbers in the sequence.  You only want to return False if **none** of the numbers are divisible by 7.", "id": "fybsht1", "parent": "t1_fybrsq2", "vote": 2}, {"content": "Yes, if you need to \"predefine\" variables.", "id": "fyfg251", "parent": "t1_fyehme0", "vote": 1}, {"content": "> I am wondering if I can change to randrage(0,4) \n\nYes, you could, but then someone reading your code would wonder where that [magic number](https://en.wikipedia.org/wiki/Magic_number_\\(programming\\)) 4 came from.  It's more direct and readable to use `random.randint(1, 3)`.", "id": "fybr8wz", "parent": "t1_fybq9gg", "vote": 2}, {"content": "Gotcha, I was assuming OP was thinking it was the same as '='.", "id": "fye29o8", "parent": "t1_fyc7ypm", "vote": 1}, {"content": "You can use the dict globally just the same\n\n    def char_counter(text):\n        if text:\n            char = text[0]\n            if char.isdigit():\n                counts['numbers'] += 1\n            elif char.isalpha():\n                counts['letters'] += 1\n            char_counter(text[1:])\n\n    counts = {'letters': 0, 'numbers':0}\n    char_counter('hello world')\n    print(counts)\n\nIt's just not advised to program it this way, as when the function would be imported elsewhere, you need to have it defined globally there too (which leads to bad code and other problems easily).", "id": "fyc8fvl", "parent": "t1_fyc8a5o", "vote": 1}, {"content": "https://realpython.com/python-variables/ has some basics. To answer what you just asked directly: that exact syntax isn't quiet correct, but you can do\n\n    tmp_hello = hello = \"hello\"\n\nOr if you want different values (or the same, for that matter)\n\n    tmp_hello, hello = \"hello1\", \"hello2\"\n\nYou can also swap variables in one line in python:\n\n    a, b = 1, 2  # a is now 1, b is now 2\n    a, b = b, a  # now swapped\n\nFor most of this sort of stuff, I actually recommend just trying it in a python terminal and seeing what happens.", "id": "fye4973", "parent": "t1_fye270s", "vote": 1}, {"content": "> Thanks for your answer. Could you please clarify what you mean by \"Python gets angry if you do that\"?\n\nIf you make your `__len__` return something that can't be interpreted as an integer, then you can still do `obj.__len__()`, but `len(obj)` will raise a type error (I tested this originally by making it return \"baloney sandwich\"). \n\nPrint is similar ish except it uses the `__repr__` and `__str__`function instead - I believe it prefers the str one if it's present, and that repr may be used for other stuff as well, but I don't quiet remember (it's been a while since I've had to mess with that). There are others as well (notably `__init__` for a constructor, `__next__`, `__iter__`, `__getitem__` (all three for various iterable/indexing stuff) and `__hash__` (for putting in sets and similar)).\n\nThose types of functions are sometimes called \"dunder\" functions (for double underscore).  I agree that they're pretty ugly, but it does make them stand out as weird - you're unlikely to define `__len__` by accident and get weird behavior from someone else calling len on your objects.\n\nI believe that notation is meant to be used for special things like the above and \"extra special hidden don't use this directly I mean it unless of course you really want to because this is python and there's no private anything\" methods, but I pretty much only use it for things like making len work. (And even then, pretty rarely.)", "id": "fyio8nw", "parent": "t1_fyiljqn", "vote": 1}, {"content": "In that case I would combine various options, first to use a collection of regexes aimed at the year to pull 'something' from the string that could be a date. Then use dateutil.parser (needs to be installed using pip from 'python-dateutil') to remove the need of having the exact strptime parse string.\n\n    import re\n\n    from datetime import datetime\n\n    from dateutil.parser import parse\n\n    default_dt = datetime(2000, 1, 1)\n\n    def dt_from_str(s):\n        for regex in [r'\\S+20\\d{2}', # ending in 20xx\n                      r'\\d+\\s+\\S+\\s+20\\d{2}', # digits before a word before 20xx\n                      r'\\S+\\s+20\\d{2}', # word before a 20xx\n                      r'\\S+\\d{2}']: # ending in 2 digits\n            match = re.search(regex, s)\n            if match:\n                dt = parse(match.group(0), default=default_dt)\n                if dt:\n                    return dt \n\n    strings = ['COE until JUL 2029',\n               'COE expiry: 25/12/2010',\n               'COE till 21/12/29',\n               'COE lasts until 21 MARCH 2009 non renewable']\n    for s in strings:\n        if 'COE' not in s:\n            continue\n        dt = dt_from_str(s)\n        if dt is not None:\n            print(s, dt.year, dt.month, dt.day)\n        else:\n            print(s, 'no date found')\n\n\nNote that I use a default datetime object set to January 1st 2000 as to indicate when the parser made an assumption, otherwise it would use the current date's properties. Which would lead to the first string being parsed as 20th of July 2029 and you may make the incorrect assumption that the 20th was deduced from the string. To be on the safe side, using January 1st will at least not use a date farther in future than is implied.", "id": "fyn1hys", "parent": "t1_fymly3a", "vote": 1}, {"content": "Its what the other person mentioned, it was looping through the values and printing the string at that loop.\n\nSo instead of going from 0 - size of array, i was just printing out the value of the array at the location.\n\nI'll fix it later, back to my day job (learning Python during lunch hour).\n\nOn one hand, I see the appeal of Python but I can't stand languages like this because of all the poor programming style it allows. In C/C++ you generally always initialize values and there are no hidden increments. Its hard to go from that mindset to a language that does a lot of things for you.\n\nBut on the other, at my day job we primarily use SAS, and SAS is 10x worse.\n\nIn SAS each Data step is also a hidden loop. Drove me crazy at the start.", "id": "fxy6n5w", "parent": "t1_fxy694h", "vote": 1}, {"content": "thank you!", "id": "fxz9vzi", "parent": "t1_fxz9p5g", "vote": 1}, {"content": "Yep, that is what I plan on doing... one step at a time lol. Figured I would learn a lot from implementing a lot of varied objectives into one project like that.\n\nAnyway, thanks for your help so far. I just updated the my block of code to be formatted properly. I hope that helps.", "id": "fy19ui2", "parent": "t1_fxzn33m", "vote": 1}, {"content": "Thank you, you were very helpful!", "id": "fxzmp37", "parent": "t1_fxzky9n", "vote": 2}, {"content": "Alright ill try that. Thanks for the help man!", "id": "fy1x7rm", "parent": "t1_fy1wsr6", "vote": 1}, {"content": "Perfect, thank you!", "id": "fyc4ner", "parent": "t1_fy9a9zv", "vote": 1}, {"content": ">w\n\nHmmm, I will give that a try. Thanks!", "id": "fykyl9y", "parent": "t1_fyi7uft", "vote": 1}, {"content": "I see, thank you very much. I was also wondering about the scenario in which the list nums does not have a number divisible by 7. I assumed that in the case that no element is divisible by 7, the \"if\" will output a False value. If that's not correct, what does it actually output then?", "id": "fybwyyr", "parent": "t1_fybsht1", "vote": 1}, {"content": "Thanks for the info, super helpful !", "id": "fybs081", "parent": "t1_fybr8wz", "vote": 1}, {"content": "I'm so sorry for not being more specific. I'm not allowed to do any globals. all code has to be in the function.", "id": "fyc8jlo", "parent": "t1_fyc8fvl", "vote": 1}, {"content": "you know that was my fault, when I made the changes, I didn't save it, and python ran the last saved file(without what I exampled) and I mistakenly thought it worked, and realized it worked in my for loop because I was doing a dictionary k,v lookup..", "id": "fye67s8", "parent": "t1_fye4973", "vote": 1}, {"content": "I'm not gonna lie, I chuckled at this exchange - because I use argparse all the time, but haven't used it without copying and pasting from a previous project for probably years. \n\nIt is the right tool though - takes a bit of getting used to, but once you do then... you still copy and paste because it's easier than remembering how to tell it to do what you want. But you do get to the point where you understand what you've copied and pasted.", "id": "fy4786r", "parent": "t1_fy1x7rm", "vote": 2}, {"content": "If no numbers in the sequence are divisible by 7 then the block of code controlled by the `if` is never executed and the statement following the `for` is executed.  In the kaggle code that is the `return False` statement.", "id": "fyby1zj", "parent": "t1_fybwyyr", "vote": 2}, {"content": "If you're still allowed to use another function argument that works with a default argument, you could do\n\n    def char_counter(text, counts=None):\n        if counts is None:\n            counts = {'letters': 0, 'numbers':0}\n        if text:\n            char = text[0]\n            if char.isdigit():\n                counts['numbers'] += 1\n            elif char.isalpha():\n                counts['letters'] += 1\n            return char_counter(text[1:], counts)\n        else:\n            return counts\n\n    print(char_counter('hello world'))", "id": "fyc8rw8", "parent": "t1_fyc8jlo", "vote": 1}, {"content": "I see now! Thank you so much for helping me, I really appreciate it.", "id": "fyewcza", "parent": "t1_fyby1zj", "vote": 1}, {"content": "sadly I am not allowed, but I don't care anymore since the autochecker accepted it. Thank you very much. Hope you have a good rest of your day.", "id": "fyc97hj", "parent": "t1_fyc8rw8", "vote": 1}, {"content": "No problemo, make it always return a dict of that specific character's count + the count of its 'downstream' counts\n\n    def char_counter(text):\n        counts = {'letters': 0, 'numbers':0}\n        if text:\n            char = text[0]\n            if char.isdigit():\n                counts['numbers'] = 1\n            elif char.isalpha():\n                counts['letters'] = 1\n            rest = char_counter(text[1:])\n            counts['numbers'] += rest['numbers']\n            counts['letters'] += rest['letters']\n        return counts\n\n    print(char_counter('hello world'))", "id": "fyca80f", "parent": "t1_fyc97hj", "vote": 1}, {"content": "Slightly optimized version\n\n    def char_counter(text):\n        if not text:\n            return {'letters': 0, 'numbers': 0}\n        counts = char_counter(text[1:])\n        char = text[0]\n        if char.isdigit():\n            counts['numbers'] += 1\n        elif char.isalpha():\n            counts['letters'] += 1\n        return counts\n\n    print(char_counter('hello world'))", "id": "fycad80", "parent": "t1_fyc97hj", "vote": 1}], "link": "https://www.reddit.com/r/learnpython/comments/hq54r8/ask_anything_monday_weekly_thread/", "question": {"context": "Welcome to another /r/learnPython weekly \"Ask Anything* Monday\" thread\n\nHere you can ask all the questions that you wanted to ask but didn't feel like making a new thread.\n\n\\* It's primarily intended for simple questions but as long as it's about python it's allowed.\n\nIf you have any suggestions or questions about this thread use the message the moderators button in the sidebar.\n\n**Rules:**\n\n* Don't downvote stuff - instead explain what's wrong with the comment, if it's against the rules \"report\" it and it will be dealt with.\n\n* Don't post stuff that doesn't have absolutely anything to do with python. \n\n* Don't make fun of someone for not knowing something, insult anyone etc - this will result in an immediate ban.\n\nThat's it.", "id": "hq54r8", "title": "Ask Anything Monday - Weekly Thread"}, "resource": "Reddit"}, {"answers": [{"content": "[deleted]", "id": "f2wl08l", "parent": "t3_debq7h", "vote": 3}, {"content": "Double quote or Single quote?\n\nI am going through Python Crash Course and every example is using single quote.  Is there a reason to get into the habit of using double or single quote if they perform the same task?  Is one better than the other or is it strictly preference?\n\nThank you", "id": "f3d7kjh", "parent": "t3_debq7h", "vote": 3}, {"content": "I have a script that web scrapes. Once the conditions are met an email is sent to myself.\n\nI do not want to have my computer ON all the time. \n\nFound this [https://www.pythonanywhere.com/pricing/](https://www.pythonanywhere.com/pricing/)\n\nAny other alternatives? or experiences?", "id": "f2uqvfr", "parent": "t3_debq7h", "vote": 2}, {"content": "I have a script which basically logs in to my companies website, does a few searches and timings and writes out to Prometheus. I have 3 scripts which all use the same login and they run every 5 mins (staggered.) One of the DBAs spoke to me today and said that my script appears to be logging in 8 times a second, he even showed me in SQL the audit log. Now my code is very simple so I'm a bit confused as to why it's logging in that amount of times. My login code is below and I really can't see why it's logging in multiple times per second. I'm still relatively new but can't for the life of me figure it out. Any ideas? Thanks\n\n\n    options = Options()\n    options.headless = True\n    options.add_argument(\"--window-size=1325x800\")\n    driver = webdriver.Chrome(\"d:\\\\python\\\\chromedriver.exe\", options=options)\n\n    driver.get(url)\n    page_wait_clickable_id_30(url=login_button_id)\n\n    elem = driver.find_element_by_id(login_username_id)\n    elem.send_keys('username')\n    elem = driver.find_element_by_id(login_password_id) \n    elem.send_keys('password')  \n    login_duration_start_time = time.time()  \n    elem = driver.find_element_by_id(login_button_id).click()  \n\n    page_wait_click_css_30(url=landing_page_css)\n    login_duration_finish_time = time.time()  \n    login_duration = (login_duration_finish_time - \n    login_duration_start_time) \n    login_duration = (float(\"%.2f\" % login_duration))", "id": "f2vz829", "parent": "t3_debq7h", "vote": 2}, {"content": "I need **all** initialized variables to print, how can i do so?\n\n        class A:\n            def __init__(self):\n                print('One')\n\n        class B:\n            def __init__(self):\n                print('Two')\n\n        class C:\n            def __init__(self):\n                print('Three')\n\n\n        class Total (A,B,C):\n            pass\n            \n\n        Test = Total()\n\n\n\nI heard super() helps, but i am not sure how to use it to do that.", "id": "f2x0z6k", "parent": "t3_debq7h", "vote": 2}, {"content": "I swear I'm thick...\n\n  \nI've created a [site.py](https://site.py) file, in this file I have the below. I've had to create the driver as a global as it's called numerous times in my script\n\n    def user_browsing(url):\n        global driver\n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(url)\n        return driver\n\nnow I have another file called test_import.py, in here I have \n\n\n\n    import site\n\n\n    site.user_browsing(url=\"https://google.com\")\n\n\nWhen I run this I get \n\nTraceback (most recent call last):\n  File \"D:/Projects/venv/test_import.py\", line 5, in <module>\n    site.user_browsing(url=\"https://google.com\")\nAttributeError: module 'site' has no attribute 'user_browsing'\n\nwhat am I doing wrong please?\n\nThanks", "id": "f32l9sl", "parent": "t3_debq7h", "vote": 2}, {"content": "I have an assignment that wants me to ask the user its name, for two numbers, and then to print \"hello user! number1+number2 = sum\" and I can't seem to figure it out. Can someone explain to me why this isn't working?\n\n\\>>>name = input(\"What is your name?\")\n\nWhat is your name?\n\n\\>>> number1 = input(\"What is number 1?\")\n\nWhat is number 1?\n\n\\>>> number2 = input(\"What is number 2?\")\n\nWhat is number 2?\n\n\\>>>print(\"Hello\" + name . number1 + number2)\n\nIDLE keeps giving me a syntax error at the very first >>>\n\n&#x200B;\n\nany help is appreciated ! :)", "id": "f33x1zs", "parent": "t3_debq7h", "vote": 2}, {"content": "EDIT: I THINK I FIGURED IT OUT. Took a walk, came back, and started playing around with it. I believe I got it to work. I just need to figure out how to use more then one keyword. Pretty hyped it's working. I think I edited my text below to reflect what I currently have.\n\nHey Guys,\n\nI'm trying to write a bot that will look though r/nfl's hot post and return them if they contain my home team's name (or a keyword) in the title. I'm very new to Python and using PRAW right now. I'm able to figure out how to retrieve the post I just need to sort through them now. I've been sitting here frustrated for about 2 hours making a little progress but not much. I've already gone through the documentation fro Praw so maybe I'm just too new to realize a solution. I'm sure there's an easy solution to this I'm just getting frustrated/burnt.  Right now its just returning my ELSE statement. I'll post my code below. Any help is appreciated!\n\n`#finds specific posts from r/nfl if keyword criteria met`\n\n&#x200B;\n\n`import praw`\n\n&#x200B;\n\n`def find_post():`\n\n`#API read/write log-in`\n\n`reddit = praw.Reddit(client_id='REMOVED FOR POST',`\n\n`client_secret='REMOVED FOR POST',`\n\n`user_agent='REMOVED FOR POST')`\n\n&#x200B;\n\n`#grabs posts by hot`\n\n`nfl = reddit.subreddit('nfl').hot(limit=100)`\n\n`#keywords Added 'Antonio after I ran code without IF statement as a test. Still didn't pull it in :(`\n\n`keywords = 'Mahomes'`\n\n&#x200B;\n\n`#prints posts if criteria met`\n\n`for post in nfl:`\n\n`if keywords in post:`\n\n`print(post.title)`\n\n`print(post.url)`\n\n`else:`\n\n`print(\"No Chiefs posts :(\")`", "id": "f3499e7", "parent": "t3_debq7h", "vote": 2}, {"content": "I am new to learning phyton, did not want to make a new post as I feel I am just overlooking something basic. My code is as such:\n\n    name=\"my name\"\n    name=name.split() \n    yob=1997\n    cy=2019\n    age= cy-yob\n    print(name + \"is\", age, \"years old.\")\n    print(name [0][0] + \".\" + name[1][1]+\". was born in the year\", yob)\n    print(\"In\", float(20), \"years\" + name[0] + \"will be 42 years old.\")\n\nWhen I run this code, I get an error that says TypeError: can only concatenate list (not \"str\") to list. What can be done to fix this? I want my full name to show up on the first line, initials to show up on the second line, and only my first name to show up on the third line. Debugging makes it seem like there is something wrong with the 2nd line which I have no idea how to fix.", "id": "f2u6emp", "parent": "t3_debq7h", "vote": 1}, {"content": "[deleted]", "id": "f2uzw5i", "parent": "t3_debq7h", "vote": 1}, {"content": "What is the better editor for Python, Visual Studio Code or Pycharm? I currently use Pycharm but have been wondering if Visual Studio Code would be better.", "id": "f2v6411", "parent": "t3_debq7h", "vote": 1}, {"content": "[deleted]", "id": "f2vnbds", "parent": "t3_debq7h", "vote": 1}, {"content": "I can't for the life of me figure out why *sleep* is breaking my while loop. Whenever I run either function for choices 1 or 2, the terminal sleeps and then prints the *quit* message.\n\nFor context, I was working on [this /r/dailyprogrammer challenge](https://www.reddit.com/r/dailyprogrammer/comments/pkw2m/2112012_challenge_3_easy/) and decided to turn it into a terminal app.\n\n    choice = ''\n    \n    while choice != 'q' or 'Q':\n        show_header()\n        choice = get_user_choice()\n    \n        if choice == '1':\n            print(\"\\nCIPHER A MESSAGE\")\n            message = get_message()\n            shift = get_shift()\n            replace_letters(message, shift)\n            sleep(3)\n    \n        if choice == '2':\n            print(\"\\nDECIPHER A MESSAGE\")\n            message = get_message()\n            # negative shift for decrypting\n            shift = get_shift() * -1\n            replace_letters(message, shift)\n            sleep(3)\n    \n        if choice == '3':\n            print(\"\\nBRUTE FORCE DECRYPT\")\n            message = get_message()\n            for x in range(0,26):\n                replace_letters(message, x)\n    \n        elif choice == 'q' or 'Q':\n            print(\"\\nThanks for playing. Goodbye.\")\n            quit()\n        else:\n            print(\"I didn't understand that choice. Please make another selection.\")", "id": "f2vwiyb", "parent": "t3_debq7h", "vote": 1}, {"content": "I am trying to scrape the current fortune 500 ranking for Wayfair.  I tried to use lxml for this, but it won't work.  I can't use selenium.  What are my options?  Is there another more friendly site aside from the fortune site itself?", "id": "f2w752m", "parent": "t3_debq7h", "vote": 1}, {"content": "Why are variable variables bad? \\[Looping\\] \n\nI'm creating a time series chart and I want to display difference between a 'feature'. In my current case I have only three features (eg. Cold, Room, Hot). I'm manually adding each figure as a trace to my plot figure...but what if I ran into a situation where I there are 20 features? I have to add a trace for each figure and that seems time consuming. Can I create a loop that adds these traces for me? \n\nI was looking to create a variables like \"Trace1, Trace2, Trace3...\" but StackOverflow says that's a bad practice. What's the alternative in my situation? My plot takes each trace as an argument and each trace has arguments of x and y.", "id": "f2wcdu7", "parent": "t3_debq7h", "vote": 1}, {"content": "I cant import libraries or modules I have installed using pip2 install matplotlib for example (im still using python 2.7 for some reason), yet when i look in the libs folder they are there and everything can read them no problem, yet pycharm says that there is no such module. How can I fix this? Ive already tried alot of old answers but nothing seemed to work", "id": "f2y3gyo", "parent": "t3_debq7h", "vote": 1}, {"content": "When using pyodbc and sql params, why would my script take 15x longer to run when I'm only adding one extra column to select via a sql query? I am pulling about 15 different columns, about 5 of them are date values. I run that, and it takes about 10 seconds. I add one more column with date values, and then it takes over a minute. Why would this happen? When I run the query on SQL, it works fine, no long delays. I've looked at the actual values and formatting and I don't notice anything that different about the new column. I looked at the dtypes and all of the date values are datetime64\\[ns\\] objects. What the hell???", "id": "f2yazt0", "parent": "t3_debq7h", "vote": 1}, {"content": "I'm using Oanda's oandapyV20 API -> OpenPositions to get all open positions in my portfolio. \n\nI hate to post a URL, but this page shows the response from calling this function (please see the Output section):  [https://oanda-api-v20.readthedocs.io/en/latest/endpoints/positions/openpositions.html](https://oanda-api-v20.readthedocs.io/en/latest/endpoints/positions/openpositions.html) \n\nI'd like to iterate through the response, and create Position objects for each position. But how do I iterate and get each instrument, unrealizedPL, short units, and long units?", "id": "f2yhj46", "parent": "t3_debq7h", "vote": 1}, {"content": "I've decided to practice and learn a bit about GUIs by making a board game using tkinter. For the most part, it's working all right, but I'm struggling to find actual decent documentation. \n\nAn example doing the exact one specific thing one dude wanted to do 5 years ago? Perfect, got it! But, for instance, I cannot find what actually gets passed to a function specified by Scrollbar's command argument.\n\nSo I've got:\n\n    class SuperCoolBoardGame(tk.Frame):\n        def __init__( blah blah):\n            blah blah\n            self.h_scroll_bar = tk.Scrollbar(self.board_frame, \n                orient=tk.HORIZONTAL, command = self._h_scroll_bar_func\n            )\n            blah\n\n        def _h_scroll_bar_func(self, *args):\n             # but what the crap will *args even be? \n\nI've figured out a few things by trial and error, but I'm pretty sure it can be at least one more thing I haven't figured out yet, based on one crash I had before I made it talk about its feelings and explain why it was so angry more.\n\nSo, my question is twofold: Does anyone know what's going on with scrollbar commands, and does anyone know where I can find some documentation that doesn't suck? Could by that my google fu is weak, but I have not found much.", "id": "f2ys5qf", "parent": "t3_debq7h", "vote": 1}, {"content": "I need help on this question :\n\n Selling a new vehicle pays a salesperson $1500. Selling a used vehicle pays a commission of 5% of the selling price. Write an interactive program that calculates a salesperson's total pay for selling **two vehicles, each one of any type**.\u00a0The program should prompt the salesperson to enter the type and selling price of each vehicle. **Do not use a loop**. The program should then display the salesperson's **total sales and total pay**. Express these amounts in **currency format** as described in the requirements above. \n\nThis is my code:\n\n&#x200B;\n\npay = 0\n\ncar1\\_type = input('First car type \\[new/used\\]: ')\n\ncar1\\_price = float(input('First car sales price: '))\n\ncar2\\_type = input('Second car type \\[new/used\\]: ')\n\ncar2\\_price = float(input('Second car sales price: '))\n\nif car1\\_type:\n\n\u00a0\u00a0\u00a0\u00a0pay +=1500\n\nelse:\n\n\u00a0\u00a0\u00a0\u00a0pay += 0.05\n\nif car2\\_type:\n\n\u00a0\u00a0\u00a0\u00a0pay +=1500\n\nelse :\n\n\u00a0\u00a0\u00a0\u00a0pay +=0.05\n\nsales = car1\\_price + car2\\_price\n\nprint('Total sales of car type sold is $', format(sales, ',.2f'), sep='')\n\nprint('Total pay of car type sold is $', format(pay, ',.2f'), sep='')\n\n&#x200B;\n\nI think I don't have the right answer for the total pay", "id": "f2yv7fl", "parent": "t3_debq7h", "vote": 1}, {"content": "I made a simple script which automatically download 10 pics from one website once per day. Any good tutorial how I can run this script with a telegram bot? Bot should do same thing and send me this pics.", "id": "f2zfqea", "parent": "t3_debq7h", "vote": 1}, {"content": " A map is given to me in a form of this  \n\n\nWWWTWWWTTT  \nWWTTTWWWWW  \nWWWTWWWWWT  \n\n\nFor this case the rows and columns start from (0,0).                                                                                                                The treasure is located at the center of the cross of T's for which the case is (1,3)  \nThe coordinate format is (row,column)  \nHow do I find that exact coordinate of the treasure?", "id": "f301qi1", "parent": "t3_debq7h", "vote": 1}, {"content": " working on a number generator but i keep getting syntax error  for missing colon and break outside of loop any suggestion \n\nimport random  \n\n\nanwser = random.randrange(1,20)  \nguess = input (\"what is your guess : \")  \n\n\nif guess == anwser:  \n  print (\"you guess right good job\")  \nelif guess > answer:  \nprint (\"your guess is to high try again\")  \nelse answer > guess:  \n   print  (\"your guess was to low try again\")", "id": "f30b9h2", "parent": "t3_debq7h", "vote": 1}, {"content": "I'm looking for a way to create mountable filesystem's like a .IMG .DMG .ISO etc. I'm aware of how to do this on a nix cmd line like creating an empty directory giving it a file system like fat or ext4 and mounting it. And Python can create files, folders tmp dir's etc but is there a py module for doing this kind of stuff?", "id": "f30pqtf", "parent": "t3_debq7h", "vote": 1}, {"content": "            super().__init__(self)\n            TypeError: __init__() takes 1 positional argument but 2 were given\n\nWhat exactly does this error mean?\n\nI removed the self from init and worked fine but not sure what was the error here.\n\nAlso, anyone knows a good super() tutorial? I am not sure what is supposed to go inside the parenthesis.", "id": "f30ql95", "parent": "t3_debq7h", "vote": 1}, {"content": "A foolish question. When working with text files, is there a way to get Python to \u201copen\u201d all the files in a folder without being told what their name is? Someone has requested that I take 300 to 1000 txts that I am going to create and list out how many times a word appears across all of them. With my current knowledge, all I can think to do is either rename them all by some number scheme so that Python can automatically \u201ccount\u201d and open each one, or painstakingly tell Python the name of each one to open. Both will take a chunk of time that I hope to spare myself.\n\n\nRelated, if anyone has a better way to do this than having the computer open each file, read it, add each word to a list and then count how many times each term in the list occurs, I\u2019m all ears / eyes.\n\n\nI\u2019m not very advanced, but I have basic grasp of logic and working with txt in Python.", "id": "f3128sp", "parent": "t3_debq7h", "vote": 1}, {"content": "[deleted]", "id": "f31b386", "parent": "t3_debq7h", "vote": 1}, {"content": "May be a silly thing to ask, but how do i fully exit from a nested loop without end in the loop outside?\n\nIn other programming languages it would be easy because they don't rely on indentation, but python indentation makes things confusing.\n\nSome example code:\n\n        a=0\n        b=1\n        c=2\n        d=0\n\n        while True:\n            \n            if d==0:\n                print('this is the first time this code runs')\n                break\n            else:\n                print('this is not the first time this code runs.')\n                break\n\n        while b==1:\n            print('[This is some test string.]')\n            i=input('Input y\\n')\n\n            while c==2:\n                if a==0:\n                    print('this is the nested print')\n                    d+=1\n                    break\n                elif a==0 and b==1: \n                    print('this is an elif nested print')\n                    d+=1\n                    break\n\n\n\n**What i aimed to do:**\n\n1. At the start, since `d` is 0, it will print the conditional of the first loop, then jump to the `while b==1` loop.\n2. A test string will be printed.\n3. You will be given something to input.\n4. Then the `while c==2` loop is enabled.\n5. Since `a==0` condition is met, a string it printed and  `d` increases it's value by 1.\n6. Since `d!=0` the else at the first loop should apply and the program then will go to the next loop.\n\n**What happens:**\n\n1. The break of `a==0` just gets you out of `while c==2` loop, and you end in the `while b==1` loop, so the first `while True` loop else conditional never will apply.\n2. If put a break at the if level, the `elif` gives an error (i put it there specifically to trigger that error).\n3. If put a break at the while level, the `elif` will again give an error.\n\n\nThis is just a conceptual script to understand how to get out of multiple while loops if a condition meets in a nested one, it's not supposed to make sense, some parts of the code will purposely never trigger.", "id": "f31d01a", "parent": "t3_debq7h", "vote": 1}, {"content": "I work at a Cannabis shop in Canada.\n\nI have written a script that searches though a google spreadsheet of all of the different strains we have and spits out matches based on user selected criteria (thc level, cbd level, grower, etc).\n\nI want to turn this into a simple webapp with... I don't know, flask? All of the tutorials are honestly confusing me, and I know that I don't need to know a fraction of what they are teaching me in order to implement this... but I have no clue how to do so myself.\n\nAny recommendations?", "id": "f31v1bl", "parent": "t3_debq7h", "vote": 1}, {"content": "I have a bunch of .txt files which i need cleaned, but I am struggling with one aspect. There are a lot of unicode chars which i don't know how to handle. For example:\n\nar\\\\\\\\u016bp\\\\\\\\u0101vacara \n\nshould read\n\nar\u016bp\u0101vacara\n\nThere must be some quick way to do this instead of going\n\n    str = str.replace('\\\\u016b', '\u016b')\n    str = str.replace('\\\\u0101', '\u0101')\n    ...", "id": "f32j9p2", "parent": "t3_debq7h", "vote": 1}, {"content": "How can I apply a confidence interval to a pandas bar plot instead of just the standard deviation?\n\nHere is my code so far (dummy data):\n\n    import numpy as np\n    import pandas as pd\n    import matplotlib.pyplot as plt\n    \n    # generate two random samples and combine them\n    x1 = np.random.normal(loc=5, scale=0.8, size=20)\n    x2 = np.random.normal(loc=3, scale=1.2, size=20)\n    d = list(zip(['A']*20, x1)) + list(zip(['B']*20, x2))\n    df = pd.DataFrame(data=d, columns=['group', 'data'])\n    \n    # plot a bar chart with a bar for each group with error bars for the SD\n    plot_data = df.groupby('group')['data'].mean()\n    errors = df.groupby('group')['data'].std()\n    ax = plot_data.plot(kind='bar', yerr=errors)\n    plt.show()\n\nI found this code for calculating the confidence interval for the mean, but I'm not sure how I can transform the result so that it fits the yerr argument:\n\n    import scipy.stats\n    \n    def mean_confidence_interval(data, confidence=0.95):\n        ''' calculate the 95% conficence interval around the mean \n        https://stackoverflow.com/questions/15033511/compute-a-confidence-interval-from-sample-data\n        '''\n        a = 1.0 * np.array(data)\n        n = len(a)\n        mean, se = np.mean(a), scipy.stats.sem(a)\n        h = se * scipy.stats.t.ppf((1 + confidence) / 2., n-1)\n        return mean, mean - h, mean + h\n    \n    conf = df.groupby('group')['data'].apply(mean_confidence_interval)", "id": "f35zd15", "parent": "t3_debq7h", "vote": 1}, {"content": "Me again! In my next step for improving my code and reducing having the same thing typed out numerous times, I'm trying to make it so I can pass values for different timeouts as I use the same thing about 8 times in my script all with different timeout values\n\n&#x200B;\n\n&#x200B;\n\nMy defs are\n\n    def page_wait_clickable_id(url, timeoutSeconds):\n        WebDriverWait(driver, {timeoutSeconds}).until(EC.element_to_be_clickable((By.ID, f\"{url}\")))\n\n    def portal_page_load(login_button_id, provider, timeout):\n        try:\n            page_wait_clickable_id(url=login_button_id, timeoutSeconds=timeout)\n\nI'm calling it from another file in this way\n\n    site = site_functions\n    site.user_browsing(url=\"https://test.com\")\n    site.portal_page_load(login_button_id=\"test_cmdLogin\",\n                          provider=\"test\",\n                          timeout=60)\n\nHowever, I get the error\n\nTraceback (most recent call last):\n  File \"D:/Projects/venv/test_import.py\", line 10, in <module>\n    timeout=60)\n  File \"D:\\Projects\\venv\\site_functions.py\", line 39, in portal_page_load\n    page_wait_clickable_id(url=login_button_id, timeoutSeconds=timeout)\n  File \"D:\\Projects\\venv\\site_functions.py\", line 32, in page_wait_clickable_id\n    WebDriverWait(driver, {timeoutSeconds}).until(EC.element_to_be_clickable((By.ID, f\"{url}\")))\n  File \"D:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 68, in until\n    end_time = time.time() + self._timeout\nTypeError: unsupported operand type(s) for +: 'float' and 'set'\n\n\nIf I remove the parameter timeout seconds and the timeout and manually put in value then it works. I'm really not sure what's wrong here.", "id": "f3616cy", "parent": "t3_debq7h", "vote": 1}, {"content": "Ok. I'm a little confused what the default encoding in Python is the [official tutorial](https://docs.python.org/3.3/tutorial/inputoutput.html) on Input and Output states:\n\n> Normally, files are opened in *text mode*, that means, you read and write strings from and to the file, which are encoded in a specific encoding (the default being UTF-8). \n\nWhile the[documentation](https://docs.python.org/3/library/functions.html#open) of `open` states:\n\n> *encoding* is the name of the encoding used to decode or encode the file. This should only be used in text mode.  The default encoding is platform dependent (whatever `locale.getprefferedencoding()` says) \n\nIt seems that the latter is the case. Because when I write a file in uft-8 and then read it without specifying the encoding all my umlauts get f'ed up. So is this an error in the official tutorial or am I misunderstanding something?", "id": "f36a7uu", "parent": "t3_debq7h", "vote": 1}, {"content": "Looking to get into some Python learning and coding, and thinking about a laptop, so I can do it on the couch while hanging out with my wife in the evenings.\n\nI have a friend who is absolutely adamant that I should get a brand new macbook air, because its \"just the best for any kind of programming you want to do\", but I feel like I can get more bang for my buck hardware wise with a windows machine. My budget is $1000, is a mac really worth the premium cost for lesser hardware? My desktop and work PC's are both running on windows 10, which I'm extremely comfortable with.", "id": "f37h2mx", "parent": "t3_debq7h", "vote": 1}, {"content": "Edit: print('the {q} {b} {f} '.format(f='fox', b='brown', q='quick')) works\n\nI just had to move the parenthesis. Still not sure why it works on mac but not windows.\n\nI have a mac computer and a windows computer that I am practicing python on so that I am well versed in how both OS's operate. I am trying to input a working line from my mac:\n\n print('the {q} {b} {f} ').format(f='fox', b='brown', q='quick')\n\nInto my windows computer and get back:\n\nTraceback (most recent call last) :\nFile \"Myexample.py\", line 1, in <module>\n print('the {q} {b} {f} '.format(f='fox', b='brown', q='quick')\nAttributeError: 'NoneType' object has no attribute 'format'\n\nDoes anyone have any clue why this is?", "id": "f38h9ng", "parent": "t3_debq7h", "vote": 1}, {"content": "I am trying to write the output into a new file that is tab separating. My code is as such and I am using Python 2.7 with Pycharm.\n\n    fil= raw_input(\"Enter File Name\")\n    outputfil= raw_input(\"Enter output file\")\n    with open(fil) as f:\n        reader = csv.reader(f)\n        flag = False\n        for row in reader:\n            flag= False\n            for ele in row:\n                if ele == \"0\":\n                    flag = True\n            if not flag:\n                print(row)\n\nRight now it is just printing the rows out. I know that line needs to be changed to something that has to do with the write function, but anything I try does not work.", "id": "f399u8t", "parent": "t3_debq7h", "vote": 1}, {"content": "I just got done with a technical interview for a data analyst position and I was disappointed that I was unable to correctly answer a question about Python since that was the topic I felt the most strongly in.\n\nI was asked:\n\n>Suppose we are writing a while loop in Python 3. What feature is present in Python that is not found in other programming languages\n\nThe answer:\n\n>!Python 3 can handle an \"else\" statement in a while loop!<\n\nI thought I had a pretty good grasp on python and I am curious on what the thoughts are out in the community on this one. Is this truly an indication that I have a lot to learn about Python or is this just an obscure question for the sake of being obscure. Does anyone use this feature in their code?", "id": "f39ekx8", "parent": "t3_debq7h", "vote": 1}, {"content": "I'm very new to programming and now I'm trying to write a code that will print the whole lyrics of the song 99 Bottles of Beer, but I can't figure out why it prints \"None\" in between verses. Here's my code:\n\n    def est(x):\n        return print(x,\"bottles of beer on wall,\",x,\"bottles of beer.\\nTake one down and pass it around,\",x-1,\"bottles of beer on the wall.\\n\")\n    \n    x=99\n    \n    while True:\n        if x>1:\n            print(est(x))\n            x=x-1\n        elif x==1:\n            print(x,\"bottle of beer on wall,\",x,\"bottle of beer.\\nTake one down and pass it around, no more bottles of beer on the wall. \\n\")\n            x=x-1\n        else:\n            print(\"No more bottles of beer on wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall. \\n\")\n            break", "id": "f39xq41", "parent": "t3_debq7h", "vote": 1}, {"content": "Ok, here's my question of the week:\n\nHow do i make my program save progress at the end of the script? \n\nSo, I have module\\_a and module\\_b.... \n\nmodule\\_a has a script that imports module\\_b and then goes on to accept user data. That data is stored in one of three lists in module\\_b. \n\nmodule\\_b will be kinda like an \"admin\" script where the admin can view the contents of the lists based on menu commands that I'm going to make. \n\nI'd like module\\_a to save the changes made to module\\_b after users are done inputting their info. \n\nHere's the code for module\\_a:\n\n    import guest_list as gl\n    \n    answer = input('\\nWill you be able to join us? ')\n    \n    while len(answer) >= 0:\n    \n        if answer.upper() == 'YES':\n            name = input(\"Great! Can't wait to see you! Please enter your name to RSVP: \").lower()\n            confirm = gl.invitees.index(name)\n            gl.confirmed.append(gl.invitees.pop(confirm))\n    \n            break\n    \n        elif answer.upper() == 'NO':\n            name = input('\\rPlease enter your name so that we can remove you from the guest list: ').lower()\n            cancel = gl.invitees.index(name)\n            gl.cancellations.append(gl.invitees.pop(cancel))\n            break\n    \n        else:\n            print('Please enter yes or no')\n            answer = input('\\nWill you be able to join us? ')\n    \n    \n    # Check to see that lists were properly changed\n    if len(gl.invitees) != 0:\n        print(f'Invited guests: {gl.invitees}'.title())\n    if len(gl.cancellations) != 0:\n        print(f'Guests that cancelled: {gl.cancellations}'.title())\n    if len(gl.confirmed) != 0:\n        print(f'Confirmed guests: {gl.confirmed}'.title())\n    \n\nThere is no practical purpose for this project, other than to practice some basic skills :)", "id": "f3a4924", "parent": "t3_debq7h", "vote": 1}, {"content": "email.mime.multipart\n\nMy rPi doesn't like it, and I don't know why XD\nId like to reinstall smtplib, but I know nothing about python or rPi and only ever get errors.\n\nFeel free to treat me like a 5yo with this one!", "id": "f3a89bl", "parent": "t3_debq7h", "vote": 1}, {"content": "Any recommended reading, regarding modifying a third party library? I want to do some modifications to the `somajo`tokenizer so it better fits my needs.\n\nEdit: I'm generally aware of the package and module structure.", "id": "f3amhei", "parent": "t3_debq7h", "vote": 1}, {"content": "When do I use filter() over list comprehension and vice versa?\n\nExample:\n\n    files = os.listdir(os.path.join(os.path.dirname(__file__), 'images')\n    img_files = [f for f in files if f[-3:] == 'png']\n    # or \n    img_files = list(filter(lambda x: x[-3] == 'png', files))", "id": "f3b7c1a", "parent": "t3_debq7h", "vote": 1}, {"content": "Can someone explain to me this bit of code in a [Stack Overflow answer](https://stackoverflow.com/questions/34804458/python-parsing-ordereddict-of-ordereddicts-into-pandas-dataframe)? It works but I do not understand part of the solution.\n\n    records = od['records'] \n    data = {} \n    for rec in records: \n        for k, v in rec.items(): \n            if k == 'attributes': \n                continue         \n            data.setdefault(k, []).append(v)  \n    dframe = pandas.DataFrame(data) \n    print(dframe)\n    \n    This is parsing a nested ordered dict that is returned from a SimpleSalesforce api call to\n     a salesforce instance. The simple salesforce package parses the json into the nested\n     ordered dicts and this code is what is putting it into a dataframe.\n    \n    I know what a for loop is, I know what an if statement is, but I do not understand what is\n     happening in this particular implementation of the syntax. Cheers.", "id": "f3bayfe", "parent": "t3_debq7h", "vote": 1}, {"content": "This may be more of a learnhttp/learnpython crossover, but I figured I should ask:\n\nTo automate some really repetitive and mundane stuff at my job, I wrote a script using openpyxl and selenium to post some data from an excel sheet to a web application. I just learned that this web app has an API, so I'm trying to learn how to use the requests module to interact with it. The majority of what I need to do is just sending POST requests - the web app has a little FAQ/guide page [here](https://labcollector.com/support/knowledge-base-faq/?id=109).\n\nIn particular I'm trying to use their \"create job\" method (1.9 on that FAQ page). If you don't want to click the link, here is what it says:\n\n**1.9. Create job**\n\nMethod: POST\n\nURL: http://\\[my\\_labcollector\\_url\\]/extra\\_modules/lsm/webservice/index.php?v=2\n\nRequired parameter: *create*\n\nExample of *create*:\n\n    <jobs> \n    <job number='XP-001' requester='1'> \n    <parameter id='1' value='text'></parameter> \n    <sample name='sample01' type='1' comment='notes'>\n    <assay id='1'></assay> \n    <assay id='2'></assay> \n    </sample> \n    </job> \n    </jobs> \n    \n\nPlease excuse the un-indented markup (side question: that's XML right? I have a lot to learn here).I only need a few of these tags/fields (1 job with number & requester, 1 sample with type, and 1 assay with id), so my request should look more like:\n\n    <jobs> \n    <job number='XP-001' requester='1'> \n    <sample type='1'>\n    <assay id='1'></assay> \n    </sample> \n    </job> \n    </jobs> \n\nthe sample name field is filled with a unique value automatically when I use a browser, so I probably don't have to pass a value in my request right?\n\nAs far as I can tell, what I need to do is create a dictionary in my python program that has keys for the tags/field names and values for the data to be passed into the tags/fields. In the following code block I'm passing a dict, but I have also tried json with similar results. My code looks something like this, with some obvious substitutions for sensitive information:\n\n    \"\"\"\n    UTF-8\n    Temp scripting file\n    \"\"\"\n    \n    import requests\n    \n    url = 'http://us.labcollector.online/company_name/extra_modules/lsm/webservice/index.php?v=2'\n    \n    job_dict =\\\n    {'jobs':\n        {'job':{'number': '191011testjob', 'requester': 'test4','sample':\n            {'type': '1'}}\n        }\n    }\n    \n    \n    # \"create\" parameter with data to be \"created\"\n    create_param = {'create':job_dict}\n    \n    # auth info\n    headers={'X-LC-APP-Auth':'my_api_key',\n             'X-LC-APP-Charset' : 'utf-8'}\n    \n    response = requests.post(url, headers=headers, params=create_param)\n    \n    # response is 200, but the job I am trying to create does not appear in the web app when viewed in the browser; response has no content, and the headers don't seem to tell me much about what's happened to my request.\n\nThe web app has a \"job list\" where I can check if my POST request has successfully added a \"job\" to the server. May be obvious because I'm making this comment, but the job I'm trying to create does not appear on this job list. So the 200 response tells me that the server successfully received my request, but apparently it's formatted incorrectly, or maybe something else is wrong that I'm missing. I have also tried passing `data=job_dict` into the `requests.post()` to no avail.\n\nWhat am I doing wrong? Should I be writing out my request in the markup language then converting it to a dictionary/json instead of trying to write the dict myself? I don't even know how to go about troubleshooting/debugging this.", "id": "f3bk596", "parent": "t3_debq7h", "vote": 1}, {"content": "[deleted]", "id": "f3cqzqx", "parent": "t3_debq7h", "vote": 1}, {"content": "https://statsapi.web.nhl.com/api/v1/schedule?startDate=2019-10-12&endDate=2019-10-12&expand=schedule.teams,schedule.linescore,schedule.broadcasts\n\n            today = datetime.now(self.pacific).strftime('%Y-%m-%d')\n            url = 'https://statsapi.web.nhl.com/api/v1/schedule?startDate=' + today + '&endDate=' + today + '&expand=schedule.teams,schedule.linescore,schedule.broadcasts'\n            games = requests.get(url).json()['dates'][0]['games']\n            for game in games:\n                game_status = game['status']['abstractGameState']\n\nHow would I go about an `if not any` clause here? What I want to do is iterate through the 14 games and if `game['status'][abstractGameState'] == 'Live'` is False for all of them I want to take action\n\nSomething like `if not any(game == 'Live' for game in ...)`", "id": "f3fr0oq", "parent": "t3_debq7h", "vote": 1}, {"content": "I am new to python and I am making a hangman game that has counter and even though I have declared the counter globally the counter does not change when I add a counter += 1 at the end of my functions. Here is the share link from repl.it [https://repl.it/@AOskotsky/hangman](https://repl.it/@AOskotsky/hangman)", "id": "f3mi1qd", "parent": "t3_debq7h", "vote": 1}, {"content": "Is it possible to update specific columns only in sqlite?\n\nLet's say I have an existing table with unchanging rows. My code will add a new column every day for that day's date. Then I just want to add new data into that **new** column only without affecting anything. Can this be done? It's my understanding that sqlite requires the column names to be known. But since they'll be generated based on the date, this isn't really possible", "id": "f3n17u9", "parent": "t3_debq7h", "vote": 1}, {"content": "I get TypeError: object of type 'builtin_function_or_method' has no len() when trying to get the length of a list AFTER using <listname>.remove(variablename)\n\nI can get a length result before using that command and checking the contents of the list with print statements everything it has the expected contents before AND after using the command.", "id": "f3nh679", "parent": "t3_debq7h", "vote": 1}, {"content": "I'm having an issue with this program I'm trying to write, I got the program to do what it is supposed to do when a number input is put it, but the lab is also putting in different inputs and they are not working with my code. The problem is:\n\n \n\nOne lap around a standard high-school running track is exactly 0.25 miles. Write the function miles\\_to\\_laps() that takes a number of miles as an argument and returns the number of laps. Complete the program to output the number of laps.\n\nOutput each floating-point value with two digits after the decimal point, which can be achieved as follows:  \nprint('{:.2f}'.format(your\\_value))\n\nThe program I have written thus far is:\n\ndef miles\\_to\\_laps(user\\_miles):\n\nlaps = user\\_miles \\* 4\n\nreturn laps\n\n&#x200B;\n\nuser\\_miles = float\n\n&#x200B;\n\nlaps = float(miles\\_to\\_laps(user\\_miles)\n\n&#x200B;\n\nprint('{:.2f}'.format(laps))\n\nThe issue I am having is that they are trying an input of:\n\nmiles\\_to\\_laps(1.5)\n\nWhich doesn't seem to be compatible with my program and is giving errors of:\n\n Traceback (most recent call last):   File \"zyLabsUnitTestRunner.py\", line 4, in <module>     from zyLabsUnitTest import test\\_passed   File \"/home/runner/local/submission/unit\\_test\\_student\\_code/zyLabsUnitTest.py\", line 4, in <module>     from main import miles\\_to\\_laps   File \"/home/runner/local/submission/unit\\_test\\_student\\_code/main.py\", line 5, in <module>     user\\_miles = float(input()) EOFError: EOF when reading a line \n\nAny help will be appreciated.", "id": "f3o6y5m", "parent": "t3_debq7h", "vote": 1}, {"content": "1. As per [convention](https://www.python.org/dev/peps/pep-0008/#maximum-line-length), try and limit maximum length of code to 79 or less. \n2. Why do you need `i -= 1`? It is redundant, since the `for` loop take care of it.\n3. Your output for `i == 2` is \n\n> 2 bottles of beer on the wall, 2 bottles of beer!  \n> Take one down and pass it around, 1 bottles of beer on the wall.  \n\nversus what is grammatically correct would be:\n\n> 2 bottles of beer on the wall, 2 bottles of beer!  \n> Take one down and pass it around, 1 bottle of beer on the wall.  \n\n4. As per [DRY principle](https://realpython.com/lessons/dry-principle/), there are duplicate strings which can be avoided. And in the process, the `for` loop block can be simplified.\n\nHere's my refactor of your code: \n\n```python\nplural, plural_punc = \"s\", \"!\"\nbottles = \"f'{i} bottle{plural} of beer on the wall, \"\nbottles += \"{i} bottle{plural} of beer{plural_punc}\\\\n\"\nbottles += \"Take one down and pass it around, \"\nbottles += '{\"no more\" if i == 1 else i-1} bottle{(\"\", \"s\")[i!=2]} '\nbottles += \"of beer on the wall.'\"\n\nfor i in range(99, 1, -1):\n    print(eval(bottles), end=\"\\n\\n\")\ni, plural, plural_punc = 1, \"\", \".\"\nprint(eval(bottles))\n```", "id": "f2wz4cm", "parent": "t1_f2wl08l", "vote": 4}, {"content": "You forgot to add a period at the end of the `elif` `bottles` string.", "id": "f2wtjli", "parent": "t1_f2wl08l", "vote": 1}, {"content": "For text that could have apostrophes, eg \"let's go\", I tend to use double quotes, but you need to adapt to whatever quotes are in the text.", "id": "f3dgrtu", "parent": "t1_f3d7kjh", "vote": 3}, {"content": "Get yourself a Linux server. Python3 is supposed to be installed on it already. I don't have experience with a lot of hosters, but Linode (linode.com) offers plans from $5/month. I hear this name in podcast ads a lot so it's got to be good. You can also try Microsoft Azure, Google Cloud, Amazon AWS and lots of others.\n\nAlso a very interesting out-of-the-box option: get yourself a Raspberry Pi. Will cost you about $40 once, and you'll never have to pay again.", "id": "f2uy5eh", "parent": "t1_f2uqvfr", "vote": 4}, {"content": "I've used Heroku to deploy some stuff. The basic is for free, but server shutsdown after 30min of inactivity. However, I think you can work around that, by calling the server. Otherwise you can pay a small amount to have it running all the time.", "id": "f2uxyzk", "parent": "t1_f2uqvfr", "vote": 3}, {"content": "I\u2019ve had good luck just using a $5 vps running Debian from ovh for hosting my discord bot and also my Xbox gameclip & screenshot scrapper. \n\nThey don\u2019t have much drive space so I just sync all scrapped files to google drive and delete them locally once the sync is done.", "id": "f2x6a0c", "parent": "t1_f2uqvfr", "vote": 2}, {"content": "I don't know exactly but I assume selenium sees your web element and starts clicking but it doesn't do anything cause it's not \"\"\"loaded\"\"\"\". When it does load, the browser changes but those click were registered and sent via the webpage? \n\n&#x200B;\n\nSee if explicitly asking for a double click changes anything. Double click is part of the Actions module. \n\n [https://www.guru99.com/keyboard-mouse-events-files-webdriver.html](https://www.guru99.com/keyboard-mouse-events-files-webdriver.html)", "id": "f2wekqb", "parent": "t1_f2vz829", "vote": 1}, {"content": "`Total` is a subclass of `A`, `B`, and `C`.  Each of those classes defines an `__init__` method.  When `Total` runs its `__init__` method, Python uses an algorithm called the *Method Resolution Order* to determine which parent class has the `__init__` method it should run.  In a flat multi-inheritance situation this is going to be the leftmost class that defines `__init__`.\n\nWhat `super()` does is it says \"get me the object of the next class up the MRO chain\".  So `super().__init__()` says \"run the init method of the next object up the MRO chain\".\n\nIn `Total`, that chain goes `C`->`B`->`A`.  So initially, it's using the method from `A`.  You want it to also run the version from `B`, so that means `A.__init__` needs to call `super().__init__()`.  To get `C.__init__` to run, you need to call it in `B.__init__`.", "id": "f2xa56v", "parent": "t1_f2x0z6k", "vote": 1}, {"content": "```python\nclass A:\n    def __init__(self):\n        print('One')\n\nclass B(A):\n    def __init__(self):\n        print('Two')\n        super().__init__()\n\nclass C(B):\n    def __init__(self):\n        print('Three')\n        super().__init__()\n\n\n```\n\nshould do it. And if you inherit `Total` as: \n```python\nclass Total (C):\n    pass\n        \nTest = Total()\n```\nthe output will be \n```bash\n    Three\n    Two \n    One\n```\n\nFor more clarity, refer this [SO](https://stackoverflow.com/questions/2399307/how-to-invoke-the-super-constructor-in-python) answer.", "id": "f2xqyya", "parent": "t1_f2x0z6k", "vote": 1}, {"content": "Most likely `import site` is importing this:\n\nhttps://docs.python.org/3.7/library/site\n\nYou could either rename `site.py` to something that doesn't share a name in the standard library, or put it in a folder with an `__init__.py` file and reference it as `foldername.site`.", "id": "f33dadu", "parent": "t1_f32l9sl", "vote": 4}, {"content": "First, the output from `input()` is always a string.  If you want to do math on it, convert it to a `float` or `int` first.\n\nSecond, you have a syntax error in the last print statement.  The period needs to be a comma.\n\n>IDLE keeps giving me a syntax error at the very first >>>\n\nAre you putting `>>>` in your script?  That's just the prompt in the IDLE terminal, it should not be put in a Python script file.", "id": "f33xsng", "parent": "t1_f33x1zs", "vote": 2}, {"content": "    keywords = [\"apple\", \"banana\", \"orange\"]\n    sentence = \"I love to eat oranges! They're better than bananas\"\n    \n    for keyword in keywords:\n        if keyword in sentence:\n            print(\"Found keyword\", keyword)\n\noutput\n\n    >> Found keyword orange\n    >> Found keyword banana", "id": "f3aujl1", "parent": "t1_f3499e7", "vote": 1}, {"content": ">print(name + \"is\", age, \"years old.\")\n\nThe split function returns a list so 'name + \"is\"' is where you are adding the two incompatible objects, but you can \"join\" them back up (the syntax is a bit obscure on first sight, so I will give an example below).\n\n    >>> print(\" \".join(name) + \"is\", age, \"years old.\")\n    my nameis 22 years old.\n    >>> print(\"{} is {} years old\".format(\" \".join(name), age))\n    my name is 22 years old\n    >>> name = [n.capitalize() for n in \"my name\".split()]\n    >>> print(\"{} is {} years old\".format(\" \".join(name), age))\n    My Name is 22 years old\n\nNote how much more readable your code will be using format rather than print(str + str, int, str).", "id": "f2u93lx", "parent": "t1_f2u6emp", "vote": 2}, {"content": "The error is probably from line 6.  You should always tell us which line gets the error.\n\nThe problem does start on line 2.  Run this code:\n\n    name = \"my name\"\n    name = name.split() \n    print(name)\n    >>> ['my', 'name']\n\nSee how the `.split()` method returns a list?  On line 6 you try to join `name` and the string \"is\".  Because `name` is a list the + operator expects a list to the right and would concatenate two lists.  But python won't concatenate a list and a string, hence the error.\n\nIf you want to use either the first or last part of the `name` list in your print statement, use something like `name[0] + \" is\"` (to print the first name).\n\nEdit: grammar fix.", "id": "f2u9apb", "parent": "t1_f2u6emp", "vote": 2}, {"content": "Also, if you're working with Python 3.6, you could use Formatted String Literals (f-strings), something like:\n\n    name=\"my name\"\n    name_list=name.split() \n    yob=1997\n    cy=2019\n    age= cy-yob\n    print(f'{name} is {age} years old.')\n    print(f'{name_list[0][0].upper()}. {name_list[1][0].upper()}. was born in the year {yob}')\n    print(f'In 20 years {name_list[0]} will be {age+20} years old.')\n\nI created the `name_list = name.split()` to easily grab the words in the name, but if you prefer, you can replace all of the `name_list[]` to be `name.split()[]` and it should do the same.", "id": "f2whfgr", "parent": "t1_f2u6emp", "vote": 1}, {"content": "    print(\" \".join(name) + \" is\", age, \"years old.\") \n    print(name [0][0] + \".\" + name[1][0]+\". was born in the year\", yob) \n    print(\"In\", float(20), \"years \" + name[0] + \" will be 42 years old.\")\n\nshould do it.", "id": "f2xvmiy", "parent": "t1_f2u6emp", "vote": 1}, {"content": "You should read about the A\\* Algorithm:\n\n[https://medium.com/@nicholas.w.swift/easy-a-star-pathfinding-7e6689c7f7b2](https://medium.com/@nicholas.w.swift/easy-a-star-pathfinding-7e6689c7f7b2)\n\n&#x200B;\n\nThere is some python code in the article. You would need to transform your coordinates into a list of list that looks like this (0 is where you can go and 1 is a wall), and also change the start and end coordinates.\n\n    maze = [[1, 0, 1, 1, 1, 1],\n            [1, 0, 1, 0, 0, 0],\n            [1, 0, 1, 0, 1, 0],\n            [1, 0, 1, 0, 1, 0],\n            [1, 0, 1, 1, 1, 0],\n            [1, 0, 0, 0, 0, 0],\n            [1, 1, 1, 1, 1, 0]]\n    \n        start = (0, 1)\n        end = (6, 5)", "id": "f2v0mmo", "parent": "t1_f2uzw5i", "vote": 1}, {"content": "I'd imagine it's more based on your opinion, but I've tried VS and a few others, PyCharm has always come out as my favourite. But I think it's more about what you think and your requirements! :)", "id": "f2vgmbs", "parent": "t1_f2v6411", "vote": 1}, {"content": "Do you already have a way to read the yaml files in python?", "id": "f2vt9ex", "parent": "t1_f2vnbds", "vote": 1}, {"content": "Your while and final elif comparisons probably aren't doing what you think they are.  Two comparisons need to be made like this:\n\n    choice != 'q' or choice != 'Q'\n\nThe way this is structured it will always hit the elif for choice == 3, even if you pick 1 or 2.", "id": "f2vz7ha", "parent": "t1_f2vwiyb", "vote": 2}, {"content": "Sounds like a job for beautiful soup. You can look at this thread for other alternatives too \\[ [https://stackoverflow.com/questions/10556048/how-to-extract-tables-from-websites-in-python](https://stackoverflow.com/questions/10556048/how-to-extract-tables-from-websites-in-python) \\] \n\nYou may have to use multiple urls to extract a complete list:  [https://fortune.com/fortune500/2019/search/](https://fortune.com/fortune500/2019/search/) \n\n\\^ this only shows names 100 at a time.", "id": "f2wdgnj", "parent": "t1_f2w752m", "vote": 1}, {"content": "I'm not sure what you mean by \"variable variables\", but if I was going to create a lot of variables like \"Trace1, Trace2, Trace3\"  I'd probably rather put them in a list.  \n\n    traces = list()\n    for feature in features:\n       traces.append(Trace(feature))\n\n(or whatever creating a Trace from a feature looks like; hopefully you get the idea).", "id": "f2whnaz", "parent": "t1_f2wcdu7", "vote": 1}, {"content": "Run the pip program with the -V option to get it to show you what python installation it is installing into then, in your pycharm IDE, run \\`import sys; print(sys.executable)\\`; are they the same?", "id": "f2ye4mg", "parent": "t1_f2y3gyo", "vote": 1}, {"content": "[deleted]", "id": "f2ydc7t", "parent": "t1_f2yazt0", "vote": 1}, {"content": "The other column you are pulling may have a very high cardinality (many unique values) without being indexed by the db making the query much harder for the machine to run.\n\nThis is a complete guess and may not even be worded correctly.", "id": "f2yzds4", "parent": "t1_f2yazt0", "vote": 1}, {"content": "According to https://effbot.org/tkinterbook/scrollbar.htm:\n\n> If the user drags the scrollbar slider, the command is called as callback(\u201cmoveto\u201d, offset), where offset 0.0 means that the slider is in its topmost (or leftmost) position, and offset 1.0 means that it is in its bottommost (or rightmost) position.\n> If the user clicks the arrow buttons, or clicks in the trough, the command is called as callback(\u201cscroll\u201d, step, what). The second argument is either \u201c-1\u201d or \u201c1\u201d depending on the direction, and the third argument is \u201cunits\u201d to scroll lines (or other unit relevant for the scrolled widget), or \u201cpages\u201d to scroll full pages. (command/Command) \n\nSo it returns either 2 or 3 arguments depending on whether it was dragged or the arrows were clicked.  This is a grade-A example of some of TKinter's nastier bits, but you can at least work around that with a default parameter in the callback.\n\nUnfortunately, there just isn't a good single source for tkinter docs. Effbot has some good info, https://tkdocs.com is good (but not complete), and the Python docs themselves are a decent reference.  Sometimes you can get a lot from the Tcl/Tk documentation too.", "id": "f302xvg", "parent": "t1_f2ys5qf", "vote": 1}, {"content": "the problem is that  \n\n    if car1_type:\n\njust checks whether or not car1_type exists\n\nto check what the value is use\n\n    if car1_type == 'new':\n\nanother problem is that when the commision for used cars is being calculated\n    \n    pay += 0.05\n\nthis is just adding 0.05 to pay\n\nto calculate commision use\n    \n    pay += car1_price * 0.05", "id": "f2z0hps", "parent": "t1_f2yv7fl", "vote": 2}, {"content": "Iterate through it til you find a T, then check the edges of the T for other Ts (since u can just use the position of the first T and increase or decrease x or y coord by one), if all edges are Ts then you have it. If not, either continue initial iteration til the next T and repeat. Another way would be to check the other Ts found around a T, and see if they are the middle T.", "id": "f303e8x", "parent": "t1_f301qi1", "vote": 1}, {"content": "- Post your code inside a code block, since indentation matters\n- This can't be the code that was giving you the errors you describe, since you aren't using `break` and appear to have all the necessary colons.  Can you post the code that gave you errors?", "id": "f30bk6q", "parent": "t1_f30b9h2", "vote": 1}, {"content": "* You can't compare the variables 'guess' and 'answer'. Guess is a string and answer is an integer. \n* Your `else` clause shouldn't have an expression.\n* You should use `randint`.\n* You should use a `while` loop.\n* You should validate the user input.\n\nYour code should be something like this:\n\n    import random\n    from os import system\n    \n    # Random integer from 1 to 20.\n    answer = random.randint(1, 20)\n    \n    while True:\n        system(\"clear||cls\") # Clear the terminal window.\n        guess = input(\"Guess: \")\n        \n        # Check if guess is a digit.\n        if not guess.isdigit(): # Only runs if false (guess it not a digit).\n            print(\"You have to guess a number!\\n\")\n            continue \n        \n        if int(guess) == answer:\n            print(\"You guessed it! That's the right number!\")\n            print(\"Would you like to play again? [Y/N]\")\n            choice = input(\"> \")\n    \n            # Only runs if the user doesn't type 'yes' or 'no'.\n            while choice.lower() not in [\"y\", \"yes\", \"n\", \"no\"]: \n                print(\"Invalid input! Please try again!\\n\")\n                choice = input(\"> \")\n            if choice.lower() in ['yes', 'y']:\n                continue\n            else:\n                quit()\n    \n        elif int(guess) < answer:\n            print(\"Guess higher!\\n\")\n        else:\n            print(\"Guess lower!\\n\")\n\nIf the guess is not equal or lower than the answer, then by default it is higher. \n\nThis is only a simple example. You should use functions to make the code cleaner, but since is not a very long program, that should be ok.", "id": "f33kdfg", "parent": "t1_f30b9h2", "vote": 1}, {"content": "    import random\n    \n    answer = random.randrange(1,20)\n    guess = int(input(\"what is your guess : \"))\n    \n    while guess != answer:\n        if guess < answer:\n            print('Higher!')\n        elif guess > answer:\n            print('Lower!')\n        guess = int(input(\"what is your guess : \"))\n    else:\n        print(\"You guessed it!\")\n\nSee if you can figure out what I've done.\n\n* I use a 'while/else' loops to keep repeating code until a condition is met.\n* The condition to stop the loop is that the user's guess has to match the answer\n* While it doesn't match, it checks if it's higher or lower and gives feedback, then asks for another guess\n* Once the user guesses correctly, the while loop is broken and the else statement is triggered.", "id": "f3avbrr", "parent": "t1_f30b9h2", "vote": 1}, {"content": "super() refers to the parent class. super().__init__() calls the __init__() of the parent class explicitly. You want to do this inside the __init__ of the child if you want to add additional code to be executed when instantiating that object.\nSelf as an argument doesn't make sense here because self is always passed implicitly when calling a class method. So the error says \"2 arguments were given\" because you technicallly passed Self twice.", "id": "f30x6mo", "parent": "t1_f30ql95", "vote": 1}, {"content": "You can use os.listdir(path) where path is the path to the folder.  This will list all the files in the folder, then you can just loop through the list and open all the files.\n\n\nimport os, sys\n\npath = \"/var/www/html/\"\n\ndirs = os.listdir( path )\n\nfor file in dirs:\n\n   print file\n\n\nMore info here:\n\nhttps://www.tutorialspoint.com/python/os_listdir.htm", "id": "f318zaz", "parent": "t1_f3128sp", "vote": 3}, {"content": "    import os\n    \n    for dir, subdir, files in os.walk(\"/path/to/folder\"):\n    \n        # This method will recursively go into every folder and find every file\n        for file in files:\n    \n            # Create the full path, as 'file' will just be the file name only\n            # /path/to/folder/ + filename.txt\n            filepath = os.path.join(dir, file) \n            \n            # Use 'with' to auto-close the file once it's done.\n            with open(filepath, \"r\") as f:\n                text = f.read()\n                print(text)", "id": "f3auxvu", "parent": "t1_f3128sp", "vote": 2}, {"content": "Your example won't work. You can't use self inside a classmethod and especially not if it's not given as an argument. If with \"classmethod\" you simply meant a method defined in the class and you add a \"self\" arg and call the method with \"some\\_object.get\\_my\\_object()\" then you will recieve the attribute of the object so in essence the call is equivalent to \"some\\_object.object\\_attribute\".", "id": "f31z6nm", "parent": "t1_f31b386", "vote": 2}, {"content": "you can pass the `cls` argument to class method. Maybe this will achive what you want (although you can use any other argument name, PEP8 states that you should use `cls` for clarity).\n\n    class Person():\n        species = 'Human'\n        \n        def __init__(self, firstname, lastname):\n            self.firstname = firstname\n            self.lastname = lastname\n            \n        @classmethod\n        def get_species(cls):\n            return cls.species\n        \n        def get_firstname(self):\n            return self.firstname\n        \n    \n    george = Person('George', 'Miller')\n    print(f'{george.get_firstname()} is a {Person.get_species()}.')\n\n`cls` in this case is a reference to the `Person` class, so it returns `Person.species` which is \"Human\".\n\nYou can also interchange the `Person.get_species()` with `george.get_species()`, in which case the `cls` works like `self` and it references the instance `george` of the `Person` class. So one could argue that the use of classmethod is not really needed here.", "id": "f32quq4", "parent": "t1_f31b386", "vote": 1}, {"content": "You can use a function and return out of the function at any point.  So if you want to exit when d != 0\n\n    def exit_example():\n        while True:\n            if d==0:\n                print('this is the first time this code runs')\n                ## note that this break is not necessary as\n                ## the else will never be reached if d == 0\n                ##break\n            else:\n                print('this is not the first time this code runs.')\n                ##break\n\n                ## exit everything\n                return", "id": "f31h6t3", "parent": "t1_f31d01a", "vote": 1}, {"content": "I don't understand why the problem is that python uses indentation? How would you do this in other languages? I guess in Java or C you could use labled breaks or gotos but that doesn't have anything to do with braces vs indentation.\n\nAnyways as others have said already you can simply move the whole highest loop you want to break out of into a new function and then use return to exit from that function and call the function where the loop was originally. Usually, it's anyways a good idea to split such your code into a few smaller, readable and maintainable functions.", "id": "f31yy2z", "parent": "t1_f31d01a", "vote": 1}, {"content": "Watch Corey's Schafer videos on Flask. He explains a lot about it. It will be a good start.", "id": "f33fpk4", "parent": "t1_f31v1bl", "vote": 1}, {"content": "Flask is a good choice, it's small and lightweight and you can add to it what you need rather than it telling you what you have to use. You'll also need HTML, CSS, and JavaScript for the UI.\n\nGet a $10 Flask course off of [Udemy.com](https://Udemy.com) and follow it from start to finish on a weekend, you'll be smashing out applications in no time\n\nAlternatively, if you have time check out [FreeCodeCamp.org](https://FreeCodeCamp.org) for web development courses. Then move on to Python/Flask as the backend language", "id": "f3aur4u", "parent": "t1_f31v1bl", "vote": 1}, {"content": "You can specify the encoding when calling open():\nhttps://docs.python.org/3/library/functions.html#open", "id": "f32oe1s", "parent": "t1_f32j9p2", "vote": 3}, {"content": ">  WebDriverWait(driver, {timeoutSeconds})\n\nWhy is `timeoutSeconds` in curly braces here?  That would make it a `set` literal, and it sounds like the function wants a `float`.", "id": "f36lwio", "parent": "t1_f3616cy", "vote": 2}, {"content": "Never mind I'm an idiot, I was in an older version of the tutorial. It's either fixed or was changed between Python 3.3 and now.", "id": "f36nx0w", "parent": "t1_f36a7uu", "vote": 1}, {"content": "You can program python on just about anything that will boot.  I won't get into an OS war, but Python works more or less the same on Windows, macOS, Linux, BSD, or any other OS it supports.\n\nDon't get drawn into the \"<platform> is better for development\" nonsense.  People write code on every major OS.\n\nEDIT: One amendment, I wouldn't recommend ChromeOS for Python development, though I understand it's possible(?).  Otherwise, get whatever OS you're comfortable with.", "id": "f37jkzo", "parent": "t1_f37h2mx", "vote": 3}, {"content": "Looks like you've solved your problem, but have a look into f-strings, they're much better.\n\n&#x200B;\n\n    print(f\"the {q} {b} {f}\")", "id": "f3ardxr", "parent": "t1_f38h9ng", "vote": 2}, {"content": "Apart from missing a closing parenthesis, there is no reason that code shouldn't work correctly on all platforms.  Are you sure that's exactly what's in the file?", "id": "f38v64h", "parent": "t1_f38h9ng", "vote": 1}, {"content": "[deleted]", "id": "f3a0k4i", "parent": "t1_f39ekx8", "vote": 2}, {"content": "[deleted]", "id": "f39zqah", "parent": "t1_f39xq41", "vote": 3}, {"content": "If you want subsequent executions of your program to see changes you made to data in previous executions you must somehow store your data outside your program.  A file is the simplest way.  Your program needs to look for that \"save\" file immediately after it starts.  If the file doesn't exist then the data structure(s) are initialized to an \"empty\" state.  If the file does exist then you get the data from the file and put it into the data structure(s).  When your program terminates it must write the data structure(s) out to the save file.\n\nHow you write your data to the save file is the big question.  It looks like your data will be strings, so you have lots of choices.  The most common modules used for this would be the [pickle](https://pymotw.com/3/pickle/), [json](https://pymotw.com/3/json/) or [csv](https://pymotw.com/3/csv/) modules.  Try using json first as it's probably easier for a beginner than csv.\n\nYou want the choice of saving/restoring your data to be easy to add to your existing code and you want to easily change the format of data you write to the file, so you should write two functions:\n\n    write_data(data, filename)\n    data = read_data(filename)\n\nwhich writes the data object `data` to file `filename` and reads data from file `filename` and returns the data respectively.  You can experiment with and test these functions without putting them into your existing code, if you want.\n\nOnce the functions are tested, call them in your existing code.  At program start you might have code like this:\n\n    import os\n    filename = 'test.dat'    # or whatever name you want\n    if os.path.exists(filename):\n        data = read_data(filename)\n    else:\n        data = ''\n\nNote that we only read a single object from the file, in this case a string, so the \"empty\" data is an empty string.  If your data is more complex, perhaps three lists of strings, then you need to read/write another list containing the three lists.  Unpacking the data read from the file and \"empty\" initialization is a little more complex in that case.  Your code then carries on with its normal operation.\n\nWhen your program wants to stop it must write the changed data to the file using `write_data()` and \"packing\" the data structure(s) into one object in the reverse of the start code.\n\nYour program may need to add a \"quit\" option to the user commands so it knows when to save the data before terminating.  Alternatively, if you don't have a huge amount of data you can automatically save the data to the file every time the user changes something.  This is more robust.", "id": "f3abn25", "parent": "t1_f3a4924", "vote": 3}, {"content": "Please be less vague than\n\n> doesn't like it, \n>\n> errors\n\nShare the full code and error outputs, the more detail the better. If you feel it would clutter the topic with huger amounts of code then just put it on www.pastebin.com and share the link here.", "id": "f3auke1", "parent": "t1_f3a89bl", "vote": 1}, {"content": "You could clone the repository, branch and commit your changes to your local copy, then optionally send a pull request to the maintainers of the original.\n\n>A *fork* is a copy of a repository. Forking a repository allows  you to freely experiment with changes without affecting the original  project.\n\n[https://help.github.com/en/articles/fork-a-repo](https://help.github.com/en/articles/fork-a-repo)  \n\n\n>Creating a \u201cfork\u201d is producing a personal copy of someone else\u2019s project.\n\n[https://guides.github.com/activities/forking/](https://guides.github.com/activities/forking/)", "id": "f3bl36q", "parent": "t1_f3amhei", "vote": 1}, {"content": "Don't you find the list comp more readable? The filter returns a generator expression that could take advantage of lazy or short circuited evaluation, but your example immediately consumes the entire generator, so that potential benefit is lost.\n\nSo, I would say, use filter when you have logic that can take advantage of lazy or short circuited iteration; eg, \"any(filter(check, list))\" compared to \"any(\\[check(i) for i in list\\])'.", "id": "f3bkb5e", "parent": "t1_f3b7c1a", "vote": 3}, {"content": "You are accumulating all the the (non-'attribute' keyed) values into a list, stored under the relevant key. The unpacking of the dict using items() lets you examine each key, value pair in turn; it is a bit more succinct then the equivalent:\n\n        for k in rec:\n            v = rec[k]\n\nThe use of setdefault is perhaps a bit less readable than using a defaultdict(list) where you would just use \"data\\[k\\].append(v)' in the inner loop,", "id": "f3bi5l4", "parent": "t1_f3bayfe", "vote": 1}, {"content": "Hey.\n\nI'm not familiar with the tool you want to interact with, but maybe this will help.\n\nYes, the \"example of create\" from example 1.9 in your link is XML. You can use the python lxml module to generate XML. The fact that the howto shows XML means that you most likely need to feed the API with... XML :) Some APIs will expect absolutely everything, some not. I would recommend that you start with a copy/paste of an XML query that you expect to work, then narrow it down to what's really required, then move on to generating the XML programmatically with lxml.\n\nWhen you're feeding the API with a dict, the API gets confused: it receives a dict (or whatever way it gets unpacked), when it's just really expecting XML data. You need to feed it XML, not as params, but as data, so you'll probably want something like:\n\n`response = requests.post(url, headers=headers, data=XMLdata)`\n\nYou say you get a 200 out of that request, but have you explored further? If you're using ipython to troubleshoot, you can type `response.` then press tab to see the available attributes/methods that you can call. Maybe `response.text` could give you more insight on what's going on.", "id": "f3ganmt", "parent": "t1_f3bk596", "vote": 1}, {"content": ">home\\_data1\\[home\\_data1\\[\"Location\"\\] == \"Fairview\" OR \"Groton\"\\]\n\n        home_data1[home_data1[\"Location\"] in (\"Fairview\", \"Groton\")]", "id": "f3dh38k", "parent": "t1_f3cqzqx", "vote": 1}, {"content": "What about something like this (I've adjusted so that the code runs without your context):\n\n&#x200B;\n\n    from datetime import datetime\n    import requests\n    \n    today = datetime.now().strftime('%Y-%m-%d')\n    params = {'startDate': today,\n              'endDate':   today,\n              'expand':    'schedule.teams,schedule.linescore,schedule.broadcasts'}\n    url = 'https://statsapi.web.nhl.com/api/v1/schedule'\n    \n    games = requests.get(url, params=params).json()['dates'][0]['games']\n    \n    # one way with a filter\n    # liveGames = list(filter(lambda game: game['status']['abstractGameState']=='Live', games))\n    # another way with a list comp\n    liveGames = [game for game in games if game['status']['abstractGameState']=='Live']\n    \n    if liveGames:\n        haveFun!\n\nI took the liberty to re-arrange your url with a separate params dict :)\n\nIs this what you want to achieve?", "id": "f3g7yov", "parent": "t1_f3fr0oq", "vote": 2}, {"content": "If you take do nothing to manage the data coming out of a function, data like your counter variable, you will end up with a counter variable inside the function that is no longer available when the function completes.\n\nIn order to move data out of the function context you need to use the return statement.\n\nAt the end of your compGuessLetter, after you do \"count += 1\", add the line \"return counter\". and\n\nwherever you call it, modify the statement to be \"counter = compGuessLetter(guess, secret, counter, correctGuess)\". Note that any statements after the return will not be run (so make return the last statement in the code block). You would have to do a similar change for the word guess function.\n\nI would move the print statements out of your functions and into the code blocks where you call them.", "id": "f3nyqdw", "parent": "t1_f3mi1qd", "vote": 1}, {"content": "In sql the way to add new data is with the \"insert\" command  and it creates a new \"row\" that matches the existing columns  for the table. In your case you should add one new column to your table for the date, and then each day insert a new record that includes the current date in that date field.\n\nIt is much too disruptive to an sql database to add a new column for each data record.", "id": "f3nwqnj", "parent": "t1_f3n17u9", "vote": 1}, {"content": "Can you provide the exact code?", "id": "f3nns8e", "parent": "t1_f3nh679", "vote": 1}, {"content": ">miles\\_to\\_laps(1.5)\n\nThat is a strange way to input a number, and even though eval would work, don't ignore the risk of side effects from using eval.\n\nA safe way to parse out the float would be to extract all the characters that are digits or '.':\n\n    >>> in_str = 'miles_to_laps(1.5)'\n    >>> float(''.join([c for c in in_str if c.isdigit() or c == '.']))\n    1.5\n    >>>\n\nThis is a bit light on error checking, so I would examine examples of all the different types of input your program is expected to handle before using this, especially if you are expected to detect invalid inputs.", "id": "f3qizqz", "parent": "t1_f3o6y5m", "vote": 1}, {"content": "[deleted]", "id": "f2x33ft", "parent": "t1_f2wz4cm", "vote": 2}, {"content": "Got it. Ok. Thank you!", "id": "f3dkh2x", "parent": "t1_f3dgrtu", "vote": 1}, {"content": "Was going to add RPI, think that would be a great idea if this is all that it's needed for! More cost effective in the long run, too :)", "id": "f2vgsto", "parent": "t1_f2uy5eh", "vote": 2}, {"content": "Btw do you know about cronjobs on Linux?", "id": "f2vhaxb", "parent": "t1_f2uy5eh", "vote": 1}, {"content": "Thank you for the reply, that does make sense.\nI will check this out once I\u2019m back in tomorrow - thank you again.", "id": "f2wrigj", "parent": "t1_f2wekqb", "vote": 1}, {"content": ">In `Total`, that chain goes `C`->`B`->`A`. \n\nIsn't `A, B, C`?\n\nSince inheritance order is from left to right.", "id": "f2xcb18", "parent": "t1_f2xa56v", "vote": 1}, {"content": "For the record, to make things format like in stackoverflow, you need to add spaces at the start of a line (and make sure the previous line ends with enter):\n\nexample   \ntext\n\n \nAdding some spaces at the start of each line:\n\n    example \n    text\n\nThanks for the reply, still don't fully how super works (the SO answer had class name and self as the parenthesis inside super, that was confusing) but in your code it seems to call the class inherited so i understood some of how it works.", "id": "f2xu09m", "parent": "t1_f2xqyya", "vote": 1}, {"content": "BTW, the inheritance hierarchy you used is not the one the OP asked about, but this does what was asked:\n\n    class Total (A, B, C):\n        def __init__(self):\n            A.__init__(self)\n            B.__init__(self)\n            C.__init__(self)\n\nThe answer by jojo here might be of interest:\n\n[https://stackoverflow.com/questions/3277367/how-does-pythons-super-work-with-multiple-inheritance](https://stackoverflow.com/questions/3277367/how-does-pythons-super-work-with-multiple-inheritance)", "id": "f2yfk5m", "parent": "t1_f2xqyya", "vote": 1}, {"content": "Dog! Something so simple, thank you very much!", "id": "f33dfph", "parent": "t1_f33dadu", "vote": 2}, {"content": "[deleted]", "id": "f2zhzqp", "parent": "t1_f2vt9ex", "vote": 1}, {"content": "Lol of course I just added the *or* for 'Q' this morning alongside the *sleep*. Thank you!", "id": "f2w1mz8", "parent": "t1_f2vz7ha", "vote": 2}, {"content": "I also just realized choices 1-3 were all 'if' rather than *elif* -- but I wouldnt' have noticed it if you hadn't pointed out the comparison issue. Thanks again.", "id": "f2w37rn", "parent": "t1_f2vz7ha", "vote": 1}, {"content": "Thank you", "id": "f2wfpef", "parent": "t1_f2wdgnj", "vote": 1}, {"content": "I'll try to clear it up. I have a DataFrame and I want to plot features A, B, C . . Z. To plot these features I need to create a plotly.figure and add traces for each line. I have to filter down the data frame to only show data for each feature. My though was:\n\n    df = pd.read_excel('datasouce.xlsx') \n    for each in df['Feature'].unique(): \n         dfX = df[df['Feature'] == each]\n         traceX = plotly.trace(x = dfX['Feature'], y = dfX['ValueToMeasure'], type = line)\n    ploty.figure(type = scatter, options = [traceA, traceB, ... traceZ] \n    \n\nWhere X is a changing variable based on the feature itself, but I've read that's not ideal in Python.", "id": "f2xg2d1", "parent": "t1_f2whnaz", "vote": 1}, {"content": "Thanks for the reply, pycharm gives me this path:\n\n**C:\\\\Users\\\\Lion\\\\PycharmProjects\\\\test\\\\venv\\\\Scripts\\\\python.exe**\n\nbut pip -V gives me:\n\n**pip 19.2.3 from g:\\\\python\\\\lib\\\\site-packages\\\\pip (python 2.7)**\n\nIs this bad? and how can I change it to be right?", "id": "f311gmz", "parent": "t1_f2ye4mg", "vote": 1}, {"content": "Hmm not sure if I completely understand...the indexes in place for the rows are number 1 through 800 something. Examples of the column names are \"Date\" \"Date Approved\" \"Date Reviewed\", etc... The number of rows in the problematic column have the exact same number of rows as the rest of them. Is that what you're asking for?", "id": "f2z0v54", "parent": "t1_f2ydc7t", "vote": 1}, {"content": "There should only be 7 different values, one for each day of a given week.", "id": "f2z0jhu", "parent": "t1_f2yzds4", "vote": 1}, {"content": "Thanks, I'll look into those. Tkinter seems very powerful, but some things (optimal arguments and call backs in particular) I've had a hard time finding. I'd run across some of those sources, but I'll look into them more.", "id": "f30meyd", "parent": "t1_f302xvg", "vote": 1}, {"content": "Ok I get what you are trying to say. However, I only know how to vary the x coordinate as it is in the same line so i can just use line[i-1] or line[i+1]. How do I vary the y coordinate of the T since i need to check a different line?", "id": "f3047zp", "parent": "t1_f303e8x", "vote": 1}, {"content": "That\u2019s amazing. I\u2019m going to do some more reading and wrap my head around it.", "id": "f31925l", "parent": "t1_f318zaz", "vote": 1}, {"content": "Thank you!", "id": "f3axwh8", "parent": "t1_f3auxvu", "vote": 1}, {"content": "> So if you want to exit when d != 0\n\nIs there a more...global way?\n\nI just randomly wrote that script to ask how to exit multiple while loops in much bigger code.", "id": "f31ill2", "parent": "t1_f31h6t3", "vote": 1}, {"content": "Doh! My eyes went square looking at code this morning - thanks for spotting that!", "id": "f36ts9j", "parent": "t1_f36lwio", "vote": 1}, {"content": "Thanks for the reply! I told him I'm comfortable with windows, so that's likely where I'll end up, and if it becomes something that I enjoy doing, and start to realize some limitations that would be alleviated with a different platform I'd consider a switch at that point.", "id": "f37s9z7", "parent": "t1_f37jkzo", "vote": 1}, {"content": "Thank you! I will definitely look into that. I'm starting to question if the online course I'm taking was not the best choice, as I pulled that line of code straight from one if it's lectures...", "id": "f3awu8k", "parent": "t1_f3ardxr", "vote": 2}, {"content": "I forgot to include the parenthesis in here but it was in the code.\nI did move the parenthesis to make it work though\n\n print('the {q} {b} {f} '.format(f='fox', b='brown', q='quick'))", "id": "f38yn8g", "parent": "t1_f38v64h", "vote": 1}, {"content": "Maybe that explains it because I am also self-taught and only about 2 years of experience. Knowing about it now, I still can't see where I would want to use this feature.", "id": "f3a320h", "parent": "t1_f3a0k4i", "vote": 1}, {"content": "Wow, thank you for the explanation! It's clear now. This works like a charm:\n\n    def est(x):\n        print(x,\"bottles of beer on the wall,\",x,\"bottles of beer.\\nTake one down and pass it around,\",x-1,\"bottles of beer on the wall.\\n\")\n    \n    x=99    \n    while True:\n        if x>1:\n            est(x)\n            x=x-1\n        elif x==1:\n            print(x,\"bottle of beer on the wall,\",x,\"bottle of beer.\\nTake one down and pass it around, no more bottles of beer on the wall. \\n\")\n            x=x-1\n        else:\n            print(\"No more bottles of beer on the wall, no more bottles of beer.\\nGo to the store and buy some more, 99 bottles of beer on the wall. \\n\")\n            break", "id": "f3a2jcl", "parent": "t1_f39zqah", "vote": 2}, {"content": "Thanks for your help. I\u2019m now using postman, getting the same results but at least it\u2019s easier to mess with. It\u2019s almost more frustrating that I\u2019m able to send successful GETs with various parameters, but still unable to make a successful POST. I\u2019m guessing it has to do with this \u201ccreate\u201d parameter in the page I linked to; it seems like they want the literal XML passed into the URL as the value for a parameter named \u201ccreate\u201d, but this does the same thing as putting the xml in the body (200 response, no successful POST). I guess at this point I\u2019ve left the realm of r/learnpython entirely - here\u2019s hoping I dont need to post here again after I get things working in postman!", "id": "f3v3418", "parent": "t1_f3ganmt", "vote": 1}, {"content": "Yep! Any reason for the different request method? I'd be open to doing my requests like that with the params but sometimes I like to `print(url)` so I can check the json in Chrome, not sure how to do that when I'm combining the params in the request", "id": "f3jd210", "parent": "t1_f3g7yov", "vote": 1}, {"content": "I have something like:\n\n     final = [fields['Name'], fields['SKU'], fields['Price'], fields['Date'], url]\n        print(final)\n        # database section\n\n        c.execute('''INSERT INTO results_table VALUES(?, ?, ?, ?, ?)''', final)\n\n\nIf I'm updating, then how am I doing that? Ideally, it should be based on the key of the column, which is today's date, but sqlite in python doesn't go off of keys, it goes off of row position right?", "id": "f3o0dw9", "parent": "t1_f3nwqnj", "vote": 1}, {"content": "bands = cursor.execute('SELECT Band FROM Bandlist WHERE FavLevel = ?', (currentfavlevel, )).fetchall()    \nprint(bands)    \nprint(len(bands))    \n\n\nif bandname not in bands:    \n        print('That band is not on the list!')    \n        return tbmenu()    \nbands.remove(bandname)\n\n\ncursor.execute('DELETE FROM Bandlist WHERE Band = ?', (bandname, ))    \nprint(bands)    \nnumofbands = len(bands)    \ncurrentfavwieght = cursor.execute('SELECT Weight FROM FavLevelWeight WHERE FavLevel = ?', (currentfavlevel, )).fetchall()    \ncurrentfavwieght = int(currentfavwieght[0])    \nnewweight = currentfavwieght / numofbands", "id": "f3o217g", "parent": "t1_f3nns8e", "vote": 1}, {"content": "I have made some more changes to my refactor. Please review again!  If you *really* liked my suggestions, please consider an upvote.", "id": "f2xbrz1", "parent": "t1_f2x33ft", "vote": 1}, {"content": "Are you looking for help? I don't know too much but I've setup a few?", "id": "f2xuod3", "parent": "t1_f2vhaxb", "vote": 1}, {"content": "But the OP also hinted at the option of using `super`. Also, using `super` is more reliable in the context of linear inheritance.", "id": "f2yyxxl", "parent": "t1_f2yfk5m", "vote": 1}, {"content": "I mean if you are already doing it. Matplotlib needs an array of numeric values to work. I don't have any experience with yaml though.", "id": "f2zooef", "parent": "t1_f2zhzqp", "vote": 1}, {"content": "You can simplify a lot of \"if\" tests if you uppercase the users response.  Then you just have to test for \"Q\".", "id": "f2zf6mf", "parent": "t1_f2w37rn", "vote": 1}, {"content": ">     df = pd.read_excel('datasouce.xlsx') \n>     for each in df['Feature'].unique(): \n>          dfX = df[df['Feature'] == each]\n>          traceX = plotly.trace(x = dfX['Feature'], y = dfX['ValueToMeasure'], type = line)\n>     ploty.figure(type = scatter, options = [traceA, traceB, ... traceZ] \n\nI see.  Well, you can't generate variable names like you want, but would this not work?\n    \n    df = pd.read_excel('datasouce.xlsx') \n    traces = list()\n    for each in df['Feature'].unique(): \n         dfX = df[df['Feature'] == each]\n         traces.append(plotly.trace(x = dfX['Feature'], y = dfX['ValueToMeasure'], type = line))\n    ploty.figure(type = scatter, options = traces] \n\nA variable doesn't have to have a name, it just needs a reference.  By using a list you're just trading the reference `traceX` for `trace[X]`.", "id": "f2xgzv0", "parent": "t1_f2xg2d1", "vote": 2}, {"content": "You could re-install using \"C:\\\\Users\\\\Lion\\\\PycharmProjects\\\\test\\\\venv\\\\Scripts\\\\python.exe -m pip install numpy matplotlib**\"** or use the version of pip in the PycharmProjects\\\\test\\\\venv\\\\bin folder. That should be all you need to get pycharm to find the modules. Or follow these instructions use pycharm to do the installations:\n\n[https://www.jetbrains.com/help/pycharm/installing-uninstalling-and-upgrading-packages.html](https://www.jetbrains.com/help/pycharm/installing-uninstalling-and-upgrading-packages.html)\n\nAlternatively, you could alter your pycharm  options to use the python in g:\\\\python\\\\ although V2.7 is getting a bit out of date.\n\n[https://www.jetbrains.com/help/pycharm/configuring-local-python-interpreters.html](https://www.jetbrains.com/help/pycharm/configuring-local-python-interpreters.html)", "id": "f31qmlo", "parent": "t1_f311gmz", "vote": 1}, {"content": "Is your map a long string with multiple lines? If so, you can split of the newline characters, and use a double for loop.\n\n    map = '...'\n    points = map.split('\\n')\n    for x in range(len(points)):\n        for y in range(len(points[x])):\n            # Do check here\n            if points[x][y] == 'T':\n                ...\n\nDo note that x in this case, is the vertical change, aka how far down, and y how far to into a line it is.", "id": "f304xgs", "parent": "t1_f3047zp", "vote": 1}, {"content": "If you need any more help let me know.  I apologize for my sloppy response since I\u2019m on my phone.", "id": "f319usr", "parent": "t1_f31925l", "vote": 2}, {"content": "That is the global way.   You can return/exit any time, any where, and in multiple different places.\n\n>wrote that script to ask how to exit multiple while loops\n\nAnd I used it as general purpose example to exit where ever you want.\n\n    def exit_example():\n        while True:\n            if d==0:\n                print('this is the first time this code runs')\n                ## note that this break is not necessary as\n                ## the else will never be reached if d == 0\n                ##break\n            else:\n                print('this is not the first time this code runs.')\n                ##break\n\n                ## exit everything\n                return\n\n\n        ## second exit condition in same function example\n        while a==0:\n            if c == b and x < y:\n                return", "id": "f31si09", "parent": "t1_f31ill2", "vote": 0}, {"content": "f-strings are a relatively recent addition to Python. So it might just be that the online course hasn't updated it's material yet.", "id": "f3hjefe", "parent": "t1_f3awu8k", "vote": 1}, {"content": "Ah yes, I see that now.  You were calling `.format()` on the return value of `print()`, which is `None`.  That's a hard one to spot.", "id": "f3a8779", "parent": "t1_f38yn8g", "vote": 1}, {"content": "    my_list = [\"apple\", \"banana\", \"orange\"]\n    \n    while my_list:\n        print(my_list.pop())\n    else:\n        print(\"list empty\")\n\nPossible use is to do something with a list and when the list is empty go to an else clause.\n\n    >> apple\n    >> banana\n    >> orange\n    >> list empty", "id": "f3auclo", "parent": "t1_f3a320h", "vote": 1}, {"content": "I find the method I presented cleaner, more readable.\nI can see a few ways to prepare and show the URL in a clean way:\n\n   - This will prepare a URL str from your base URL and params: https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode\n\n   - After you've made the request with something like response = requests.post(...), you can query response.request.url (or something like that).\n\n   - Have a look at this https://stackoverflow.com/questions/18869074/create-url-without-request-execution to achieve request preparation without issuing the actual request.", "id": "f3jzjne", "parent": "t1_f3jd210", "vote": 1}, {"content": "No, sqlite is like any other sql database, so any field value in the table can be a key. It also ensures each row has a unique \"rowid\" pseudo primary key which is convienient but likely not part of the sql standard.\n\nI don't understand the question, but you should be able to use the 'Date' in a where clause (or index, or constraint) like in any other sql database.", "id": "f3o1zut", "parent": "t1_f3o0dw9", "vote": 1}, {"content": "The 'numofbands' variable is where the error message is pointing to. The indentation is good in the IDE just can't seem to get it formatted here.", "id": "f3o28m8", "parent": "t1_f3o217g", "vote": 1}, {"content": "I'm good, thanks :) I just figured that OP might be used to windows scheduler or just infinite loops, and not to cronjobs or Linux in general.", "id": "f2zc1jc", "parent": "t1_f2xuod3", "vote": 1}, {"content": "Ahhhhh yes. Thank you very much, friend!", "id": "f2xj7r0", "parent": "t1_f2xgzv0", "vote": 1}, {"content": "Yes my map is a text file with multiple lines.\n\nI wrote my code in this way\n\n    def find_treasure(mapfile):\n        with open(mapfile) as f:\n            for line in f:\n                for x in range(len(line)):\n                    for y in range(len(line[x])):\n                           if line[x-1] == line[x+1]:\n    \n                           if line[x][y] == 'T':\n                                print(x,y)\n                                break                            \n\nIm still confused about how to write the conditions into if statements", "id": "f306e1k", "parent": "t1_f304xgs", "vote": 1}, {"content": "So... I am painfully stupid and having trouble understanding how to get it to understand the path.  I\u2019m using Windows. Let\u2019s say the directory is C:/Users/Chris_000/Desktop/Python/ExperimentWithFrag.\n\n\nEdit. The program is now doing... something. Apparently if I change path to \u201c.\u201d It does it in the directory where it is and that\u2019s more or less what I needed.", "id": "f372ndr", "parent": "t1_f319usr", "vote": 1}, {"content": "Let\u2019s say my table has 100 rows\n\nColumns are: name, sku, October 1 price, October 2 price, etc. \n\nI want to, each day, insert a new column with today\u2019s date as the column name. And insert today\u2019s actual price into it. For each row.", "id": "f3o280a", "parent": "t1_f3o1zut", "vote": 1}, {"content": "Sorry, no idea why this is an error. The exception hints that \"bands\" at that point is not a list, but rather a function, but in your code \"bands\" isn't redeclared or anything.\n\nWhat is the output if you add a `print(type(bands))` in the line above `numofbands = len(bands)` ?", "id": "f3p0iuq", "parent": "t1_f3o28m8", "vote": 1}, {"content": "Just store the entire file as a list of strings.\n\nLocate position of \"TTT\", say <pos> measuring from the beginning of line. Just check if previous line and next line have \"WTW\" in <pos>", "id": "f35lxw8", "parent": "t1_f306e1k", "vote": 1}, {"content": "I suggest a second table for the date and price, with the a foreign key in the original table to make the one to many relation between (name, sku) and (date, price).\n\n    FOREIGN KEY(name, sku) REFERENCES Trans_Table(name, sku),\n    UNIQUE(name, sku) ON CONFLICT ABORT\n\nYour original table still has 100 rows and Trans\\_Table has 1 row for each (date, price) combination; you insert a new row into Trans\\_Table on a daily basis and use a join to match them up. You only insert into the original table when you need to store a previously unknown (name, sku) record.\n\nEncoding data into column names ala \" October\\_2\\_price\" is not something that databases do, rather you would have a trans\\_date field with the date as a value.\n\n[https://www.tutorialspoint.com/sql/sql-foreign-key.htm](https://www.tutorialspoint.com/sql/sql-foreign-key.htm)", "id": "f3o6688", "parent": "t1_f3o280a", "vote": 1}, {"content": "It seems I've learned the hard way to not reuse variable names. A missing pair of parentheses was obvious once I looked at the right section of code.\n\nThanks for the help!", "id": "f3pelch", "parent": "t1_f3p0iuq", "vote": 1}, {"content": "Thanks a lot guys i finally managed to solve the problem!", "id": "f3a4wzs", "parent": "t1_f35lxw8", "vote": 1}, {"content": "Got it! That helps a ton. Thank you.\n\nI was honestly trying to do some route like this:\n\n            c.execute(\"\"\"UPDATE table_results SET %s = %s WHERE URL = %s\"\"\", (newcolumn_name ,fields['Price'], url))\n\nThe newcolumn_name is the date (10-13-2019) set to the price, where the URL is being used as the key.\n\nWhy wouldn't this approach work?", "id": "f3od57j", "parent": "t1_f3o6688", "vote": 1}, {"content": "The storage for an sql table needs to be entirely reorganized when you add a new column, so you would need to dump and recreate the entire database each time; they call that data migration and you won't want to do that often.", "id": "f3oevme", "parent": "t1_f3od57j", "vote": 1}, {"content": "Got it. Thank you.\n\nSo I'll just reuse the trans_table and rewrite today's prices, then join permanently? To keep the new prices onto the original table? Or am I creating a new table for each day, then joining.", "id": "f3ofpdf", "parent": "t1_f3oevme", "vote": 1}, {"content": "Have two tables and just keep inserting one row per day into the trans table.", "id": "f3opvbx", "parent": "t1_f3ofpdf", "vote": 1}], "link": "https://www.reddit.com/r/learnpython/comments/debq7h/ask_anything_monday_weekly_thread/", "question": {"context": "Welcome to another /r/learnPython weekly \"Ask Anything* Monday\" thread\n\nHere you can ask all the questions that you wanted to ask but didn't feel like making a new thread.\n\n\\* It's primarily intended for simple questions but as long as it's about python it's allowed.\n\nIf you have any suggestions or questions about this thread use the message the moderators button in the sidebar.\n\n**Rules:**\n\n* Don't downvote stuff - instead explain what's wrong with the comment, if it's against the rules \"report\" it and it will be dealt with.\n\n* Don't post stuff that doesn't have absolutely anything to do with python. \n\n* Don't make fun of someone for not knowing something, insult anyone etc - this will result in an immediate ban.\n\nThat's it.", "id": "debq7h", "title": "Ask Anything Monday - Weekly Thread"}, "resource": "Reddit"}, {"answers": [{"content": "Generator expressions.", "id": "iaoc1yd", "parent": "t3_v1rde4", "vote": 188}, {"content": "The standard library pathlib is awesome if you do cross-platform work\n\nThe standard multiprocessing library is super powerful and easy to use for what it offers", "id": "ianzrfp", "parent": "t3_v1rde4", "vote": 537}, {"content": "I think people use decorators frequently but stray away from making their own, but they're just functions with function arguments.", "id": "iao53l4", "parent": "t3_v1rde4", "vote": 330}, {"content": "Using enumerate. Not enough people use enumerate it's faster and gets you both item and index.", "id": "iaodrir", "parent": "t3_v1rde4", "vote": 430}, {"content": "How nice to work with context managers are. Most people probably know them from files (with \u2026. as \u2026) but you can declare the magic methods dunder enter and exit and handle all sorts of setup stuff automagically.", "id": "iaobkrl", "parent": "t3_v1rde4", "vote": 179}, {"content": "Perhaps a bit tangential, but,\n\n`python3 -m http.server`\n\nwill create a simple http server, good for temporary local sharing or for testing purposes.", "id": "iaomu4u", "parent": "t3_v1rde4", "vote": 182}, {"content": "Class constructor arguments. In the same way that you can pass arguments into the object constructor, you can do the same for classes at the point where you define a subclass. It's documented [here](https://docs.python.org/3/reference/datamodel.html?highlight=model#object.__init_subclass__) in the Python docs, and they have a good example of it:\n\n    class Philosopher:\n        def __init_subclass__(cls, /, default_name, **kwargs):\n            super().__init_subclass__(**kwargs)\n            cls.default_name = default_name\n\n    class AustralianPhilosopher(Philosopher, default_name=\"Bruce\"):\n        pass", "id": "iaoaxct", "parent": "t3_v1rde4", "vote": 56}, {"content": "f strings, although they seem pretty common now.", "id": "iap0cz5", "parent": "t3_v1rde4", "vote": 49}, {"content": "[itertools.product](https://docs.python.org/3/library/itertools.html#itertools.product) can replace a double loop\n\n```\nfrom itertools import product\n\na_items = [1,2,3]\nb_items = [4,5,6]\n\nfor a in a_items:\n    for b in b_items:\n        print(f'{a} x {b} = {a*b}')\n\nprint()\n\nfor a,b in product(a_items, b_items):\n    print(f'{a} x {b} = {a*b}')\n```\n\n```\n1 x 4 = 4\n1 x 5 = 5\n1 x 6 = 6\n2 x 4 = 8\n2 x 5 = 10\n2 x 6 = 12\n3 x 4 = 12\n3 x 5 = 15\n3 x 6 = 18\n\n1 x 4 = 4\n1 x 5 = 5\n1 x 6 = 6\n2 x 4 = 8\n2 x 5 = 10\n2 x 6 = 12\n3 x 4 = 12\n3 x 5 = 15\n3 x 6 = 18\n```", "id": "iapmrgi", "parent": "t3_v1rde4", "vote": 47}, {"content": "I think functools is the man of mystery super powerful but most just avoid it ;) \n\nAt least I have thus far", "id": "iao32ng", "parent": "t3_v1rde4", "vote": 71}, {"content": "Walrus operator is still rarely seen and sometimes people forget about powerful features available in collections (e.g., namedtuple, defaultdict, Counter).\n\nOtherwise, a few libraries that people should be aware of for better convenience: addict, click, diskcache, more_itertools, ndjson, pendulum, ratelimit, sqlitedict, tenacity.\n\nEdit1:\nAnother one is to abuse functools.lru_cache to fetch singleton class instances.\n\nEdit2:\nTragically, people often use print instead of setting up proper logging \ud83d\ude14", "id": "iao4duq", "parent": "t3_v1rde4", "vote": 119}, {"content": "For me, it\u2019s type hinting. Python\u2019s type hinting and static type checking tools can be a little awkward to learn at first, but they\u2019re surprisingly powerful, and able to express things that many popular statically typed languages can\u2019t handle.", "id": "iao22mq", "parent": "t3_v1rde4", "vote": 158}, {"content": "As always, relevant xkcd: https://xkcd.com/353/", "id": "iaon6fy", "parent": "t3_v1rde4", "vote": 52}, {"content": "I'll throw in data classes.  They take a bit of setup but after that reduces a lot of boilerplate and makes dealing with classes much simpler (in my opinion).", "id": "iaorvhe", "parent": "t3_v1rde4", "vote": 46}, {"content": "`concurrent.futures.Executor.map` - super simple mapping of tasks into multiple threads or processes and collecting the results back.", "id": "iaoqpbk", "parent": "t3_v1rde4", "vote": 20}, {"content": "Python 3.9+ allows for dictionary merging and assignment using | and |= operators.", "id": "iaoiagl", "parent": "t3_v1rde4", "vote": 52}, {"content": "Partials from functools (and lambda)", "id": "iaox9zs", "parent": "t3_v1rde4", "vote": 16}, {"content": "Else blocks on for loops:\n\n    for result in things_to_search:\n        if not_even_worth_thinking_about(result):\n            continue\n        if is_good(result):\n            break\n    else:\n        raise Exception(\"No good things found\")", "id": "iao8p06", "parent": "t3_v1rde4", "vote": 84}, {"content": "I just learned about \u201craise exception from exception\u201d which seems\u2026 EXCEPTIONALLY sweet ;)", "id": "iaokcw3", "parent": "t3_v1rde4", "vote": 14}, {"content": "Metaclasses. The use case doesn't pop up too much, but when you get the right fit it's kind of incredible.", "id": "iaok5a7", "parent": "t3_v1rde4", "vote": 30}, {"content": "You can just assign pure logic results to a variable like this\n\na = 0 if b is None else 1", "id": "iap4iwm", "parent": "t3_v1rde4", "vote": 26}, {"content": "[import hooks](https://docs.python.org/3/reference/import.html#import-hooks). You can have Python do all kind of crazy things by defining your own import hook.  See https://aroberge.github.io/ideas/docs/html/ for some examples.", "id": "iaopbx2", "parent": "t3_v1rde4", "vote": 13}, {"content": "I would say people should probably do more custom context managers. They're good stuff.", "id": "iaou3cf", "parent": "t3_v1rde4", "vote": 13}, {"content": "You can use the multiplication operator on strings.", "id": "iao49yn", "parent": "t3_v1rde4", "vote": 26}, {"content": "Dictionary comprehension", "id": "iaok9hl", "parent": "t3_v1rde4", "vote": 24}, {"content": "Don\u2019t forget about tqdm", "id": "iapcwzf", "parent": "t3_v1rde4", "vote": 12}, {"content": "I don't have anything to contribute that hasn't already been said, but I wanted to thank OP: this post is great and has turned into a good resource for me learning something new! Thanks!", "id": "iap7veh", "parent": "t3_v1rde4", "vote": 21}, {"content": "`unittest`", "id": "iaomzh2", "parent": "t3_v1rde4", "vote": 28}, {"content": "Non-static class functions can be called through the class object as long as the first argument (being self) is of the same class type. Simple comprehension list approaches can often be replaced with a map instead due to this, i.e. map(str.lower, \\['Hello', 'World'\\]) instead of \\[x.lower() for x in \\['Hello', 'World'\\]\\], or sometimes even map(lambda s: s.lower(), \\['Hello', 'World'\\].", "id": "iaoo4iu", "parent": "t3_v1rde4", "vote": 9}, {"content": "`contextlib.ExitStack`.\n\nIf you're in a situation where you say \"ugh, I can't figure out how to use `with` sanely\", this is probably the answer.", "id": "iaooxm0", "parent": "t3_v1rde4", "vote": 17}, {"content": "Descriptors are a great way to expand attributes in powerful ways.", "id": "iaobezb", "parent": "t3_v1rde4", "vote": 7}, {"content": "itertools\nfunctools", "id": "iaoieyi", "parent": "t3_v1rde4", "vote": 8}, {"content": "`pathlib`. It makes working with files and directories extremely easy, but I have never met anyone who is actually aware of it.", "id": "iaoqpif", "parent": "t3_v1rde4", "vote": 19}, {"content": "In my opinion, how easy it is to write to files gives you some really cool options when you can combine with other cool python libraries like pandas or numpy etc. I've been working on something that can generate entire websites using Python by just opening and writing to js/html/css files. It's so much easier in python than in most (maybe any) other languages that I've come across.", "id": "iao85q2", "parent": "t3_v1rde4", "vote": 6}, {"content": "En Passant", "id": "iao1h8b", "parent": "t3_v1rde4", "vote": 28}, {"content": "Python does support operator overloading using dunder methods but don\u2019t see many people really making use of it.", "id": "iaoixrs", "parent": "t3_v1rde4", "vote": 4}, {"content": "I'm gonna go with generators and generator expressions.  You don't need to build a list (or tuple) when a generator will do.  You can also build generators of generators.  It's super-powerful and makes code really easy to follow, all while being efficient.", "id": "iaoom6j", "parent": "t3_v1rde4", "vote": 7}, {"content": "Generators... So much cool stuff can be done easily with generators", "id": "iap41m7", "parent": "t3_v1rde4", "vote": 4}, {"content": "Using the built in debugger", "id": "iapbsc3", "parent": "t3_v1rde4", "vote": 5}, {"content": "Try/Except except block optional [else statement](https://docs.python.org/3/tutorial/errors.html) and [loops optional else](https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops). I haven't used them much, but they are handy:\n\n```\nfrom pathlib import Path\n\n# Construct a folder with a unique name. If the name exists try adding numbers up to 25\n\ndef construct_non_duplicate_folder(root:Path, target:str) -> Path:\n    folder = root / Path(target)\n\n    for i in range(25):\n\n        try:\n            folder.mkdir(parents=True, exist_ok=False)\n\n        except FileExistsError as fe:\n            folder = root / Path(f'{target} ({i})')\n\n        else:\n            # no exception occurred, the folder doesn't exist.\n            break\n\n    else:\n        # we looped through all 25 attempts\n        raise FileExistsError(f'The folder {folder} exists!')\n\n\n    return folder\n```", "id": "iapn6ir", "parent": "t3_v1rde4", "vote": 4}, {"content": "Metaclasses. When you need a class to get a certain kind of treatment when it is declared rather than instantiated.", "id": "iao718x", "parent": "t3_v1rde4", "vote": 13}, {"content": "I don't know what people know about or don't know about, but dictionaries are amazing.", "id": "iaot48o", "parent": "t3_v1rde4", "vote": 4}, {"content": "Itertools (standard library) and the more-itertools package. Super helpful when doing any kind of combinatorial computations (evaluating function or ml model on some parameter grid).\n\nThe always_iterable function in the package is much cleaner than using the isinstance(...) built-in imo.", "id": "iap4oq8", "parent": "t3_v1rde4", "vote": 4}, {"content": "functools' singledispatch decorator. So much power", "id": "iapi1pk", "parent": "t3_v1rde4", "vote": 3}, {"content": "Post mortem debugging in interactive mode with `import pdb; pdb.pm()`", "id": "iar91ab", "parent": "t3_v1rde4", "vote": 3}, {"content": "The `.__subclassess__()` attribute on a class.  It lets you do neat stuff like say \"for all the subclasses of me, see which one claims to be able to do X and return an instance of it\":\n\n    class Person:\n        @classmethod\n        def build(cls, skill):\n            for klass in cls.__subclasses__():\n                if skill in klass.SKILLS:\n                    return klass()\n            raise NoClassForSkillError()\n\n    class Teacher(Person):\n        SKILLS = (\"teaching\",)\n\n    class Hacker(Person):\n        SKILLS = (\"programming\", \"back pain\")\n\nThe test for skill can be much more complicated of course, and the classes can be extended in any way you like.", "id": "iareqvf", "parent": "t3_v1rde4", "vote": 3}, {"content": "- from functools import partials\n\n- from itertools import groupby\n\n- from collections import defaultdict\n\n    - defaultdict(lambda: defaultdict(int))", "id": "iapdrus", "parent": "t3_v1rde4", "vote": 3}, {"content": "import importlib as imp\n\nimp.reload(<myproject>).\n\nrefreshes from the terminal when you need to make changes to a file and then save to test out.", "id": "iapsu9x", "parent": "t3_v1rde4", "vote": 3}, {"content": "Type hints + Pydantic is a great mix.", "id": "iaqobsu", "parent": "t3_v1rde4", "vote": 3}, {"content": "They have the ability to swallow a human whole!", "id": "iaqq7uu", "parent": "t3_v1rde4", "vote": 3}, {"content": "You can put a else on a for loop", "id": "iaqrz5o", "parent": "t3_v1rde4", "vote": 3}, {"content": "I would say pyinstaller, cython, and uuid are under-rated packages that don't get enough attention.", "id": "iaqs09u", "parent": "t3_v1rde4", "vote": 3}, {"content": "Honestly this may seem trivial but f strings. What a life changer for someone that writes a lot of one off scripts", "id": "iaqu4qg", "parent": "t3_v1rde4", "vote": 3}, {"content": "for/else statement. \n\nExample:\n\n```python\n\n    for i, foo in enumerate(some_list):\n        if str(foo) == \u201cbar\u201d:\n            break\n    else:\n         raise ValueError(\u201ccouldn\u2019t find bar\u201d)\n\n     print(\u201cindex:\u201d, i)\n       \n```", "id": "iar3vrn", "parent": "t3_v1rde4", "vote": 3}, {"content": "asynchronous programming with asyncio\n\nthe performance boost over doing IO serially (esp anything over the network) is insane", "id": "iarxzct", "parent": "t3_v1rde4", "vote": 3}, {"content": "    class Foo:                           # in some third-party lib\n        \u2026\n    \n    class Bar(Foo):                      # our code\n        def our_new_method(self, \u2026): \u2026\n    \n    obj = some_thid_party_lib.get_foo()  # can't change the way we get this object, but\u2026\n    obj.__class__ = Bar                  # we can still make it into our better version\n    type(obj)                            # \u2192 Bar\n    obj.our_new_method()                 # works!", "id": "iaowc7p", "parent": "t3_v1rde4", "vote": 6}, {"content": "Template", "id": "iaopmcw", "parent": "t3_v1rde4", "vote": 2}, {"content": "Learning how to use generators was a game changer for me", "id": "iapc6xo", "parent": "t3_v1rde4", "vote": 2}, {"content": "Making your own context managers", "id": "iapu3ar", "parent": "t3_v1rde4", "vote": 2}, {"content": "Kind of an unorthodox feature but I've always felt that the ability to write C/C++ or Rust functions to just speed up certain sections of code is really useful.", "id": "iaqfpow", "parent": "t3_v1rde4", "vote": 2}, {"content": "Docstrings. Fucking docstrings.", "id": "iaqx3hg", "parent": "t3_v1rde4", "vote": 2}, {"content": "from functools import cache", "id": "iar6qi1", "parent": "t3_v1rde4", "vote": 2}, {"content": "frozenset is fun. It is the same to set as tuple is to list", "id": "iar7132", "parent": "t3_v1rde4", "vote": 2}, {"content": "I'm sure some people will say abstract classes but it confuses the funk out of me", "id": "iarpo1r", "parent": "t3_v1rde4", "vote": 2}, {"content": "You can use else with for and while loops. And with try too\n\nWorth a Google or someone to write a full answer on this. Right now I'm on mobile and don't want to give misinformation on the rules and syntax", "id": "iapby2n", "parent": "t3_v1rde4", "vote": 2}, {"content": "Print", "id": "iapgik3", "parent": "t3_v1rde4", "vote": 2}, {"content": "Gravitational constant alteration.", "id": "iaoemdg", "parent": "t3_v1rde4", "vote": 3}, {"content": "metaprogramming... metaclasses, in particular", "id": "iap128v", "parent": "t3_v1rde4", "vote": 1}, {"content": "[deleted]", "id": "ianzjxx", "parent": "t3_v1rde4", "vote": 2}, {"content": "List comprehension", "id": "iaolsc9", "parent": "t3_v1rde4", "vote": 1}, {"content": "The CAPI.  \n\nYou can directly integrate Python into any other program, or add unbelievable speed to any python script.  Its simple, very robust, and changes little from version to version.", "id": "iaos2dm", "parent": "t3_v1rde4", "vote": 1}, {"content": "turtle library", "id": "ianz404", "parent": "t3_v1rde4", "vote": 0}, {"content": "FastAPI/pydantic for creating REST APIs ... After using flask and Django, FastAPI is an extremely pleasant developer experience", "id": "iapjp8e", "parent": "t3_v1rde4", "vote": 1}, {"content": "unittest has the side_effect argument which can let you do some very cool things. I\u2019ve found it useful when I want to maintain state between repeated function calls in a unit test, or want to return a different value on each call. Or both.", "id": "iap3f79", "parent": "t3_v1rde4", "vote": 0}, {"content": "I know context managers have taken a lot of wind out of the sails but try/finally is really useful!\n\n    try:\n        make_a_mess()\n    finally:\n        cleanup()\n\nSometimes it is nice to have this inline without having to use a context manager.", "id": "iaq1boj", "parent": "t3_v1rde4", "vote": 0}, {"content": "plt.ion()  \n\ngreat to learn matplotlib (use the shell)", "id": "iaojtm4", "parent": "t3_v1rde4", "vote": 1}, {"content": "I think they're pretty commonly used, but try/except/else/finally can be quite useful, and also the walrus operator.", "id": "iaoumcf", "parent": "t3_v1rde4", "vote": 1}, {"content": "unittest has the side_effect argument which can let you do some very cool things. I\u2019ve found it useful when I want to maintain state between repeated function calls in a unit test, or want to return a different value on each call. Or both.", "id": "iap3ecg", "parent": "t3_v1rde4", "vote": 1}, {"content": "Although i suppose it isnt underrated or complex, something as simple as eval() will always give me a little smile", "id": "iap6n1b", "parent": "t3_v1rde4", "vote": 1}, {"content": "itertools and more-itertools in my opinion, the latter especially I never see. It helps reduce boilerplate code a ton from my experience", "id": "iap7o2p", "parent": "t3_v1rde4", "vote": 1}, {"content": "from itertools import *", "id": "iap86rl", "parent": "t3_v1rde4", "vote": 1}, {"content": "Calling`yaml.safe_load`on env vars just to replace poor deprecated `distutils.util.strtobool`", "id": "iap9v5a", "parent": "t3_v1rde4", "vote": 1}, {"content": "Lambda functions (yeah yeah) specifically, diverging behavior for a variable allowed to have a static value or be a lambda function that outputs what you would want based on some rule\n\nEx. If __call__ in dir(vari): vari = vari()\n\nThings like that allow flexibility with variables such as rules about deriving filenames vs overwriting them etc which are REALLY helpful when wrapping", "id": "iapa7dy", "parent": "t3_v1rde4", "vote": 1}, {"content": "Enumerate and list/dict comprehension", "id": "iapal3d", "parent": "t3_v1rde4", "vote": 1}, {"content": "Many people use the `socket` module for networking. Consider using `scapy`, in my opinion, it is much easier.", "id": "iapamvh", "parent": "t3_v1rde4", "vote": 1}, {"content": "Type() with a third argument is always a fun one to play with", "id": "iapj55x", "parent": "t3_v1rde4", "vote": 1}, {"content": "Jesus, I write python every other day, and I have literally no idea what any of all this is.", "id": "iapkyiw", "parent": "t3_v1rde4", "vote": 1}, {"content": "\\+1 for pdb pythons inbuilt debugger . its OP once you know how to use it", "id": "iapofhe", "parent": "t3_v1rde4", "vote": 1}, {"content": "* Context managers\n* multiprocessing.Queue, multiprocessing.Event, multiprocessing.Condition\n* `__new__` method as constructors, which returns the object on which the `__init__` method is called after that.\n* using `sum(1 for _ in some_iterable)` instead of `len(list(some_iterable))` to count the number of items in large Iterable objects.\n* All the `yield` usages. At least the basic usage plus the `yield from x` is very powerful when it comes to making the program memory-efficient when working with lots of stuff.", "id": "iappagr", "parent": "t3_v1rde4", "vote": 1}, {"content": "docstrings and doctest. You can display docstrings from a function/module/class by using help(item\\_name) and doctest you can write very quick unit tests in the form of code usage examples inside the docstring.", "id": "iaps6td", "parent": "t3_v1rde4", "vote": 1}, {"content": "Where's the itertools evangelist guy, I know they're going to be here spreading the gospel.", "id": "iapwkbd", "parent": "t3_v1rde4", "vote": 1}, {"content": "No love for decorators? Common everyone! Apart from the already great answers, think decorators are pretty nice too. I first used it when I created a @timer decorator which can be used as so:\n\n`@timer`\n\n`def func():`\n\n`      sleep(10)`\n\n`func()`\n\nBut once you learn how to create decorators with arguments, you can create pretty crazy and creative stuff.\n\nAlso, worth mentioning unpacking arguments with `*args` and `**qwargs`. I think one will feel like a god once they master this and start applying it where necessary. This also applies to lists and dictionaries, so many opportunities to apply this trick in very elegant ways.", "id": "iapybzm", "parent": "t3_v1rde4", "vote": 1}, {"content": "enumerate and built in virtual environment (venv)", "id": "iapyyqt", "parent": "t3_v1rde4", "vote": 1}, {"content": "Doctests!  They won\u2019t cover every testing need but they\u2019re such a great way of encouraging you to write modular code", "id": "iapzg2g", "parent": "t3_v1rde4", "vote": 1}, {"content": "If u have tips for text based games using Python please respond it would help so much", "id": "iaq0ct9", "parent": "t3_v1rde4", "vote": 1}, {"content": "Dataclasses, itertools, functools", "id": "iaq2kxk", "parent": "t3_v1rde4", "vote": 1}, {"content": "Numpy is C optimized so you can use the Threading module to spin up multiple cores, not just threads. Usually, you have to use the multiprocessing module.", "id": "iaq2rna", "parent": "t3_v1rde4", "vote": 1}, {"content": "Decorators ftw", "id": "iaq7ant", "parent": "t3_v1rde4", "vote": 1}, {"content": "`python -m json.tool` to reformat JSON.", "id": "iaq8hob", "parent": "t3_v1rde4", "vote": 1}, {"content": "`vars(object)`\n\nTakes in an object and returns a dict of key --> value pairs with the attributes and their values. Handy for fast JSON serialization with simple apps.\n\nFor example:\n```python\nfrom dataclasses import dataclass\n@dataclass\nclass Animal:\n    genus: str\n    age:int\n    species: str\n\nvars(Animal(\"yeet\", 21, \"A frog I guess\")) # {'genus': 'yeet', 'age': 21, 'species': 'A frog I guess'}\n```", "id": "iaq8ie1", "parent": "t3_v1rde4", "vote": 1}, {"content": "coroutines", "id": "iaqbkkq", "parent": "t3_v1rde4", "vote": 1}, {"content": "Agree witch pathlib, add sets", "id": "iaqe3uq", "parent": "t3_v1rde4", "vote": 1}, {"content": "You\u2019d be shocked at the amount of beginners who don\u2019t know about dictionaries", "id": "iaqeu07", "parent": "t3_v1rde4", "vote": 1}, {"content": "Numexpr", "id": "iaqg7sd", "parent": "t3_v1rde4", "vote": 1}, {"content": "functools and itertools. I just love them.", "id": "iaqh2s8", "parent": "t3_v1rde4", "vote": 1}, {"content": "The sentinel argument of the `iter` function. \n\n    for chunk in iter(functools.partial(f.read, 1024), b''):\n        # reads file in chunks until exhausted", "id": "iaqhndf", "parent": "t3_v1rde4", "vote": 1}, {"content": "multiple dispatch is my newest baby.\n\nusecase: I have a library that can apply an operation on many possible different objects. The implementation is different on all of them.\n\nRather than creating a new method for all objects, I can have this single function that does something unique depending on the type of input.\n\nAll implementations of that same operation can be put at a single place, rather that scattered in many separate files. All implementations are also force yo keep the same syntax.", "id": "iaqjvd8", "parent": "t3_v1rde4", "vote": 1}, {"content": "NewType for readable type hints", "id": "iaql5qn", "parent": "t3_v1rde4", "vote": 1}, {"content": "Mock, MagicMock, and Patch. \n\nThey make unit testing needlessly complicated code a lot easier. Far easier than in any compiled, strongly typed language that I\u2019ve had pleasure to use.", "id": "iaqn7a2", "parent": "t3_v1rde4", "vote": 1}, {"content": "contextlib.supress", "id": "iaqqbxw", "parent": "t3_v1rde4", "vote": 1}, {"content": "Pass a temporary union of two dicts as an argument for some function\n\n`some_function(dict(dictA, **dictB))`\n\n- This doesn't modify the dictA and/or the dictB\n\nAlso, you can do something like:\n`some_function(dict(dictA, extra_key_1=1, extra_key_2=2))`", "id": "iaqrecf", "parent": "t3_v1rde4", "vote": 1}, {"content": "magic-wormhole\n\nSay you want to send a file from one place to another, you do \u2018wormhole send myfile.mp4\u2019 and you will get a command, copy and past that in the other terminal and you\u2019ll get the file.", "id": "iaqteji", "parent": "t3_v1rde4", "vote": 1}, {"content": "F strings", "id": "iaqwppw", "parent": "t3_v1rde4", "vote": 1}, {"content": "Callables.", "id": "iaqxhgw", "parent": "t3_v1rde4", "vote": 1}, {"content": "`contextlib.ExitStack`", "id": "iar0e7b", "parent": "t3_v1rde4", "vote": 1}, {"content": "defaultdict is great and I use it quite a bit. Also the enum library is slick.", "id": "iar3gx5", "parent": "t3_v1rde4", "vote": 1}, {"content": "Installing packages as editable is dope.  Let's you edit your files in a library and have take immediate effect to anything that takes it as a dependency. Developing modules is much less painful this way.", "id": "iar42lp", "parent": "t3_v1rde4", "vote": 1}, {"content": "You people all talking this fancy stuff. I liked\n\na, b = b, a", "id": "iar48lj", "parent": "t3_v1rde4", "vote": 1}, {"content": "frozenset is fun. It is the same to set as tuple is to list", "id": "iar7051", "parent": "t3_v1rde4", "vote": 1}, {"content": "List comprehensions. I look at a lot of code that's a for loop for appending 1 thing. List comprehensions look so much cleaner in my opinion and are a major time saver if you know how to use them.", "id": "iaraxpc", "parent": "t3_v1rde4", "vote": 1}, {"content": "return x if y else z ?", "id": "iarb5sc", "parent": "t3_v1rde4", "vote": 1}, {"content": "Shinty Six", "id": "iargc68", "parent": "t3_v1rde4", "vote": 1}, {"content": "Lambda's", "id": "iarizwd", "parent": "t3_v1rde4", "vote": 1}, {"content": "There is this cool function that goes like this:   \n\n> print(\"Hello is me debug printyboi\")", "id": "iarpt08", "parent": "t3_v1rde4", "vote": 1}, {"content": "Not powerful but useful for debugging: That you can do step-by-step on an iterable writing : `p= iter([4, 5, 6])` and then getting the elements by repeating  `next(p)`", "id": "iart70b", "parent": "t3_v1rde4", "vote": 1}, {"content": "I'm noobish python amateur but I recently discovered threading. \nMy shit is so fast now !", "id": "ias3owv", "parent": "t3_v1rde4", "vote": 1}, {"content": "C bindings.", "id": "iasc6em", "parent": "t3_v1rde4", "vote": 1}, {"content": "naming conventions.", "id": "iasdfuc", "parent": "t3_v1rde4", "vote": 1}, {"content": "Metaprogramming\n\n  \n\n\nPython is deeply introspective and allows you to dynamically do pretty much anything.\n\n  \n\n\nI shared an example here one time on how to overwrite setter attributes to find initial logic conditions that would satisfy and desired output values by programming the logic gates into the setter attribute and then recursing up the logic tree.", "id": "iasju98", "parent": "t3_v1rde4", "vote": 1}, {"content": "So there are list comprehensions, but how many people know that you can create dict comprehensions?\n\n`var = {a: b for a,b in (('one', 1), ('two', 2), ('three', 3)) }`", "id": "iayc5ju", "parent": "t3_v1rde4", "vote": 1}, {"content": "Everything is an object. Decorators are in that wheelhouse, but not the whole concept. Not that it\u2019s a good idea, but you can even make modules dynamically.", "id": "ib05jkj", "parent": "t3_v1rde4", "vote": 1}, {"content": "Zip\n\nfor num1, num2 in zip(list1, list2):\n   print(num1 + num2)\n\nIt iterates through two objects at once and even if their sizes don't match, it will stop at the last iteration of the smallest one instead of raising an error.", "id": "ibcvu1k", "parent": "t3_v1rde4", "vote": 1}, {"content": "IMO generators are one of the best features in python. You can do some pretty crazy stuff with it, while being a relatively simple mechanism.", "id": "iapq6vz", "parent": "t1_iaoc1yd", "vote": 54}, {"content": "Was gonna say this. List comprehension is pretty common but you can also create your own generators!", "id": "iaoy5kl", "parent": "t1_iaoc1yd", "vote": 39}, {"content": "Yes, absolutely! Any sort of lazy iterator in general is phenomenal. A lot of people don\u2019t realize that \u201cgenerator comprehension\u201d can often save them time and memory over list comprehension - and they don't come up much in tutorials or anything, so a lot of people don't even know how to use them.\n\nQuick example:\n\n```\n# Don't do this! It will store the whole list in memory\n# Sometimes this is needed but if you only need values once (or don't need all\n# values), there's a better option\nexpr = [intensive_operation(x) for x in range(really_big_number)]\nfor item in expr:\n    ...\n\n# Do this instead! Nothing is saved to memory, and you don't waste any\n# time making a list you'll just throw away\n# Imagine if your function exits after the first 10 items - you'd have wasted\n# really_big_number - 10 calls to intensive_operation with the list option\nexpr = (intensive_operation(x) for x in range(really_big_number))\nfor item in expr:\n    ...\n```\n\nAlso - generator expressions are the correct replacement for `map()` and `filter()`, which the creator of Python wanted to remove. Examples:\n\n```\n# Equivalent expressions; second option avoids extra lambda function call\n# next() just gets the next (in this case first) item in an iterator, if you're unaware\n# Timeit shows second option (no filter) is a whopping 36% faster on my computer\n# And is arguably somewhat more readable\nnext(filter(lambda x: x % 1000 == 0, range(1, 10000)))\nnext(x for x in range(1, 10000) if x % 1000 == 0)\n\n# Equivalent expressions: second option uses generator to avoid lambda calls\n# Not as impressive as with filter, but second option is still 19% faster for me\n# Also arguably more readable\nlist(map(lambda x: x * x, range(10000)))\nlist(x * x for x in range(10000))\n```\n\nExtra context for anyone confused - generators are \"lazy\", meaning they don't calculate their result before they are requested. Perfect for when you use the values once then throw them away, or if you don't iterate through the whole thing. They can be iterated through just like a list with `for x in ...`, or by using `islice` to get a portion of it (as you can with any iterable, but you can't subscript generators so it's needed here). You can also chain generators, which is super cool. Example:\n\n```\nexpr1 = (a**4 for a in range(10000000000))\nexpr2 = (b + 2000 for b in expr1 if b > 8000)\nexpr3 = (f\"Result: {c}\" for c in expr2)\nlist(itertools.islice(expr3, 2, 6))\n# Returns:\n# ['Result: 22736', 'Result: 30561', 'Result: 40416', 'Result: 52625']\n```\n\nTry that and see how it's nice and instant. Then try it again replacing the generator `(...)` with list's `[...]` and notice how it takes a LONG time calculating all values for `10000000000` that you don't need (or watch it for 10 seconds then quit the program, nobody has time for that).\n\n_edit: added examples_", "id": "iaqtsxb", "parent": "t1_iaoc1yd", "vote": 39}, {"content": "Yes!  Anytime I have a complicated conditional looping (that's not easy to do with a list comprehension), I always feel better about the code by creating a simple generator.  e.g.  Looping over the indices of substring matches, etc.\n\nOther examples:  One time I was looping over (Fermat) pseudoprimes ( where the end-case wasn't clear).  A generator was the perfect solution.", "id": "iaqbsky", "parent": "t1_iaoc1yd", "vote": 1}, {"content": "I gotta say I disagree. Generators just feel like a cute way to write bad code. Like low effort recursion. I realize generators act like a list/array/iterable but without the memory overhead. But, that is what almost everything does. If a generator is like a pointer, but to code rather than memory what's the point.", "id": "iasc9d4", "parent": "t1_iaoc1yd", "vote": 1}, {"content": "Path.write_bytes() == love", "id": "iap11ok", "parent": "t1_ianzrfp", "vote": 65}, {"content": "Yeah, the multiprocessor works best on Linux because all your objects can be used in each processor, but windows you can't...it's like starting several blank-slate shells. \n\nI had a tough time getting them to be saved into pickles and then getting them unpickled in each processor to be used. This is what was suggested online, but I never got it to work.", "id": "iap4yki", "parent": "t1_ianzrfp", "vote": 15}, {"content": "I agree that multiprocessing can be great. I made a useful and simple parallel map tool: [parmapper](https://github.com/Jwink3101/parmapper)\n\nThe problem with it is that how it works and how useful it is depends heavily on whether you can use `fork` mode or `spawn` mode. The `fork` mode is super, super, useful since you get a (for all intents and purposes) read-only copy of the current state. Spawn mode requires thinking about it from the start and coding/designing appropriately...if it's even possible", "id": "iao8fes", "parent": "t1_ianzrfp", "vote": 56}, {"content": "Also https://cloudpathlib.drivendata.org/stable/", "id": "iap8taq", "parent": "t1_ianzrfp", "vote": 9}, {"content": "I think pathlib still needs a shitty hack that I cant seem to find in my code right now... you need to do `if sys.os == \"win32\" ; unixpath = windowspath` or something like that to avoid an edge case", "id": "iao0xh3", "parent": "t1_ianzrfp", "vote": 17}, {"content": "It is very powerful, but how they delegate OS specific subclasses using a custom opener and modifying the __new__ dunder bugged me so much when trying to implement custom classes.", "id": "iapvbcf", "parent": "t1_ianzrfp", "vote": 1}, {"content": "Genrally, the fact that functions are first-class objects is not as wide-used as it should", "id": "iaod0pr", "parent": "t1_iao53l4", "vote": 81}, {"content": "They can also be classes! Not that I've ever found a use case for a class-based decorator. Usually the closure you create over the decorated function inside the decorator function is sufficient to hold any needed state.", "id": "iaocnvm", "parent": "t1_iao53l4", "vote": 64}, {"content": "The syntax for decorators is a little hard to understand (even more so for decorator factories), which is, IMO what stops them being used more.", "id": "iaok51d", "parent": "t1_iao53l4", "vote": 41}, {"content": "Decorators and context managers: seem magical, actually practical.", "id": "iapz9dr", "parent": "t1_iao53l4", "vote": 9}, {"content": "In some cases, it's even easier to use `contextlib.contextmanager`:\n\n```python\nfrom contextlib import contextmanager\n\n@contextmanager\ndef print_afterwards(msg):\n    try:\n        yield\n    finally:\n        print(msg)\n\n# \u201cnormal\u201d context manager usage\ndef do_a():\n    with print_afterwards(\"A done.\"):\n        ...\n\n# can also be used as a decorator\n@print_afterwards(\"B done.\")\ndef do_b():\n    ...\n```", "id": "iaqojje", "parent": "t1_iao53l4", "vote": 1}, {"content": "Also even more rarely known feature: enumerate has \"start\" argument. Especially useful for displaying things for non-programmers (by having start=1).", "id": "iaom12p", "parent": "t1_iaodrir", "vote": 132}, {"content": "I'm an old programmer just learning python finally and enumerate was one of the first things I discovered that saved me a lot of headaches. I'm about 2 weeks in but it's a pretty easy language to pick up. I was expecting it to take at least a week to figure out how to connect to remote databases but that turned out to be a breeze, like almost everything else has been so far. It's a fun language. Very powerful. I probably won't be doing much in C++ anymore.", "id": "iaoffh6", "parent": "t1_iaodrir", "vote": 89}, {"content": "Everywhere I go, I seek the power of enumerate.", "id": "iaowmrt", "parent": "t1_iaodrir", "vote": 14}, {"content": "I just found this out the other day. Well...it at least clicked in my mind finally.", "id": "iapsy23", "parent": "t1_iaodrir", "vote": 1}, {"content": "Honestly I\u2019m surprised anyone who needs that task manages without it. What do they do, i+=1 in the loop like they\u2019re writing C or something?", "id": "iaqzc6o", "parent": "t1_iaodrir", "vote": 1}, {"content": "I rarely find the need for it. I used it a lot when I was newer to Python, but now, I find that it's not as useful as I thought it was. Still great when it's relevant though.", "id": "iav49t2", "parent": "t1_iaodrir", "vote": 1}, {"content": "I love `enumerate`, I even wrote a whole [article about `enumerate`](https://mathspp.com/blog/pydonts/enumerate-me) teaching all about it :)", "id": "ibcjhwi", "parent": "t1_iaodrir", "vote": 1}, {"content": "Even better, for simpler things at least, is the `contextlib.contextmanager` decorator. Instead of creating a class with enter and exit, you decorate a function that does setup, yields the thing, then teardown. Super compact.", "id": "iaokyas", "parent": "t1_iaobkrl", "vote": 90}, {"content": "Very nice for database connections too, and other session-based code.", "id": "iaod8we", "parent": "t1_iaobkrl", "vote": 27}, {"content": "There's also a helper for turning a generator function into a context manager. Makes trivial contextmanagers trivial to write.", "id": "iaog4x2", "parent": "t1_iaobkrl", "vote": 3}, {"content": "What are some use cases from your life that you have used these?  Whenever I want to spend time learning context managers I can never see anything beyond the standard uses (files, connections). Is there more to it?", "id": "iapo130", "parent": "t1_iaobkrl", "vote": 5}, {"content": "This would be my answer as well. Context managers are awesome for any classes that need to do setup or cleanup work.", "id": "iaovkqr", "parent": "t1_iaobkrl", "vote": 1}, {"content": "I love doing this for transferring files to computers without SSH", "id": "iapecfk", "parent": "t1_iaomu4u", "vote": 37}, {"content": "I use it all the time, it\u2019s awesome", "id": "iapl2yr", "parent": "t1_iaomu4u", "vote": 3}, {"content": "Yeah I use this so much for debugging/testing", "id": "iapq1u1", "parent": "t1_iaomu4u", "vote": 2}, {"content": "It's great to spoof license servers in conjunction with a hosts file entry.", "id": "iaq15g2", "parent": "t1_iaomu4u", "vote": 2}, {"content": "Whoa, this is cool", "id": "iapmak0", "parent": "t1_iaomu4u", "vote": 1}, {"content": "What can you do with this? I just started and called GET on it and it displayed a list of files.", "id": "iapnyjn", "parent": "t1_iaomu4u", "vote": 1}, {"content": "When I\u2019ve been working on recent static HTML projects (like PWA stuff), I\u2019ve been using this instead of something from NPM. It works exactly as I\u2019d expect it to, and I trust the source", "id": "iaqut1n", "parent": "t1_iaomu4u", "vote": 1}, {"content": "It's also way faster than using default samba if you want to share some files inside your network.", "id": "iar8c17", "parent": "t1_iaomu4u", "vote": 1}, {"content": "I've used this for ugly code and it can be difficult to debug if the nesting of functions is deep.  But it is powerful.", "id": "iapipok", "parent": "t1_iaoaxct", "vote": 8}, {"content": "I don't get it. Can you give an example of when this would be used?", "id": "iapojbz", "parent": "t1_iaoaxct", "vote": 6}, {"content": "I like the thematically appropriate example!!", "id": "iarp7nh", "parent": "t1_iaoaxct", "vote": 1}, {"content": "What\u2019s less common but is a major life improvement is that fstrings will strftime a date for you. \n\n`f\u201d{datetime.now():%Y-%m-%d}\u201d`", "id": "iapx0i5", "parent": "t1_iap0cz5", "vote": 49}, {"content": "They\u2019re pretty common, but I think they have a lot more functionality than people usually use. Formatting the precision of a float output, or making it a percent for example.", "id": "iapjrgi", "parent": "t1_iap0cz5", "vote": 7}, {"content": "Also you can print(f'{a * b = }') which will return '1 * 4 = 4' etc.", "id": "iastwcw", "parent": "t1_iapmrgi", "vote": 3}, {"content": "Omfg. Thanks!", "id": "iaqivcc", "parent": "t1_iapmrgi", "vote": 1}, {"content": "I love `product`. I use it very often to generate all possibles args and kwargs of a function just to test it", "id": "iaqpynz", "parent": "t1_iapmrgi", "vote": 1}, {"content": "Yessss thank you! Using that starting tomorrow.", "id": "iaqs3zk", "parent": "t1_iapmrgi", "vote": 1}, {"content": "OK, that's pretty cool :)", "id": "iarip7j", "parent": "t1_iapmrgi", "vote": 1}, {"content": "I feel like functools works really well in languages that have better iterator/fuctional support or are fully functional like rust, haskell, scala etc but it never quite hits the mark in python imo. Reduce can still be neat tho", "id": "iaohw93", "parent": "t1_iao32ng", "vote": 21}, {"content": "I want to love it, but every time I try to use it I end up figuring out about halfway through that there\u2019s a more pythonic way to do the same thing without using functools.", "id": "iao648b", "parent": "t1_iao32ng", "vote": 12}, {"content": "functools.partial FTW", "id": "iarx9dd", "parent": "t1_iao32ng", "vote": 4}, {"content": "there's _more_ itertools?? \ud83d\ude33\ud83d\ude33", "id": "iaohlvx", "parent": "t1_iao4duq", "vote": 27}, {"content": "Similarly I use OrderedDict quite a lot for the kind of work i do. \n\nAlso, and this is just a small thing but the kind of thing I really like. But I was amazed when I found out that empty lists evaluate to false and a non empty list evaluates to true. So you don\u2019t have to check the length of a list before iterating through it. Just\n\n    If my_list:\n        do_thing_to_list", "id": "iao9xva", "parent": "t1_iao4duq", "vote": 18}, {"content": "I discourage use of namedtuple, it\u2019s runtime codegen that has annoying gotchas when it comes to identity. `@dataclass`es (especially with `frozen=True`) are better for almost every scenario and have more features, type hinting, etc.", "id": "iap1xz4", "parent": "t1_iao4duq", "vote": 13}, {"content": "> ndjson\n\nI've never really seen the point of adding this dependency.\n\nWrite the file:\n\n    with open('data.jsonl','wt') as fout:\n        for item in seq:\n            print(json.dumps(item,ensure_ascii=False),file=fout)\n\nTo read:\n\n    with open('data.jsonl') as fin:\n        seq = [json.loads(line) for lin in fin]\n\nNo need for another library\n\n(I wrote those free-hand. May have a typo or two)", "id": "iaq0flu", "parent": "t1_iao4duq", "vote": 5}, {"content": "Click.  Just No.  The documentation is poor and argparse handles nested commands.", "id": "iapidzo", "parent": "t1_iao4duq", "vote": 4}, {"content": "[deleted]", "id": "iao883o", "parent": "t1_iao4duq", "vote": 2}, {"content": "Walrus is evil...", "id": "iapiyt4", "parent": "t1_iao4duq", "vote": 1}, {"content": "I think python type checking falls down in 2 major areas:\n\n1) Nested JSON-like structures. There are ways to implement (with typedicts and the like), but coming from a predominantly typescript background I find the python solutions unnecessarily verbose with nested objects.\n\n2) Complex generics. There are simply a lot of generic type signatures that are not possible with mypy.", "id": "iaok09o", "parent": "t1_iao22mq", "vote": 25}, {"content": "Typing is great, it has solutions for a lot of cases. Used Final recently in a project with a lot of inheritance and my IDE lit up like a christmas tree of red squiggly lines. I thanked the type gods as I cried with joy.", "id": "iao70lq", "parent": "t1_iao22mq", "vote": 35}, {"content": "Also you can import TYPE_CHECKING from typing. It\u2019s a Boolean that is only true when your ide/static analysis tool is doing type checking. Slap an if statement on that bad boy and you can import modules for use in type hints that would generate circular references during runtime.", "id": "iaogv0w", "parent": "t1_iao22mq", "vote": 26}, {"content": "Just started a new project and went with Python + typing and as someone coming from TypeScript I have to say that it feels like Python is light years behind TypeScript in this regard both in terms of tooling and how you define and validate types.", "id": "iatzbpa", "parent": "t1_iao22mq", "vote": 2}, {"content": "QQ Is there any incentive to use that other than performance?", "id": "iar2yuc", "parent": "t1_iao22mq", "vote": 1}, {"content": "I\u2019d say the most powerful and under appreciated feature of typing is collection interfaces.  Usually when people use List what they really mean is Sequence or Iterable.", "id": "ias5dn4", "parent": "t1_iao22mq", "vote": 1}, {"content": "Import antigravity", "id": "iapi05i", "parent": "t1_iaon6fy", "vote": 14}, {"content": "They don't even take any setup really.  Just define the members and you're done.", "id": "iapripf", "parent": "t1_iaorvhe", "vote": 8}, {"content": "I skipped over dataclasses and went straight to Pydantic.  It's fantastic.", "id": "iare33k", "parent": "t1_iaorvhe", "vote": 2}, {"content": "Adding the `slots` argument to the decorator in 3.10 makes so much sense\u2026 like why didn\u2019t that happen sooner, and why can\u2019t all classes have the option to use slots by default.", "id": "iaqzqfv", "parent": "t1_iaorvhe", "vote": 1}, {"content": "You can do the same thing with pure multiprocessing no?", "id": "iaqqkon", "parent": "t1_iaoqpbk", "vote": 1}, {"content": "Wait so `dictA.update(dictB)` can be written as  `dictA |= dictB`?", "id": "iaot19p", "parent": "t1_iaoiagl", "vote": 25}, {"content": "While I do use this, I don't think its implementation/naming is very good, since I always have to look up under what conditions the else executes.", "id": "iaol7k6", "parent": "t1_iao8p06", "vote": 17}, {"content": "Goes to else if it doesn't break?\n\nTIL, thanks", "id": "iaoaqfw", "parent": "t1_iao8p06", "vote": 22}, {"content": "[deleted]", "id": "iaofyjp", "parent": "t1_iao8p06", "vote": 50}, {"content": "The only problem with it is the syntax: it should not be called else! It should be 'finally' or 'normal_end_of_loop' or 'here_without_break' or anything that convey that idea.\n\nAs soon as you think of it with a more meaningful name, it becomes easier to use when writing code and easier to understand when reading it.", "id": "iaoo9jj", "parent": "t1_iao8p06", "vote": 16}, {"content": "I'd prefer this implementation to treat the for loop like an if, and if the iterator is empty, only then it would turn to the else. The current implementation is poor imo.", "id": "iaogkkd", "parent": "t1_iao8p06", "vote": 3}, {"content": "Even though effective python book author says you shouldn't use it, I think it comes handy in times. Same with While Else", "id": "iaofm68", "parent": "t1_iao8p06", "vote": 2}, {"content": "What in tarnation! I've never seen this before!\n\nThank you", "id": "iaq0wek", "parent": "t1_iao8p06", "vote": 1}, {"content": "I was expecting this to be the top answer.", "id": "iaporyo", "parent": "t1_iaok5a7", "vote": 3}, {"content": "With great power comes great responsibility", "id": "ib5a1lh", "parent": "t1_iaok5a7", "vote": 1}, {"content": " Check the [Truth Value Testing](https://docs.python.org/3.10/library/stdtypes.html#truth-value-testing) in the docs for more detail on this topic!", "id": "iaqby47", "parent": "t1_iap4iwm", "vote": 2}, {"content": "Or \n\na = int(b is not None)", "id": "iar6nxt", "parent": "t1_iap4iwm", "vote": 1}, {"content": "    a = int(b is not None)", "id": "ic6htgp", "parent": "t1_iap4iwm", "vote": 1}, {"content": "And arrays! E.g. [0]*4 produces [0,0,0,0]", "id": "iaoks94", "parent": "t1_iao49yn", "vote": 14}, {"content": "Also a little known thing is the @ operator which does matrix multiplication.", "id": "iaq5pgr", "parent": "t1_iao49yn", "vote": 0}, {"content": "Love it. Found after playing a lot with list comprehension by just guessing how the syntax for a dicationary comprehension would look like - and it just worked :-)\n\nJust like so:\n\n`{key: value for (key, value) in iterable}`", "id": "iap6bou", "parent": "t1_iaok9hl", "vote": 11}, {"content": "Happy it could help :)", "id": "iap962o", "parent": "t1_iap7veh", "vote": 7}, {"content": "`pytest`", "id": "iapxmyg", "parent": "t1_iaomzh2", "vote": 21}, {"content": "Finally a reply I get!! Thanks for making me not feel entirely inadequate haha", "id": "iaplic8", "parent": "t1_iaomzh2", "vote": 1}, {"content": "Does the map versions work In place?", "id": "iaqlujt", "parent": "t1_iaoo4iu", "vote": 1}, {"content": "Basically the python answer to go's defer, with more control.", "id": "iap1yxg", "parent": "t1_iaooxm0", "vote": 7}, {"content": "You can use contextlib.nullcontext in some cases", "id": "iaqp2ij", "parent": "t1_iaooxm0", "vote": 1}, {"content": "Sadly they don't work well with (frozen) dataclasses, which seem to be the only objects I write these days.", "id": "iapkwof", "parent": "t1_iaobezb", "vote": 2}, {"content": "[A few months ago someone posted this. Definitely helped me in working with paths](https://www.reddit.com/r/Python/comments/qkyxj2/python_pathlib_cookbook_57_examples_to_master_it/?utm_medium=android_app&utm_source=share)", "id": "iaqmwe3", "parent": "t1_iaoqpif", "vote": 2}, {"content": "Checkmate", "id": "iao2gep", "parent": "t1_iao1h8b", "vote": 6}, {"content": "so useful sometimes. great example is when u wanna override heapq lt and gt to make a min heap a max heap", "id": "iaps71s", "parent": "t1_iaoixrs", "vote": 1}, {"content": "You can often avoid having to use a metaclass by using `__init_subclass__` and `__set_name__`. \n\nhttps://docs.python.org/3/reference/datamodel.html#customizing-class-creation", "id": "iaoafec", "parent": "t1_iao718x", "vote": 10}, {"content": "This feels kinda horrible.\n\nWhat\u2019s the use case where you wouldn\u2019t just instantiate your \u201cBar\u201d class directly? I.e. write your own \u201cget_foo()\u201d function?", "id": "iap35hh", "parent": "t1_iaowc7p", "vote": 9}, {"content": "[deleted]", "id": "iaoytqu", "parent": "t1_iaowc7p", "vote": 2}, {"content": "Do you have a specific example?", "id": "iapj93x", "parent": "t1_iapc6xo", "vote": 1}, {"content": "![gif](emote|free_emotes_pack|joy)", "id": "iapgt38", "parent": "t1_iapgik3", "vote": 2}, {"content": "Note sure I would say few people use it or know about it. I'd say it's pretty common, but admittedly very useful.", "id": "iaou13i", "parent": "t1_iaolsc9", "vote": 3}, {"content": "I learned with \u201clogo\u201d on an Amstrad PCW\ud83d\ude0d", "id": "ianzum0", "parent": "t1_ianz404", "vote": 1}, {"content": "I had this in mind", "id": "iao65kn", "parent": "t1_ianz404", "vote": 1}, {"content": "Using eval is a major security concern. Use ast.literal_eval instead.", "id": "iapq529", "parent": "t1_iap6n1b", "vote": 5}, {"content": "I've played around a bit with the [cmd](https://docs.python.org/3/library/cmd.html) module for writing an interactive fiction engine.", "id": "iardtx9", "parent": "t1_iaq0ct9", "vote": 1}, {"content": "Thankfully since 3.8 the walrus operator can be a simple alternative", "id": "ib5c5jn", "parent": "t1_iaqhndf", "vote": 2}, {"content": "You can also use the union operator on dicts:\nsome_function(dictA | dictB)", "id": "ib5ce0d", "parent": "t1_iaqrecf", "vote": 2}, {"content": "Everyone that uses list comprehension is using generator comprehension, and then iterating over that to create a list", "id": "iaq4mng", "parent": "t1_iaoy5kl", "vote": 21}, {"content": "A lot of those examples would be more readable as functions rather than one-liners.\n\n    def do_the_thing(iterations):\n        for x in range(iterations):\n            yield intensive_operation(x)\n\n    for item in do_the_thing(iterations):\n        ...", "id": "iardnkq", "parent": "t1_iaqtsxb", "vote": 12}, {"content": "Fixed Reddit Markdown formatting for Old Reddit Markdown.\n\n**Remember: fenced codeblocks (\\`\\`\\`) are incompatible with Old Reddit Markdown!**\n\n> Yes, absolutely! Any sort of lazy iterator in general is phenomenal. A lot of people don\u2019t realize that \u201cgenerator comprehension\u201d can often save them time and memory over list comprehension - and they don't come up much in tutorials or anything, so a lot of people don't even know how to use them.\n> \n> Quick example:\n> \n>     # Don't do this! It will store the whole list in memory\n>     # Sometimes this is needed but if you only need values once (or don't need all\n>     # values), there's a better option\n> \n>     expr = [intensive_operation(x) for x in range(really_big_number)]\n>     for item in expr: ...\n> \n>     # Do this instead! Nothing is saved to memory, and you don't waste any\n>     # time making a list you'll just throw away\n>     # Imagine if your function exits after the first 10 items - you'd have wasted\n>     # really_big_number - 10 calls to intensive_operation with the list option\n> \n>     expr = (intensive_operation(x) for x in range(really_big_number))\n>     for item in expr: ...\n> \n> \n> Also - generator expressions are the correct replacement for `map()` and `filter()`, which the creator of Python wanted to remove. Examples:\n> \n>     # Equivalent expressions; second option avoids extra lambda function call\n>     # next() just gets the next (in this case first) item in an iterator, if you're unaware\n>     # Timeit shows second option (no filter) is a whopping 36% faster on my computer\n>     # And is arguably somewhat more readable\n> \n>     next(filter(lambda x: x % 1000 == 0, range(1, 10000)))\n>     next(x for x in range(1, 10000) if x % 1000 == 0)\n> \n>     # Equivalent expressions: second option uses generator to avoid lambda calls\n>     # Not as impressive as with filter, but second option is still 19% faster for me\n>     # Also arguably more readable\n> \n>     list(map(lambda x: x * x, range(10000)))\n>     list(x * x for x in range(10000))\n> \n> \n> Extra context for anyone confused - generators are \"lazy\", meaning they don't calculate their result before they are requested. Perfect for when you use the values once then throw them away, or if you don't iterate through the whole thing. They can be iterated through just like a list with `for x in ...`, or by using `islice` to get a portion of it (as you can with any iterable, but you can't subscript generators so it's needed here). You can also chain generators, which is super cool. Example:\n> \n>     expr1 = (a**4 for a in range(10000000000))\n>     expr2 = (b + 2000 for b in expr1 if b > 8000)\n>     expr3 = (f\"Result: {c}\" for c in expr2)\n>     list(itertools.islice(expr3, 2, 6))\n>     # Returns:\n>     # ['Result: 22736', 'Result: 30561', 'Result: 40416', 'Result: 52625']\n> \n> Try that and see how it's nice and instant. Then try it again replacing the generator `(...)` with list's `[...]` and notice how it takes a LONG time calculating all values for `10000000000` that you don't need (or watch it for 10 seconds then quit the program, nobody has time for that).\n> \n> *edit: added examples*\n>", "id": "iarioli", "parent": "t1_iaqtsxb", "vote": 7}, {"content": "It supports the StopIteration protocol. This is the big deal. You are producing a collection with postponed execution. If you can't see the high value of that, maybe programming is not for you.", "id": "iau7rcl", "parent": "t1_iasc9d4", "vote": 1}, {"content": "Okay this is a major TIL for me", "id": "iaq47at", "parent": "t1_iap11ok", "vote": 7}, {"content": "I'm not sure I understand what you are saying. I understand that each OS will have different implementations. However, if in \"windows  you can't\" use all your objects, then what does that mean? I fear you are saying that if you pass a queue to multiple processes, then they are not sharing the same queue instance? Is that true?\n\nEDIT: Added a word", "id": "iaqx3z3", "parent": "t1_iap4yki", "vote": 3}, {"content": "I haven't used this in quite a while, but I remember having to do that on linux as well whenever I needed to pass an object that was a basic type. Did anything change?", "id": "iar7awt", "parent": "t1_iap4yki", "vote": 1}, {"content": "I try really hard to keep to the standard library, myself. I admit I don't really have a *rational* reason for this, however.", "id": "iaok608", "parent": "t1_iao8fes", "vote": 21}, {"content": "The copy-on-write semantics of fork is fantastic.\n\nSadly many people hate on fork, particularly since Microsoft research released their critique (https://www.microsoft.com/en-us/research/publication/a-fork-in-the-road/) - possibly because they couldn't support it in Windows, but I'm not clear if this is true or not.\n\nLanguages seem to be slowly moving away from using fork, the above paper is often cited as a valid reason to not support fork. I think this is very short sighted, there are absolutely some very good reasons to continue supporting calls to fork. The comment above regarding parmapper clearly shows this. I think the anti-fork community tend to over focus on security concerns (there are alternatives to fork that should be used if this matters in your project) and don't see the utility of a simple call that provides copy-on-write process spawning.", "id": "iapx7ho", "parent": "t1_iao8fes", "vote": 3}, {"content": "How do you set the n_jobs or threads?", "id": "iapbzyc", "parent": "t1_iao8fes", "vote": 1}, {"content": "Big, big, big caveat: Note that safely forking a multithreaded process is problematic\n\nhttps://docs.python.org/3/library/multiprocessing.html\n\nAccording to this it's only an issue if you use locks in the forked process:\nhttps://britishgeologicalsurvey.github.io/science/python-forking-vs-spawn/\n\nBut the thing is that even something as innocuous as logging will use locks so you need to be careful about what is done in the mapped function.\n\nOn top of that it can crash on Macosx. \n\n\nAlternatively you can use the spawn method, but you won't get to share any global variable and the pool processes will need to import the modules, which can take a relatively large amount of time...\n\nEDIT: it's actually quite bad \nhttps://stackoverflow.com/questions/46439740/safe-to-call-multiprocessing-from-a-thread-in-python#:~:text=It%20is%20safe%20to%20use,to%20change%20the%20start%20method.", "id": "iarh5th", "parent": "t1_iao8fes", "vote": 1}, {"content": "Holy shit!", "id": "iaq1zhk", "parent": "t1_iap8taq", "vote": 1}, {"content": "I think that might only be with the sys module and something they will fix. I\u2019ve been using it all over with no issues except sys", "id": "iao1i11", "parent": "t1_iao0xh3", "vote": 18}, {"content": "I haven't run into this and I go with scripts between windows and Linux frequently. If you can find an example, I would be very interested. Whoever invented Pathlib is my hero.", "id": "iapx49n", "parent": "t1_iao0xh3", "vote": 8}, {"content": "I love the fact you can pass functions as arguments in Python, I use it all the time in my code", "id": "iapnden", "parent": "t1_iaod0pr", "vote": 27}, {"content": "I don't like that you need a whole block just to declare a function. Hurts readability. Python should have JS style function declaration.", "id": "iapntpy", "parent": "t1_iaod0pr", "vote": -8}, {"content": "Flask and FastAPI apps are pretty much such and quite natural examples. Well, technically the decorators are actually methods but the states are in the objects (apps).\n\nIt comes to the question whether you need to manipulate or read the state elsewhere. You cannot access the namespace inside function decorators outside the decorators thus they actually are not suitable for all cases.", "id": "iaol3cj", "parent": "t1_iaocnvm", "vote": 34}, {"content": "There's definitely uses for a class-based decorator. I have a state manager class with decorators which could be class-based, though in that instance I needed two separate decorators for registering both the controller and the individual states.", "id": "iaods2z", "parent": "t1_iaocnvm", "vote": 5}, {"content": "Isn\u2019t @property a class? I see it used all the time", "id": "iaqaif5", "parent": "t1_iaocnvm", "vote": 1}, {"content": "Agreed. For example, if you want to create a decorator that takes arguments to decide how to register functions, it requires THREE nested functions.\n\n```\ndef dec(*args):\n    def outer(f):\n        def inner(*inner_args):\n            f(*inner_args)\n        states.append(inner)\n    return outer\n```", "id": "iaorr1v", "parent": "t1_iaok51d", "vote": 28}, {"content": "Yeah. I work in both python and javascript and every time I have to write a higher-order function in python it makes me wish it were as easy as it is in javascript.", "id": "iap4s8f", "parent": "t1_iaok51d", "vote": 5}, {"content": "Fuck! Really??", "id": "iaq4uut", "parent": "t1_iaom12p", "vote": 29}, {"content": "Thanks, I actually didn't know this. Does it have a step argument as well?", "id": "iaqq5y8", "parent": "t1_iaom12p", "vote": 7}, {"content": "I love python for the general productivity it brings. You can do a lot of powerful stuff in a few lines of fairly readable code. \n\nI do wish it was a big faster.", "id": "iaohjf3", "parent": "t1_iaoffh6", "vote": 36}, {"content": "Its pretty easy to pick up. Came from a java background and ended up in python because i work alot as a ml engineer. Trying to go to c++ now, just reading the code gives me a headache.", "id": "iaoft6b", "parent": "t1_iaoffh6", "vote": 12}, {"content": "You're gonna end up like me. Realizing that Python is an awesome toy language, and it will make you want to do everything with Python, even if you know languages like C++ or Rust.", "id": "iaqqbub", "parent": "t1_iaoffh6", "vote": 1}, {"content": ">enumerate \n\nWhat the...\n\nWell, looks like I'm going to use this a lot.", "id": "iarn0vc", "parent": "t1_iaoffh6", "vote": 1}, {"content": "I'm more impressed by Python's power for remuneration", "id": "iap480k", "parent": "t1_iaowmrt", "vote": 13}, {"content": "That's one way. When I was starting out however, I was writing code like \n\n    for i,my_list in zip(range(len(my_list)),my_list):\n       ...\n\na lot. How I found out about zip before I found out about enumerate, I will never understand.", "id": "iarjzul", "parent": "t1_iaqzc6o", "vote": 1}, {"content": "This is how i would do it without enumerate:\n\n    for i in range(len(lst)):\n        lst[i]", "id": "iarvnw5", "parent": "t1_iaqzc6o", "vote": 1}, {"content": "Enumerate from what I remember is slightly faster than xrange for loops and significantly faster than for x in loop.", "id": "iav4kh9", "parent": "t1_iav49t2", "vote": 1}, {"content": "Which is excellent because it allows you to essentially wrap anything with a fully feature complete try/except/else/finally that you can't get from an explicit class.\n\nI use this for a relay controller on my raspberry pi, any exception that fires off while the relay is engaged is caught by the context manager and closes the relay, before letting it bubble up.", "id": "iar385d", "parent": "t1_iaokyas", "vote": 4}, {"content": "I use them for temp tables", "id": "iaor94t", "parent": "t1_iaod8we", "vote": 7}, {"content": "Sqlalchemy does some really nice stuff with this, keeping everything in a transaction if you use a context manager.", "id": "iaqzeov", "parent": "t1_iaod8we", "vote": 3}, {"content": "Thanks for this suggestion. I really need to implement this on some database code.", "id": "ias5a8t", "parent": "t1_iaod8we", "vote": 2}, {"content": "They\u2019re nice anytime there\u2019s routine setup or cleanup needed. Files & connections are the go to for sure but you could for instance setup a context manager to initialize a plot and return the object or start a session for some type of sustained requests. It\u2019s hard to really give ideas for it in the abstract because they\u2019re such a vague concept, but I find myself using them somewhat frequently", "id": "iapp0zf", "parent": "t1_iapo130", "vote": 5}, {"content": "I use them for anything stateful, really.  My relay controller on my raspberry pi, the context manager enables/disables the relay so that any exception that fires off will be grabbed by the context manager, shut down the relay, then allowed to continue.\n\nThe requests library uses it a lot to manage session information dn track cookies.  Aiohttp makes extensive use of it, every http call is context managed on its own to provide streaming access to the data.\n\nI use them in my pytests for state consistency, make sure things go back to normal when it's done.", "id": "iar3oqu", "parent": "t1_iapo130", "vote": 3}, {"content": "I can share one. My work has me reading a gigantic (300+ GB at this point) text file of SARS-CoV-2 genomes. It's obtained from one international source that everyone uses. For some reason, there's an encoding error in the file such that when you get *to the very end*, Python throws an `EOFError`. (Other software like 7-Zip also complains about encoding problems too.) The whole file will have been read correctly at this point, but this error would crash the program. And as you might imagine, going through a 300 GB file takes a while and it's very annoying to have it crash at that point, especially when the data's actually fine.\n\nBy making a context manager specifically for that type of file, I can have it ignore the `EOFError` and move on with the rest of the program. Problem solved.", "id": "ias3nci", "parent": "t1_iapo130", "vote": 3}, {"content": "Can you explain? I\u2019ve never seen this before", "id": "iapkrfw", "parent": "t1_iapecfk", "vote": 20}, {"content": "Not OP but I guess he runs this \u2018simple server\u2019 command on the target & this lets him post files to it.", "id": "iapqeok", "parent": "t1_iapecfk", "vote": 1}, {"content": "helo brother", "id": "iaqsf3r", "parent": "t1_iapecfk", "vote": 1}, {"content": ">one international source that everyone uses. For some reason, there's an encoding error in th\n\nIt's just as useful in getting off machines - I use it in a work environment all the time.", "id": "ibgqxo1", "parent": "t1_iapecfk", "vote": 1}, {"content": "You can GET those files also.", "id": "iappdcw", "parent": "t1_iapnyjn", "vote": 2}, {"content": "You can transfer files from one PC to another (or to your phone).\n\nYou can test a webpage.\n\nOnce I used it to stream content from my PC to my phone (using VLC on my phone), I remember it was a bit tricky, but it eventually worked.", "id": "iaps8mj", "parent": "t1_iapnyjn", "vote": 2}, {"content": "It's relevant mostly when you're making an API where users subclass your parent class like with SQLAlchemy models, Pydantic models, HTTP route objects etc. In these cases the class itself is used as an important part of the API (and not just instances of it), so you might want to customize how the class is constructed. If it's a simple customization that just involves setting a class variable then the user can generally just set that in your class definition so there's no need for this, but sometimes you want to apply some logic to the value they provided, at which point you might implement `__init_subclass__` as above.\n\nFor example if the class needs a personal logger, you might add a verbosity parameter to the class constructor:\n\n    class Parent:\n        def __init_subclass__(cls, /, verbosity, **kwargs): \n            super().__init_subclass__(**kwargs)\n            cls.logger = logging.getLogger(f\"{__name__}.{cls.__name__}\")\n            cls.logger.setLevel(verbosity)\n        @classmethod\n        def do_something(cls):\n            cls.logger.debug(\"Foo\")\n\n    class Child(Parent, verbosity=logging.DEBUG): \n        pass", "id": "iaqg4zv", "parent": "t1_iapojbz", "vote": 9}, {"content": "Theres a ton of extra features in f strings that nobody ever uses. \n\nhttps://docs.python.org/3/tutorial/inputoutput.html", "id": "iaqhnei", "parent": "t1_iapx0i5", "vote": 14}, {"content": "You can also implement similar behaviour for your own types by implementing `__format__`. Anything after the `:` is passed to it and the string returned is inserted into the f-string.", "id": "iarg6j3", "parent": "t1_iapx0i5", "vote": 5}, {"content": "This thing with datetime format inside a f string is an OS dependant trick", "id": "iaqpk7y", "parent": "t1_iapx0i5", "vote": 1}, {"content": "Yeah, I don't know if I could point to anything concrete, but I've found the Map/Reduce/Filter trio to be much less useable in Python than, say, JS (let alone a Scheme or Scala)", "id": "iaplcj3", "parent": "t1_iaohw93", "vote": 7}, {"content": "sometimes functools is as pythonic as it gets", "id": "iaoeduq", "parent": "t1_iao648b", "vote": 9}, {"content": "\\#TIL", "id": "iays0mg", "parent": "t1_iarx9dd", "vote": 2}, {"content": "Note that if you are only in the need of maintaining order of insertion, the standard dict already does that since Python 3.7", "id": "iaoe098", "parent": "t1_iao9xva", "vote": 44}, {"content": "> Similarly I use OrderedDict quite a lot for the kind of work i do.\n\nNormal dictionaries have been ordered in CPython since 3.6. Unless you're stuck supporting older interpreter versions, you can probably use ordinary dicts now.\n\nEDIT: someone else already said it, oops. I was a little more specific though, so I'll leave it be. In 3.7 it became a language feature and not an implementation detail.", "id": "iaoklw0", "parent": "t1_iao9xva", "vote": 13}, {"content": "Empty list/dicts are truthy in js and falsy in python, that\u2019s bitten me in the butt many times. I typically check the length as 0 is falsy in both languages.", "id": "iaouafa", "parent": "t1_iao9xva", "vote": 3}, {"content": "What do you use OrderedDict for?\n\nI love actual examples of this stuff.", "id": "iaodf1g", "parent": "t1_iao9xva", "vote": 1}, {"content": "What do you mean by runtime codegen? Do you have examples of annoying gotchas?", "id": "iaphldm", "parent": "t1_iap1xz4", "vote": 7}, {"content": "If people want to keep some of the behavior of namedtuple but not the runtime codegen, there's also `typing.NamedTuple`, which you can invoke in almost the same manner as `dataclass`.\n\n    @dataclass(frozen=True)\n    class point:\n        x: int\n        y: int\n\nvs using `NamedTuple` as a metaclass:\n\n    class point(NamedTuple):\n        x: int\n        y: int\n\nIt does still have the identity properties, but those are sometimes useful. `dataclass` has other features that are useful as well, like mutable instances, as well as defaultfactories for mutable default argument.", "id": "iapcgbo", "parent": "t1_iap1xz4", "vote": 6}, {"content": "If you're ever tempted to use [collections.namedtuple](https://docs.python.org/3/library/collections.html#collections.namedtuple), you should use [typing.NamedTuple](https://docs.python.org/3/library/typing.html#typing.NamedTuple) instead.\n\ntyping.NamedTuple is a great drop-in replacement for functions that pass around tuples, especially when you're trying to add annotations to an older project.", "id": "iapab8f", "parent": "t1_iap1xz4", "vote": 6}, {"content": "A late follow-up, but anyways some feedback: I actually highly value that ndjson is much more forgiving than plain json and more often than not I can just load a file (typically using its reader interface) while with plain json I would have to massage the file beforehand.\n\nIt's also slightly faster (as its setting up a decoder; and not just doing what you suggest), but this is not so relevant for deciding for or against it.\n\nI absolutely understand your point. Since it's in all my builds, it's not really that big of an issue (given its single json dependency).", "id": "ibu2ocu", "parent": "t1_iaq0flu", "vote": 1}, {"content": "I see what you are getting at but I rarely need more than one level of commands. And maintaining one top level of commands is a breeze with click. Another handy one for simple CLIs is Typer, but I rarely use it over click.\n\nTo me, comparing click to argparse is almost like comparing pathlib to os.path from a convenience perspective.", "id": "iarqiyi", "parent": "t1_iapidzo", "vote": 1}, {"content": "I think it's not necessarily better but there are use cases for it. For example, I sometimes want to write something like this:\n\n    while (result := func()) is not None:\n        do something with result\n\nSo I don't have to initialize result or reset its state after every repetition. In Rust, they have while let, which is quite similar and very useful with pattern matching.", "id": "iaoai78", "parent": "t1_iao883o", "vote": 32}, {"content": "Because `:=` is operator, while `=` is not. So you can use `:=` in expressions, mainly in conditions. For example:\n\n    while line := file.readline():\n        ... # do something with line\n\nThis will read your file line by line until the end.\n\nEdit: as pointed out by u/madness_of_the_order, you get the same result by using `for line in file: ...`, so files aren't really good example here", "id": "iaoe695", "parent": "t1_iao883o", "vote": 13}, {"content": "I didn\u2019t say it\u2019s better than \u201c=\u201c \ud83e\udd14", "id": "iao9n1q", "parent": "t1_iao883o", "vote": 4}, {"content": "If you have 20 minutes to spare, why [not have a PyPI maintainer tell you](https://youtu.be/6uAvHOKofws)", "id": "iao9qmh", "parent": "t1_iao883o", "vote": 3}, {"content": "It's not better or worse, it's just a kind of assignment operator that's an expression, not a statement. I think it's similar to Julia's assignment which also evaluated to the thing assigned to the variable.", "id": "iaoa0jv", "parent": "t1_iao883o", "vote": 5}, {"content": "It saves one line of code:\n\n    if item := some_function():\n       do_something_with(item)\nVersus\n\n    item = some_function()\n    if item:\n        do_something_with(item)\n \nIt\u2019s not much but it\u2019s nice. I have found it useful in systems that are in the middle of upgrades where there are new and legacy methods for retrieving something, where you want to prioritize the new thing but fall back to the old thing in cases where the new thing hasn\u2019t been implemented yet. It just saves some verbosity.", "id": "iaoclet", "parent": "t1_iao883o", "vote": 4}, {"content": "You can use it and assign in the same statement. \n\n`inputs = list()\nwhile True:\n    current = input(\"Write something: \")\n    if current == \"quit\":\n        break\n    inputs.append(current)\n    `\n   Vs \n\n`inputs = list()\nwhile (current := input(\"Write something: \")) != \"quit\":\n    inputs.append(current)`", "id": "iaoa4bn", "parent": "t1_iao883o", "vote": 2}, {"content": "Walrus is like some new species created after nuclear bombardment - stay away from it", "id": "iaybwn3", "parent": "t1_iapiyt4", "vote": 1}, {"content": "Regarding item 1, have you considered using dataclasses/pydantic/marshmallow? They are so much nicer to work with compared to \"data dicts\" and they work wonderfully with typechecking.", "id": "iaonitg", "parent": "t1_iaok09o", "vote": 8}, {"content": "True. The big thing I\u2019ve run into with things like JSON is that Mypy can\u2019t handle recursive types.", "id": "iaoor0n", "parent": "t1_iaok09o", "vote": 2}, {"content": "Also the fact that intersection types are still missing.", "id": "iaoyqaj", "parent": "t1_iaok09o", "vote": 1}, {"content": "The only problem is when my coworkers handle typing errors with `# type: ignore` and hope for the best. \ud83d\ude2c", "id": "iao7fj2", "parent": "t1_iao70lq", "vote": 29}, {"content": "The number of times it's saved me from accidental mutable default arguments...", "id": "iaok9p3", "parent": "t1_iao70lq", "vote": 7}, {"content": "Worth noting you\u2019d need to put imported types in quotes, otherwise they\u2019ll error out at runtime\n\n> a: \u201cMyType\u201d = None", "id": "iaos6vt", "parent": "t1_iaogv0w", "vote": 12}, {"content": "Now *that's* useful to know about.", "id": "iaokcu5", "parent": "t1_iaogv0w", "vote": 0}, {"content": "I was scratching my head a few days ago until I discovered this.\nIt looks weird, but it works.", "id": "iaqejr1", "parent": "t1_iaogv0w", "vote": 1}, {"content": "That is probably also true. Python\u2019s a little bit stuck on some details because they\u2019re trying to do it in the same language without breaking backwards compatibility.", "id": "iauk8ro", "parent": "t1_iatzbpa", "vote": 1}, {"content": "There is no performance incentive. Python is still dynamically typed at run-time, with all that that implies.\n\nIf you want to eliminate the cost of RTTI, you would need to look to tools like Numba and Cython.\n\nType hints are really there to help with editor tooling like auto completion, and for supporting static type checkers. And the static type checkers are purely a quality control tool.", "id": "iasayfa", "parent": "t1_iar2yuc", "vote": 2}, {"content": "In the few instances I've done this I leave a comment reminding readers what it does.", "id": "iap4y59", "parent": "t1_iaol7k6", "vote": 6}, {"content": "Can you give an example of when you have used it?", "id": "iapp1z5", "parent": "t1_iaol7k6", "vote": 1}, {"content": "[deleted]", "id": "iaopqgb", "parent": "t1_iaoaqfw", "vote": -3}, {"content": "Yeah, this code isn't \"obvious\" in all the wrong ways.", "id": "iaoj2aj", "parent": "t1_iaofyjp", "vote": 19}, {"content": "I think else is fitting. If match, break. Else, ...\n\nFinally, in try/except, executes unconditionally.", "id": "iaplab0", "parent": "t1_iaoo9jj", "vote": 10}, {"content": "I guess it matches the try except else syntax.", "id": "iapp0lo", "parent": "t1_iaoo9jj", "vote": 2}, {"content": "Just to muddy the water further, \"try\" blocks also support \"else\", that have different semantics to \"finally\" blocks. \"finally\" blocks always execute, whereas \"else\" blocks only execute if no exception was raised.", "id": "iardrk7", "parent": "t1_iaoo9jj", "vote": 2}, {"content": "While not obvious at first glance. I understand why it is implemented like that. Basically every for loop is a condition that, if met, would execute the code block. The else block is executed whenever the if condition is not met (exactly the way it usually does).", "id": "ib5aknt", "parent": "t1_iaoo9jj", "vote": 1}, {"content": "Can you give an example of when you have used it?", "id": "iapp2s8", "parent": "t1_iaofm68", "vote": 1}, {"content": "and on *lists. :)\n\n(If you try it on a numpy array, it has a numeric meaning instead.)", "id": "iaosms0", "parent": "t1_iaoks94", "vote": 14}, {"content": "Be weary when mutliplying nested arrays. Due to the way the values are stored in the memory, sometimes changing a value inside one nested array affects other nested arrays. This behaviour is a bit confusing but I was told that \"it's not a bug, it's a feature!\" :/\n\nYou can get around this using list comprehensions (another underrated feature) but it isn't as clean.", "id": "iaotwv8", "parent": "t1_iaoks94", "vote": 14}, {"content": "I don\u2019t use stuff like this. Because given something like this:\n\n   a = [1, 2, 3]\n\n   b = a * 2\n\n\u2026which of these is true? -\n\n   b = [2, 4, 6]\n\n   b = [[1, 2, 3], [1, 2, 3]]\n\nDo you know for sure? Would you trust your intuition without busting open a Python interpreter to run it and check?\n\nDo you trust that everyone else reading your code (including you-six-months-from-now) will reach the same conclusion? Again, without actually trying it?\n\nHow about if you change `a` (maybe in a very different part of your code) and make it a numpy array instead of a Python array? Will this code now unexpectedly yield a different result?\n\nSee, these are the kinds of problems that can arise with code that prioritizes cleverness over clarity. I find this type of thing to be very un-pythonic.", "id": "ias78qg", "parent": "t1_iaoks94", "vote": 1}, {"content": "I like it for zipping lists into a dict.", "id": "iaqh8y6", "parent": "t1_iap6bou", "vote": 2}, {"content": "    dict(iterable)", "id": "iaqs17p", "parent": "t1_iap6bou", "vote": 1}, {"content": "I recently switched from unittest to pytest. Not going back!\n\nSlap python-cov and python-benchmark on top and I'm a happy camper", "id": "iaqinpr", "parent": "t1_iapxmyg", "vote": 6}, {"content": "It does.", "id": "iatblmf", "parent": "t1_iaqlujt", "vote": 1}, {"content": "Holy hell", "id": "iao7egy", "parent": "t1_iao2gep", "vote": 14}, {"content": "Some time ago I used it to amend XML DOM elements with custom methods after my code recognized the semantics of the parsed elements in an XMPP client. So, for example, after parsing `<message to='romeo@example.net' from='juliet@example.com/balcony' \u2026>` I was adding methods like `get_recipient`, while still allowing downstream code to use DOM methods to access less standard properties. Can't really have the XML DOM parser produce your own classes, especially when it takes more complex logic to recognize semantics. At the same time, XMPP is full of extensions, so having access to raw XML methods is useful. And creating a parallel tree of elements took too much time and memory.", "id": "iap75q1", "parent": "t1_iap35hh", "vote": 3}, {"content": "I think a more realistic example would be where Foo is a pre-existing class not usually used as a Bar, Bar is a class defined by a third party *and* you\u2019re dealing with code that relies on `isinstance` rather than duck typing. \n\nAlthough I\u2019d probably try defining a FooBar type that implements both Foo and Bar or adding a method on Foo that converts it to a Bar before resorting to this technique.", "id": "iap9233", "parent": "t1_iap35hh", "vote": 3}, {"content": "Can you explain why please?", "id": "iare011", "parent": "t1_iapq529", "vote": 3}, {"content": "It seems that your comment contains 1 or more links that are hard to tap for mobile users. \nI will extend those so they're easier for our sausage fingers to click!\n\n\n[Here is link number 1 - Previous text \"cmd\"](https://docs.python.org/3/library/cmd.html)\n\n\n\n----\n^Please ^PM ^[\\/u\\/eganwall](http://reddit.com/user/eganwall) ^with ^issues ^or ^feedback! ^| ^[Code](https://github.com/eganwall/FatFingerHelperBot) ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&subject=delete&message=delete%20iarduoe)", "id": "iarduoe", "parent": "t1_iardtx9", "vote": 1}, {"content": "In cases where the sentinel is falsey.\n\n    def gen():\n        ...  # yields tuple of coordinates (x, y)\n    \n    g = gen()\n    \n    for x, y in iter(partial(next, g), (0, 0)):  # stops when a coordinate is (0, 0)\n        ...", "id": "ib5p130", "parent": "t1_ib5c5jn", "vote": 2}, {"content": "Disagree.  Not knocking it because it's really my personal taste, but the one liners above are clear, concise, and not unnecessarily dense.  Defining them as a functions significantly increases the amount of time it takes me to read and understand what an iterator is doing, with the one liners above I immediately know what's important and what's happening.", "id": "iasmsn0", "parent": "t1_iardnkq", "vote": 5}, {"content": "Right but my book was already getting kind of long :) and comprehension does still have a performance advantage over functions, to my knowledge", "id": "iasj9ls", "parent": "t1_iardnkq", "vote": 1}, {"content": "Good human.", "id": "iasel0z", "parent": "t1_iarioli", "vote": 2}, {"content": "Thank you for helping to clear this up \ud83d\ude0a", "id": "ias66jn", "parent": "t1_iarioli", "vote": 1}, {"content": "hahaha you are describing standard features of any programming language. What if it didn't have \"StopIteration protocol\", what then? There would be no other way to conditionally stop.. hahaha you just have to unplug your laptop and wait for the battery to run down", "id": "iavniow", "parent": "t1_iau7rcl", "vote": 0}, {"content": "I'm sorry, this is not mean spirited,  but, what is the value of \"a collection with postponed execution?\"\n\nI have tears coming out of my eyes. I needed this. I'm trying to think of new way to say \"a variable\" or \"source code\" but I have nothing. A static procedural solution design soo it looks like this: p\\^>s that is some syntactic sugar for turning a problem into a solution.", "id": "iavoio4", "parent": "t1_iau7rcl", "vote": 1}, {"content": "OOOh it's because \"in\" is so key to python, you can't even use the preferred for loop syntax without deciding allocate vs generator. xrange() was a default generator back in the day. Surely the some other things fill the same role? I can see how everyone would like to make their own generator, that they will inevitably irresistibly throw in list comprehension.", "id": "iavq1qt", "parent": "t1_iau7rcl", "vote": 1}, {"content": "They're probably referring to the fact that when the multiprocessing start method is fork (the default on Python, available with limitations on macOS, not available on Windows at all), any objects and modules you have around are replicated into the child processes for free, which is super handy with eg big matrices or dataframes or what-have-you.", "id": "iarjb81", "parent": "t1_iaqx3z3", "vote": 8}, {"content": "Oh dunno. But it was what I experienced and read online, so it's the case now.", "id": "iasmbtt", "parent": "t1_iar7awt", "vote": 1}, {"content": "Here are some rational reasons.\n\nEvery time you add a dependency to code:\n\n1) You add a bit of complication to the Python environment. You have to ensure that the dependency is installed for the local Python environment. Every time you move the code to a new device, you have to make sure that the new environment includes it, too, which reduces portability.\n\n2) You create the possibility of compatibility issues. Maybe the dependency requires a particular Python version, and changes to the Python version can break the dependency. Or maybe the dependency won't run in certain environments. (I've run into this a lot with both [pdfminer](https://pypi.org/project/pdfminer/) and [kaleido](https://pypi.org/project/kaleido/), where dependencies or builds on different machines vary, resulting in the same code behaving differently on different machines.)\n\n3) You create a small additional security risk of malicious code making its way into that library and, thus, onto your machine. ([Yes, this does happen in Python.](https://thehackernews.com/2021/11/11-malicious-pypi-python-libraries.html))\n\n4) You add non-standard code that someone else will have to learn to understand or extend your project. It's totally fair to use standard libraries, even rarely-used modules or libraries, and expect other users to come up to speed with it. But non-standard dependencies are a different story.\n\nFor all of these reasons, I'm very choosy about adding new libraries. I'm strongly inclined to avoid it where the functionality is reasonably available in the Python built-in library, even if the built-ins are less convenient. I'm willing to accept that tradeoff for NumPy, Tensorflow, pdfminer, and even requests (despite urllib being a builtin library). But others, like this project... I probably wouldn't use unless I had a real need.", "id": "iaqha7y", "parent": "t1_iaok608", "vote": 30}, {"content": "I totally get it. I am not saying anyone *else* should use `parmapper`. But I wrote it for my uses.\n\nI do a lot on an air-gapped network so I also try to minimize dependancies!", "id": "iaop5po", "parent": "t1_iaok608", "vote": 6}, {"content": "Fair instinct I think. In general, I know the standard library API won\u2019t change and will be cross compatible with other versions.", "id": "iaq02cu", "parent": "t1_iaok608", "vote": 2}, {"content": "I built an entire mini programming language using nothing but the Python standard library. It\u2019s amazing how much it can do. \n\nI used mypy for type checking but that isn\u2019t a runtime dependency", "id": "iar4pd3", "parent": "t1_iaok608", "vote": 1}, {"content": "Wow. Interesting. It would be a major blow to lose it as it makes doing  thing so easy in Python. Of course I am biased as I wrote parmapper but it is just so easy to turn my serial data analysis into something parallel. And it can run in Jupyter. On macOS, you need to take some risk but it is worth it!\n\nI mean, it's not the end of the world for sure but would change the simplicity. I'd probably need to be more explicit (and super documented) about splitting analysis and processing.\n\nI also wonder how you would do daemons. The general process all rely on  a double-fork.", "id": "iapztxs", "parent": "t1_iapx7ho", "vote": 3}, {"content": "`fork()` is an oversimplistic solution. It\u2019s practically guaranteed that the child process will not need a copy of 100% of the data used by the parent process. And ignoring this fact in the trivial case results in bad programming habits that persist when the inefficiency becomes nontrivial, critical, or even fatal.\n\nThe alternative is very simple: Rather than lazily counting on the interpreter to copy all do the data used by the parent, do this:\n\n1) Think about what the child process actually needs and copy it yourself.\n\n2) Create a multiprocessing process with a target function, passing in the copies as a function argument. If there\u2019s a lot of them, you can pass them in as an array and unpack them in the function; or, you can pass them in as a dictionary.\n\n3) Start the new process.\n\nThat\u2019s it. That\u2019s all there is to using multiprocessing instead of fork.\n\nThere are some advantages here besides efficiency. Whereas fork just spins off a new process, multiprocessing gives you a handle into the process. You can check its status; you can suspend or kill it; and you can set it as a daemon process, so that if it\u2019s still running when the main process exits, the interpreter will kill it instead of being stuck a zombie process. Very convenient.", "id": "ias3v0p", "parent": "t1_iapx7ho", "vote": 2}, {"content": "In my code?n It is the `N=None` and `Nt=1` keyword arguments. `None` translated to CPU count.", "id": "iapkww5", "parent": "t1_iapbzyc", "vote": 2}, {"content": "I am having trouble finding it in all the stuff I have done, I managed to work around the issue and removed it it seems. I was storing paths of a repository structure in the master.yaml , converting python to yaml and back again and it needed to be portable and I kept getting an error and saw on stack overflow that setting PosixPath = WindowsPath would stop that error I was getting.  \n\n\nI changed it to something more abstract to avoid having paths in the master.yaml   \n\n\nhey... would you have a good example of a multi representer for yaml lib to dynamically create arbitrary python code to yaml and back again? I have to get back on this project and thats next on the list lol. so far I just have  explicitly defined structures", "id": "iarhnk4", "parent": "t1_iapx49n", "vote": 1}, {"content": "I use them all the time to dispatch message handlers:\n\n    handlers = {\n      \"start\": start_handler,\n      \"status\": status_handler,\n      \"run\": run_handler, \u2026\n    }\n    message = \"run some_command some_argument\"\n    parts = message.split(\" \")\n    message_handler = handlers.get(parts[0], default_handler)\n    message_handler(parts[1:])\n\n    def run_handler(args): \u2026\n\nUsing a function mapping like this saved me oodles of if-then statements. I love that Python enables this kind of clean, compact, readable syntax.", "id": "ias4wsa", "parent": "t1_iapnden", "vote": 8}, {"content": "Python was my introduction to functional programming. It completely changed how I think about code.", "id": "iaqq2qp", "parent": "t1_iapnden", "vote": 5}, {"content": "Wait what\n\nThats awesome\nNever had a use for it, but Im sure ill think of one", "id": "iarc189", "parent": "t1_iapnden", "vote": 3}, {"content": "You can do that with lambdas if you really wanted to for small stuff.", "id": "iapu5y7", "parent": "t1_iapntpy", "vote": 18}, {"content": "Great examples, thank you for this! :)", "id": "iap5xuu", "parent": "t1_iaol3cj", "vote": 2}, {"content": "Fantastic example, it makes sense now! I can see me playing around with this for something like a logging decorator. Hold state in a class and log via methods", "id": "iapgyor", "parent": "t1_iaol3cj", "vote": 1}, {"content": "```\ndef decorator(target):\n    \"\"\"Turns `target` into a decorator.\n    \n    `target` must be a callable that has a signature such as:\n    ```\n    @decorator\n    def example_decorator(target, *args, **kwargs):\n        ...\n    ```\n    or\n    ```\n    @decorator\n    def example_decorator(target):\n        ...\n    ```\n    This decorator can then be used like so:\n    ```\n    @example_decorator(*args, **kwargs)\n    def example_function():\n        ...\n    ```\n    or\n    ```\n    @example_decorator\n    def example_function():\n        ...\n    ```\n    \"\"\"\n    if not callable(target):\n        raise TypeError(type(target))\n    sig = inspect.signature(target)\n    params = sig.parameters\n    # Check if there is only one parameter, meaning that it is a bare decorator.\n    if len(params) == 1 and first(params.values()).kind != param.VAR_KEYWORD:\n        @wraps(target)\n        def _wrapped(decorator_target):\n            if (result := target(decorator_target)) is not None:\n                return result\n            else:\n                return decorator_target\n        return _wrapped\n    else:\n        @wraps(target)\n        def _wrapped(*args, **kwargs):\n            def inner(decorator_target):\n                if (result := target(decorator_target, *args, **kwargs)) is not None:\n                    return result\n                else:\n                    return decorator_target\n            return inner\n        return _wrapped\n```\nHere's a decorator decorator, so you can decorate your decorators to make creating decorators easier.", "id": "iaqpmjb", "parent": "t1_iaorr1v", "vote": 8}, {"content": "Also functools wraps makes it even harder to grok", "id": "iaou7ls", "parent": "t1_iaorr1v", "vote": 10}, {"content": "What do you have trouble with in Python? Is it just a matter of where the function gets defined?", "id": "iap8j77", "parent": "t1_iap4s8f", "vote": 2}, {"content": "Do you mind if I ask what job requires both Python and JavaScript? I like both languages but haven't often seen both in a job listing together.", "id": "iap67e9", "parent": "t1_iap4s8f", "vote": -1}, {"content": "Really! If you had read my [article on `enumerate`](https://mathspp.com/blog/pydonts/enumerate-me), you would already know this by now ;)", "id": "ibcjiwp", "parent": "t1_iaq4uut", "vote": 2}, {"content": "Sadly, no.", "id": "iariidp", "parent": "t1_iaqq5y8", "vote": 5}, {"content": "[deleted]", "id": "iar3hzl", "parent": "t1_iaqq5y8", "vote": -12}, {"content": "I think the following does the trick: (corrected)\n\n`filter(lambda x: (x[0] - start) % step == 0, enumerate(list, start=start)`\n\nOld:\n`filter(lambda x: x % step == start, enumerate(list, start=start)`", "id": "iarwqxo", "parent": "t1_iaqq5y8", "vote": 1}, {"content": "I love how you can use abstraction to stack things very elegantly.", "id": "iaqqi7g", "parent": "t1_iaohjf3", "vote": 6}, {"content": "I love writing simulations in python as pygame is so easy to use to draw basic stuff to the screen but it\u2019s so damn slow no matter how optimised it is it will never be able to run a lot :(", "id": "iap4k4o", "parent": "t1_iaohjf3", "vote": 0}, {"content": "See, I\u2019ve never coded in anything else so I\u2019m oblivious as to how slow it is comparatively. I like it this way. It\u2019s like keeping an LA-er in their own little bubble and never showing them what non-toxic traffic is like.", "id": "iar4srp", "parent": "t1_iaohjf3", "vote": 1}, {"content": "I wish there was a decent GUI framework for it.", "id": "iarn2iz", "parent": "t1_iaohjf3", "vote": 1}, {"content": "Definitely easier to go from C++ to Python than the other way around. HMU if you have any C++ questions. Happy to help.", "id": "iaog8p0", "parent": "t1_iaoft6b", "vote": 14}, {"content": "I don\u2019t know your reasons to peek C++, but have you considered Rust? Saves you a lot of headache.", "id": "iap07mb", "parent": "t1_iaoft6b", "vote": 4}, {"content": "I have to admit, at first there were things I didn't like and there are things I still don't care for. The indents. I think brackets are easier but what fun would life be without the \"unexpected indent\" error. I probably prefer brackets because most languages require them. \n\nI didn't like not having to declare variables at first, but there are way too many types so I'm happy to let the interpreter figure that business out for me. What I really like about Python are tuples and lists. That alone made me a fan. The only language I can think of that does lists better is LISP. And that language was a nightmare because you can ONLY use lists. Everything is a list. Yes, everything, even the code is a list. The crazy days of experimental languages. \n\nOne of the things I used to do in C++ but will now go out of my way to do in Python is handling GPIO buttons. OMG what a breeze. It practically does the interrupt handling for you. The hardest part was figuring out a good bouncetime. So not hard.\n\nIncluding college, I probably know 30 different languages. Most of them are obsolete. I was great in Delphi (think VB, but Pascal instead of BASIC). You probably never heard of it but it was awesome for its time. I was great with Xbase too. Nobody uses it anymore because OOP became the thing and the language wasn't used on anything bigger than desktops. \n\nI could go on forever. I still get excited about diving into a new language even if I procrastinate actually doing it for years. Let's face it. Programmers are lazy. That's why we automate stuff for a living.", "id": "iar4wmv", "parent": "t1_iaqqbub", "vote": 1}, {"content": "You know I never went for a *python developer* position. I always tried to stay on academic (or in general on research) side. What happened is just lots of disappointments and a life of underpayment. Only good thing is that my exploitation made me learn lots of R, Python and some JS framework stuff. My hands are itching so much right now to apply to a developer position.", "id": "iapgblf", "parent": "t1_iap480k", "vote": 6}, {"content": "I have a Linux server in Azure and I access it using SSH. So, suppose I have a large file in my Linux server which I want to copy/download to my local computer. I can do it using SSH but its very slow and takes lots of time. So what I do is, start a simple http server using `python3 -m http.server` and then I download that large file using that http server address from my local computer. Its very fast!\n\nNote: **don't** use this method for important or confidential stuffs as you will open insecure http port to the internet...So, better encrypt those files first then use this method..or, use some other secure methods.", "id": "iapqna3", "parent": "t1_iapkrfw", "vote": 29}, {"content": "The HTTP server method starts a web server on your machine and lets you share files from a directory of your choice. Users on other machines can then use their browsers to download those files.\n\nThe SSH method is called SFTP. It let's you download files from other machines via SSH.\n\nThe latter is the preferred method because it's encrypted.", "id": "iapsoue", "parent": "t1_iapkrfw", "vote": 5}, {"content": "As others have said, it starts up a simple web server.  Any device that can browse the web can download files.\n\nFor example, I keep my e-books on my home computer and suppose I want to transfer one to my tablet.    On my computer, I'll just go to my e-book directory and start up a web server (by default on port 8000, but you can\nspecify).\n\n>  cd /mnt/me/diskstation/ebooks\n\n>  python3 -m http.server\n\nThen on my phone/tablet/reader, I can browse to that server location and download/browse anything from the directory/subdirectory where I started the webserver.  So, if my home computer's local IP address is 192.168.0.213 (which you can get from \"ip addr\" if you don't know it), then on my tablet's browser I'll go to  http://192.168.0.213:8000  and I can browse through the ebooks and download any of them.", "id": "iaq9dgi", "parent": "t1_iapkrfw", "vote": 4}, {"content": "It's not posting, it's getting. The server is started  on the machine with file(s) / folders. That server responds with a basic html page with fileindexes, which are just accessed with a click", "id": "iaq1aa6", "parent": "t1_iapqeok", "vote": 3}, {"content": "Ok, I think I see. Thanks!", "id": "iaskr63", "parent": "t1_iaqg4zv", "vote": 1}, {"content": "Is it? Anything after the `:` in a format placeholder is passed to the `__format__` method of the type. Why would that be implemented differently on different machines?", "id": "iarg2i1", "parent": "t1_iaqpk7y", "vote": 3}, {"content": "Don\u2019t use map and filter - Guido wanted to remove them (and reduce) but left them in because of pushback. Generators are better https://www.reddit.com/r/Python/comments/v1rde4/whats_a_python_feature_that_is_very_powerful_but/iaqtsxb\n\nAs far as reduce\u2026 that\u2019s black magic and requires a pen and paper to figure out what the heck is going on.", "id": "iar001n", "parent": "t1_iaplcj3", "vote": 1}, {"content": "You are 100% correct with \"only in the need of maintaining order of insertion\". Just to elaborate a bit more for others, a key difference is that OrderedDict will enforce the order for equality comparison.\n\n    OrderedDict([('a',1),('b',2)]) != OrderedDict([('b',2),('a',1)])\n    {'a':1,'b':2} == {'b':2,'a':1}\n\nbut\n\n    OrderedDict([('a',1),('b',2)]) == {'a':1,'b':2} == {'b':2,'a':1}", "id": "iaq0s05", "parent": "t1_iaoe098", "vote": 9}, {"content": "Note that since Python 3.6 (CPython specifically, though other interpreters may do so as well - but 3.7 made it official) dictionaries are ordered as-is.", "id": "iaoktlk", "parent": "t1_iaodf1g", "vote": 3}, {"content": "Namedtuples don't play nice with Pickle (it can't find the original class, so synthesizes a new one, which can be a problem if you need the original), and by extension anything that uses Pickle, like multiprocessing or shelve.\n\nEdit: looking at the code (I was trying to find the mad codegen stuff mentioned before), it looks like they've fixed, or at least tried to fix, this stuff in the most recent versions. So my memories of problems pickling namedtuples may just be baggage from working with older versions.", "id": "iarej31", "parent": "t1_iaphldm", "vote": 3}, {"content": "If you look at the docstring for `collections.namedtuple`, it returns a generated subclass of `tuple` that's executed whenever you make a call to `namedtuple`. This [blog post](https://codefying.com/2019/05/04/dont-get-in-a-pickle-with-a-namedtuple/) summarizes one such example of where this results in undesirable behavior.", "id": "iapusk8", "parent": "t1_iaphldm", "vote": 2}, {"content": "That\u2019s new to me: thanks. Looks very similar to a data class? Any comments on when to use either?", "id": "iapqwd5", "parent": "t1_iapab8f", "vote": 1}, {"content": "Don't import external crap you don't need.  Stick with core python libraries which are tested and released together.  My guideline is if you can write less than 50 lines of code to avoid importing an external package, do it.  Dependencies had a cost associated with them.  I ran across this a couple of weeks ago and thought it had useful info.  [https://adamj.eu/tech/2021/11/04/the-well-maintained-test/](https://adamj.eu/tech/2021/11/04/the-well-maintained-test/)\n\nSpecifically, click doesn't really offer useful functionality that isn't available in argparse.  I've wasted a lot of time having to deal with dependency problems.  I inherited some code that used click and it was a nightmare to make some changes because of how click worked.  I had to write some really obtuse code.", "id": "iat4owm", "parent": "t1_iarqiyi", "vote": 1}, {"content": "I see. Cool. Thank you", "id": "iaoau6b", "parent": "t1_iaoai78", "vote": 3}, {"content": "    while True:\n        result = func()\n        if result is None:\n            break\n        else:\n            # do something with result\n\nIs more readable. While let is great in rust. Meanwhile walrus is just awkward in python.\n\nAlso func is doing something extremely funky here and should be probably rewritten as an iterator.", "id": "iaopiwq", "parent": "t1_iaoai78", "vote": -4}, {"content": "How about not reinventing for loops?\n\n    for line in file:\n        \u2026 # do something with line", "id": "iaonfgz", "parent": "t1_iaoe695", "vote": 4}, {"content": "Is there a transcript for someone who doesn't want to watch a video?", "id": "iaolqy4", "parent": "t1_iao9qmh", "vote": 5}, {"content": "It's way more useful in loops, because very often you're forced to downgrade to a `while True` pattern without the walrus:\n\n```\nwhile True:\n    line = file.readline()\n    if line is None:\n        break\n    # Do things with the line\n```\n\nRather than the more straightforward:\n```\nwhile (line := file.readline()) is not None:\n    # Do things with the line\n```\n\nEDIT: fixed None check and syntax", "id": "iaoiih7", "parent": "t1_iaoclet", "vote": 9}, {"content": "Very pythonic", "id": "iaodwqm", "parent": "t1_iaoclet", "vote": 3}, {"content": "I'd argue it saves something far more important than loc, it saves cognitive load. saves one name/scope have to keep in mind.  \n\n\"if item :=\" means item is only relevant within the if block.  Outside that block I can forget about it. Inside block I can use it and not worry about side effects to code outside.\n\nitem = \\n if item, may or may not mean item is only relevant within if block. I have to check, future devs may use it elsewhere (below) when it shouldn't be.", "id": "iaq01fd", "parent": "t1_iaoclet", "vote": 1}, {"content": "Marshmallow only handles runtime type checks AFAIK. Dataclasses work similarly to typedicts but require the object be instantiated as a class (string access does not work, for example) \n\nI believe pydantic is indeed best-in-class for this but haven't used it personally.", "id": "iaooeck", "parent": "t1_iaonitg", "vote": 5}, {"content": "You can do intersection types via [typing.Protocol](https://docs.python.org/3/library/typing.html#typing.Protocol) and multiple inheritence.\n\nThe example given in [PEP 544](https://peps.python.org/pep-0544/#unions-and-intersections-of-protocols):\n\n    class HashableFloats(Iterable[float], Hashable, Protocol):\n        pass\n    \n    def cached_func(args: HashableFloats) -> float:\n        ...\n\n    cached_func((1, 2, 3)) # OK, tuple is both hashable and iterable", "id": "iapbhh4", "parent": "t1_iaoyqaj", "vote": 3}, {"content": "Don't tell them about cast / Any / assert \ud83d\ude01\ud83d\ude05\ud83d\ude48", "id": "id3tai4", "parent": "t1_iao7fj2", "vote": 1}, {"content": "I think you can avoid this by importing \u201cannotations\u201d from _future_", "id": "iaouvn7", "parent": "t1_iaos6vt", "vote": 13}, {"content": "Ah thanks! I always liked having the class member hints after i did the typing.", "id": "iaslegz", "parent": "t1_iasayfa", "vote": 1}, {"content": "Usually when I am trying to find something in sequence, but it might not be there. It avoids having to set a `found = True` variable to test after the loop finishes.", "id": "iar1mih", "parent": "t1_iapp1z5", "vote": 2}, {"content": "> No, it doesn't do that, and this is why you shouldn't use for...else in python. It unconditionally runs the else block when the for loop ends.\n\nWhat?  No it doesn't.\n\n    for i in range(10):\n        if i == 5:\n            break\n    else:\n        print(\"Else in for 1\")\n\n\n    for i in range(10):\n        pass\n    else:\n        print(\"Else in for 2\")\n\nProduce:\n> Else in for 2", "id": "iaorgzo", "parent": "t1_iaopqgb", "vote": 3}, {"content": "Then how is it different from just writing the statement without else?", "id": "iaosxkp", "parent": "t1_iaopqgb", "vote": 2}, {"content": "yeah, I feel like a forelse keyword would make slightly more sense or at least make it obvious what it's referring to.", "id": "iaokkwx", "parent": "t1_iaoj2aj", "vote": 1}, {"content": "Yes `else` can convey the wrong message. I wish it was called `endfor` :P", "id": "iaotvc4", "parent": "t1_iaoj2aj", "vote": 0}, {"content": "I understand your point. My difficulty with it is that, it is not the for loop 'condition' that determine if the else section is executed or not, it's the break!\n\nThat's why I think of it as 'if_not_break' or 'if_loop_completed'", "id": "ib5n15f", "parent": "t1_ib5aknt", "vote": 1}, {"content": "I'm probably going to change this to a filter but I used it in a first draft this morning.\n\nCalling an API that returns a list of users.  Each use has a list of groups they belong to (each group is a dict).  I want to do something for each user unless they are in a particular group.\n\nSo:\n\n    for user in users:\n        for group in user['groups']:\n            if group['name'] == 'Ignore':\n                break\n        else:\n            # Do the thing\n\nSo, if the user isn't in the group then the loop won't `break` and thus the `else` is executed.\n\nAs said, what I will probably convert it to is something like:\n\n    for user in filter(not_in_test_group, users):\n        # Do the thing\n\nSince it is more obvious what is going on.", "id": "iaq08wy", "parent": "t1_iapp2s8", "vote": 1}, {"content": "Well, using comprehensions is doing a deep copy, while the * on nested lists only makes a shallow copy", "id": "iap1dbl", "parent": "t1_iaotwv8", "vote": 7}, {"content": "Yep, learned that the hard way while I was working on Advent of Code 2021. I was mapping straight lines on a 2D array by incrementing elements by 1, but for some reason if the first line updated, all of them did.\n\nTook me an hour to figure out why, since it was before I understood how pointers worked.", "id": "iaqrn8f", "parent": "t1_iaotwv8", "vote": 1}, {"content": "Yeah I figured that out the hard way. I often have to pre-declare multiple variables with the same size numpy array and tried the \n\n`a,b,c = [np.zeros((5,5))]*3 \n`\n\nOnly for it to all spit out garbage. Have to use a weird list comprehension now. \n\n`a,b,c = [np.zeros((5,5)) for i in range(3)]\n`", "id": "iaqrw02", "parent": "t1_iaotwv8", "vote": 1}, {"content": "I know it'd be the first one of it's a numpy array, and the second one of it's a python list.\n\nI agree I wouldn't get too smart with it. But for generating a list of n zeros for example, how else would you do it?", "id": "ias7nzl", "parent": "t1_ias78qg", "vote": 1}, {"content": "Yes, i like to use it for all kind or reorganizing of data structures in one line. You can even use nested list/dict comprehesion - but then it gets unreadable. Something like:\n\n`{a:b for a,b in zip( [y for y in z1], [y for y in z2])  }`", "id": "iard2ep", "parent": "t1_iaqh8y6", "vote": 2}, {"content": "r/AnarchyChess has invaded the whole of Reddit lol", "id": "iaodcxo", "parent": "t1_iao7egy", "vote": 9}, {"content": "Could you not still use your own custom class with those methods defined, but use state to know which methods can be called once you\u2019ve worked out tge semantics?\n\nI\u2019m sure in your use case it made sense, but it feels like a thing you can do but not a thing you should do!", "id": "iap7qep", "parent": "t1_iap75q1", "vote": 3}, {"content": "The typical usecase is running code that you did not write yourself (otherwise, why not just execute the code itself). And eval allows for execution of arbitrary code, which is bad. (Arbitrary code might be: download ransomware and run it)\n\nIt's very difficult to prevent eval from executing unsafe code: https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html\n\nThe safe alternative is [`ast.literal_eval`](https://docs.python.org/3/library/ast.html#ast.literal_eval).", "id": "iarfwkw", "parent": "t1_iare011", "vote": 3}, {"content": "You could also theoretically use the walrus operator but at that point it could be quite confusing and have diminishing returns:\n    while (x, y) := next(g) == (0, 0):\n        # do things", "id": "ib5qiem", "parent": "t1_ib5p130", "vote": 1}, {"content": "Yes this is exactly what I was referring", "id": "iasmfon", "parent": "t1_iarjb81", "vote": 1}, {"content": "There's zero chance of UNIX systems ever losing fork().\n\nfork()+exec() is a great design and it's much more flexible and extensible than the CreateProcess mechanism that Windows depended on.\n\nOther than allowing fork() to create worker processes, the forking model means that as the system grows more features, subprocesses configuration (e.g. setting up pipes, shared memory, dropping permissions) can be implemented as separate system calls instead of bloating infinite number of features into a single CreateProcess call. And it also means that you don't need to create separate system call for when you need to use the feature across process boundary and for internal process use.", "id": "iaqnu2x", "parent": "t1_iapztxs", "vote": 2}, {"content": ">It\u2019s practically guaranteed that the child process will not need a copy of 100% of the data used by the parent process.\n\nGood thing copy-on-write negates the need to allocate any new memory during the fork, it's not inefficient in the slightest. What is inefficient is explicitly copying data needlessly, or worse any form of IPC (that isn't shared memory) for the cases where copy-on-write is a good solution.\n\nThe return value of fork() is either zero for the child, or the child pid for the parent. You can SIGSTOP the child, SIGCONT to resume, waitpid() for it to complete, or even SIGKILL it as your heart desires. If you're concerned about zombies, then follow the clear examples of using fork() with setsid() and move on with your life (eg: https://wikileaks.org/ciav7p1/cms/page_33128479.html). You can do all the things multiprocessing does and more if the syscall primitives remain accessible.\n\nPython's soul is that early on it gained thin wrappers around many POSIX syscalls, making it incredibly easy to get stuff done. If you don't want to use them, that's on you. If you're concerned that fork is a footgun for us mere mortals, then what should we do with unlink()?\n\nIn any case, please quit dumping on the rest of us with statements like this:\n>Rather than lazily counting on the interpreter to copy all do the data used by the parent...\n\nHere you have shown your ignorance on the matter - fork() with copy-on-write is effectively a memory no-op that results in zero page allocations, and is handled by the kernel instead of the interpreter. Which is what makes fork() so damn useful...", "id": "ib1h4zp", "parent": "t1_ias3v0p", "vote": 1}, {"content": "What is a multi-representer? Not sure I understand what you are doing here. \n\nWhat are you given and what do you want from it?", "id": "iat3k81", "parent": "t1_iarhnk4", "vote": 1}, {"content": "I\u2019m doing physics research - in my case, the function I pass in as an argument to my code represents some kind of update step that I apply to the system I\u2019m simulating. By changing the function I can simulate different systems. Doing it this way allows me to entirely separate the simulation code from the code describing the system, making it more flexible and more reliable, which is great.", "id": "iasyatd", "parent": "t1_ias4wsa", "vote": 4}, {"content": "Very useful for e.g. a function which solves differential equations, then it can take as an argument the function which describes the equation to be solved.", "id": "iark0o5", "parent": "t1_iarc189", "vote": 6}, {"content": "Yeah, but you can't do multiple lines of execution with lambdas.\n\nThat's also one of the issues I take with lambdas. There is no syntax that allows to extend them to multiple lines, meaning that if you need functionality that requires multiple lines, you need to extract it to somewhere else. Which is probably for the best, but in  other languages, you can just define the lambda in within the arguments of a function call and it all works out.", "id": "iaqota8", "parent": "t1_iapu5y7", "vote": 3}, {"content": "This made me forget what a decorator is lmao", "id": "iaqwlvm", "parent": "t1_iaqpmjb", "vote": 2}, {"content": "Yo, dawg, I heard you like decorators, so I made a decorator, that makes decorators.", "id": "ir2c2we", "parent": "t1_iaqpmjb", "vote": 1}, {"content": "How? It keeps your stacktrace sane", "id": "iaq5v1w", "parent": "t1_iaou7ls", "vote": 3}, {"content": "It's not that I have trouble - it's that it's more elegant. Implicit returns are really nice for HOFs:\n\n```\n// Contrived example, yes, but illustrates the syntax\nconst curriedTernaryAdder = x => y => z => (x + y + z);\n\ndef curried_ternary_adder(x):\n  def inner(y):\n    def really_inner(z):\n      return x + y + z\n    return really_inner\n  return inner\n```\n\nI could do this with lambdas, but it's still kinda messy:\n\n```\ncurried_ternary_adder = lambda x: (lambda y: (lambda z: x + y + z)))\n```\n\nBut I don't particularly fault python for this, because I don't tend to write this kind of code in python.", "id": "iapsvzr", "parent": "t1_iap8j77", "vote": -2}, {"content": "Any full stack development job that has python in the backend.\n\nIn my case, I work 90% with python and typescript these days", "id": "iap73lg", "parent": "t1_iap67e9", "vote": 7}, {"content": "In addition to the obvious case (JS frontend/Python backend), many larger firms will have developed codebases over time containing multiple languages and frameworks serverside, so you'll encounter places with some services running in Flask and others in Node/Express.", "id": "iapl0km", "parent": "t1_iap67e9", "vote": 2}, {"content": "That's `range`, not `enumerate`.", "id": "iar3t0m", "parent": "t1_iar3hzl", "vote": 9}, {"content": "No, it doesn't.", "id": "ias0s7e", "parent": "t1_iarwqxo", "vote": 1}, {"content": "Python sucks for hot loops, afaik mostly because there's hardly any optimisation that you would get with a compiled lang. \n\nI have had some great results with Cython when messing with it (optimise just the slow parts) but I don't know how well it plays with pygame tbh.", "id": "iapbwqt", "parent": "t1_iap4k4o", "vote": 3}, {"content": "Plus the PyO3 crate is sweet and easy to use.", "id": "iapv93a", "parent": "t1_iap07mb", "vote": 2}, {"content": "[deleted]", "id": "iaqnpb9", "parent": "t1_iap07mb", "vote": 1}, {"content": "I started on VB. Early 2009. I can't remember the exact number of languages I've tinkered with, but I would guess at least 11. I really like C++ and Rust, and I used to love C#, but ultimately Python ends up winning my heart most often because it's really easy to make code toys with. I use programming as a source of entertainment. So I really love being able to do abstract stuff.\n\nI have a really powerful computer, so I'm certainly not hurting for performance with this thing. I would say that single threaded Python on my PC is faster than multi-core processing with C/C++ on my computer that I learned programming on. And I'm sure you could say say the same. In fact, I wouldn't be surprised if my computer were nearly powerful enough to emulate my original computer with Python. So I don't really see much reason to use systems languages to make my toys unless the toys I'm making are doing highly optimized stuff. Ideally, I would like a hybrid language that is a systems language, but also allows you to do highly abstracted code.", "id": "iar8890", "parent": "t1_iar4wmv", "vote": 2}, {"content": "That is so sick! I wonder if I can do that with my remote servers at my lab. Do you use cp, rsync, scp, or something else. Can you give an example of what the copy command looks like and where you put the localhost bit?", "id": "iaps05x", "parent": "t1_iapqna3", "vote": 14}, {"content": "Good news friend! If you like that, you\u2019re gonna love [Magic Wormhole](https://github.com/magic-wormhole/magic-wormhole)", "id": "ichiube", "parent": "t1_iapqna3", "vote": 2}, {"content": "Wouldn't just using rsync be faster, easier, and more secure?", "id": "iar8akl", "parent": "t1_iapqna3", "vote": 0}, {"content": "yeah, but don't do this with data you don't want other people to see, unless the files themselves are encrypted.", "id": "iaq1ivz", "parent": "t1_iapqna3", "vote": 1}, {"content": "SFTP is overkill if you\u2019re just transferring a single file. SFTP adds all of the FTP infrastructure: directory listing, directory creation, moving files\u2026 etc.\n\nSCP is the one-shot transfer-file-via-SSH equivalent. Much faster and better when all you need to do is to transfer a file.\n\n[More info here.](https://www.maketecheasier.com/scp-vs-sftp/?amp)", "id": "ias5p22", "parent": "t1_iapsoue", "vote": 2}, {"content": "Yep! This is it. It allows easily downloading files from a web browser", "id": "iaqglbx", "parent": "t1_iaq1aa6", "vote": 1}, {"content": "But does OrderedDict have extra features that dict doesn't?", "id": "iaoseqe", "parent": "t1_iaoktlk", "vote": 1}, {"content": "I highly agree with you and based on your link, I\u2019d say click is a great candidate. I still appreciate your explanation and really enjoyed your pointer. Every single import should be carefully evaluated. I guess you seem to have a very high bar though, if you rather write 50 lines over importing something like click. I\u2019m curious: what 3p packages do you regularly import passing that bar?", "id": "iatx582", "parent": "t1_iat4owm", "vote": 1}, {"content": "If as in some math circles you interpret `:=` as \u201cdefined as\u201d, e.g. \u201cwhile result defined as func()\u201d, then I find it readable enough", "id": "iaorb0c", "parent": "t1_iaopiwq", "vote": 11}, {"content": "I think it's decidedly less readable. while True is informationless, looks like a bug. Have to dig into the body to determine what is/are the stop conditions, it uses up much more vertical space (reducing amount of code you can consider at once). \n\nWhile <cond>: puts the stop condition(s) in known place, right at top. := op eliminates all the extraneous boilerplate enforced only because of syntax.", "id": "iapzg35", "parent": "t1_iaopiwq", "vote": 1}, {"content": "This was just an example from the top of my head. Didn't know you can just iterate file like this. Some things don't have such convenient API though.\n\nBetter example would be something like list comprehension with filtering:\n\n    a = [item for x in collection if is_good(item := slow_function(x))]", "id": "iaoup24", "parent": "t1_iaonfgz", "vote": 1}, {"content": "This is much more straightforward:\n\n    for line in file:\n        # Do things with the line\n\nAlso empty strings are falsy, so your first example is not equal to you second example", "id": "iaova5j", "parent": "t1_iaoiih7", "vote": 3}, {"content": "Er, I think `line := file.readline() is not None` , assuming that's even valid syntax, would just save the boolean output of the `is not None` expression to the `line` variable.\n\nIf `file.readline()` either returns  Nonetype  or a line object, then while `line := file.readline()` would be ok, I think. But I think just iterating over the lines in a file is probably easier.", "id": "iap2yds", "parent": "t1_iaoiih7", "vote": 1}, {"content": "Yep Pydantic would do exactly what you\u2019re describing. As someone who uses it extensively to perform data validation as well as have a nice interface with external systems, I strongly recommend it to everyone I can!", "id": "iapm3eq", "parent": "t1_iaooeck", "vote": 6}, {"content": "But that's just super inconvenient and verbose. I want to be able to do things inline like\n\n`def foo(x: Hashable & Container) -> ...`", "id": "iape74p", "parent": "t1_iapbhh4", "vote": 5}, {"content": "I believe this requirement will be phased out in python 3.11.", "id": "iapyt1i", "parent": "t1_iaouvn7", "vote": 1}, {"content": "Oh, I see!", "id": "iaothw4", "parent": "t1_iaorgzo", "vote": 3}, {"content": "Yes, it unconditionally ran `else` block in the second loop when the loop finished.", "id": "iaotp0m", "parent": "t1_iaorgzo", "vote": -5}, {"content": "[deleted]", "id": "iaotf94", "parent": "t1_iaosxkp", "vote": -3}, {"content": "I remember watching a YouTube video where Raymond Hettinger was talking about the else clause on for loops and how he said he wished they had called it `nobreak` or something like that because it more accurately represents what it does.", "id": "iapq08p", "parent": "t1_iaokkwx", "vote": 4}, {"content": "But it kinda is, the break means the condition was never evaluated to be false. But i definitely understand where you're coming from. When i first saw that syntax i thought it means \"if the for block was never executed, call else block\"", "id": "ib5o5qx", "parent": "t1_ib5n15f", "vote": 1}, {"content": "This is simple and unambiguous:\n\n    a = list(0 for _ in range(n))", "id": "ias8ynq", "parent": "t1_ias7nzl", "vote": 1}, {"content": "Not sure I understand your suggestion? Sounds like the parallel tree approach.", "id": "iapefvh", "parent": "t1_iap7qep", "vote": 2}, {"content": "surprisingly, you can't tuple assign with the walrus.", "id": "ib5tzgm", "parent": "t1_ib5qiem", "vote": 1}, {"content": "Congratulations! You described the configuration process in a nutshell. That's how all systems should be written.", "id": "id8fyex", "parent": "t1_iasyatd", "vote": 1}, {"content": "Just to nitpick for the sake of precision, it isn't so much about \"lines\" as it is that a lambda can only contain a statement that is [an expression](https://docs.python.org/3/reference/expressions.html). There are plenty of single line statements that you can't use in a lambda, like assignments, returns, conditional blocks and loops (they can be single lines), asserts, etc.", "id": "iaqxsal", "parent": "t1_iaqota8", "vote": 2}, {"content": "Thanks, I'm looking to be mainly backend because my eye for designing UI sucks, but I may just start looking for jobs requiring both Python and JavaScript on the backend.", "id": "iap7gi2", "parent": "t1_iap73lg", "vote": 1}, {"content": "Oye. Totally misread it. My bad.", "id": "ias408j", "parent": "t1_iar3t0m", "vote": 1}, {"content": "What exactly is your use case? I tested with a a simple list with step =2 and it worked fine", "id": "ias1hwm", "parent": "t1_ias0s7e", "vote": 1}, {"content": "By optimisation I meant mainly algorithmic optimisations such as linesweep and such from my first iterations I did actually manage to get a kind of respectable amount of progress from it but compared to even c# it\u2019s slow", "id": "iapc51n", "parent": "t1_iapbwqt", "vote": 0}, {"content": "Yeah, initially rust was way more batshit insane for me to try and learn than c++, but the end result feels better.", "id": "iarh76d", "parent": "t1_iaqnpb9", "vote": 1}, {"content": "First thing first, its an **insecure** method since you open your http port to access files from the internet. So, don't use this method for secure stuffs. Or encrypt files before using this method. For me I use this method to download movies from my remote server. So, I don't have to worry about security...\n\nNow, follow those steps:\n\n1. On your remote server, go to the directory where your file/files are and open terminal there.\n2. Run the command `python3 -m http.server` and your http server will start at port 8000(default port).\n3. Now on your local computer, open http://your-remote-server-ip:8000 on browser. And from there you can access/download all files from the directory you started the http server.", "id": "iaq5ce2", "parent": "t1_iaps05x", "vote": 14}, {"content": "It's wildly insecure. You shouldn't keep it online for more than you need to.\n\nJust set up an ngnix autoindex server instead.", "id": "iaq1aww", "parent": "t1_iaps05x", "vote": 2}, {"content": "You can only do it if the server is exposed to the outside, which isn't usually the case for lab servers, and as u/PolishedCheese wrote it's wildly insecure. However you can use software like FileZilla or WinSCP to transfer files securely and with a nice graphical interface.", "id": "iaq1ush", "parent": "t1_iaps05x", "vote": 2}, {"content": "To answer your question\n\n```python -m http.server --bind 127.0.0.1 --directory /path/to/share/```", "id": "iaqrkvy", "parent": "t1_iaps05x", "vote": 1}, {"content": "Well, there are literally hundreds of ways to do so. I just find this method more handy! Not everyone wants to go through the setup process of rclone and also, not everyone is familiar with it!", "id": "iarbfer", "parent": "t1_iar8akl", "vote": 1}, {"content": ">but don't do this with data you don't want other people to see\n\nThat's true! But, for me its just movies, so no need to encrypt it!", "id": "iaq305h", "parent": "t1_iaq1ivz", "vote": 1}, {"content": "that all makes sense! I was slightly following [Cunningham\u2019s law](https://meta.m.wikimedia.org/wiki/Cunningham%27s_Law): \u201cCunningham's Law states \"the best way to get the right answer on the internet is not to ask a question; it's to post the wrong answer.\" Thanks for your corrections!", "id": "iau6be7", "parent": "t1_iaqglbx", "vote": 2}, {"content": "The main difference is that OrderedDict considers order when checking for equality, while a plain dict doesn't.", "id": "iaq4vfp", "parent": "t1_iaoseqe", "vote": 1}, {"content": "Interesting.  Based on my interpretation ofthat document, click offers no value.  Perhaps I've just suffered too much pip install hell.\n\nrequests is standard and used often.  For non-specific packages, eg non mysql, django, celery, ansible, etc, I've used prettyprint for formatting tables, filelock (although for some simple cases I've used simple locks).\n\nI abhor pytest and was happy to see unittest/mock as part of the core python release.\n\nI really wish they would fix packaging.  Learning about packaging is still spread across several different major tools and I have not wrapped my head around all of it yet.", "id": "iatysqk", "parent": "t1_iatx582", "vote": 1}, {"content": "Because there is a bug in architecture where some func returns None instead of raising StopIteration and it should be treated like one.\n\nAnd if you are so adamant on writing one liners:\n\n    for result in iter(func, None):\n        # do something with result", "id": "iar1kx7", "parent": "t1_iapzg35", "vote": 1}, {"content": "That\u2019s my main problem with walrus operator - it\u2019s got such a narrow scope. 99.9% of examples are better solved other way. And in my opinion language should not provide means to steer around bad architecture decisions cause it would encourage to create more of them.\n\nAs for your new example i would write it this way:\n\n    a = (slow_function(x) for x in collection)\n    a = [item for item in a if is_good(item)]", "id": "iaox1v1", "parent": "t1_iaoup24", "vote": 3}, {"content": "Huh, didn't know files were iterable. Anyways, it's still useful when you have a similar pattern where you can't just iterate over an object.", "id": "iaoy3gy", "parent": "t1_iaova5j", "vote": 1}, {"content": "Yep fixed. File iteration isn't the best example but it illustrates the point: often you need to call a function repeatedly, and there is nothing to iterate over.", "id": "iapk03g", "parent": "t1_iap2yds", "vote": 1}, {"content": "Cheers, I know fastapi  uses it and I am dying for an excuse to try it out.", "id": "iapu9kv", "parent": "t1_iapm3eq", "vote": 2}, {"content": "Totally agree. Just saying that it is possible.", "id": "iappobb", "parent": "t1_iape74p", "vote": 1}, {"content": "No, it ran it because it didn't `break` inside the loop.  That's the condition.\n\nI understand it is confusing but it doesn't unconditionally run the `else`.", "id": "iaov3iz", "parent": "t1_iaotp0m", "vote": 6}, {"content": "No, it's just that they don't understand what it does. I partially blame the choice of keyword `else`.", "id": "iaotvso", "parent": "t1_iaotf94", "vote": 2}, {"content": "I\u2019m not familiar with XMPP so I probably have the wrong end of the stick tbh", "id": "iapevnm", "parent": "t1_iapefvh", "vote": 3}, {"content": "Oh no! You're right ![gif](emote|free_emotes_pack|scream)", "id": "ib5v8xb", "parent": "t1_ib5tzgm", "vote": 1}, {"content": "Yeah, exactly. Lambdas in Python just aren't as flexible as lambdas in other languages. But that's a byproduct of Python's indentation syntax.", "id": "iaqyij6", "parent": "t1_iaqxsal", "vote": 3}, {"content": "I don't have a use case.\n\nWith start, you are not modifying where in the sequence `enumerate` starts, you are modifying where the numbers start. So with step, you would also be modifying the numbers spit out by enumerate, but you wouldn't be modifying the items from the sequence that are spit out. \n\n`filter` would filter items out, and also that code wouldn't work for two syntax reasons. The first is that enumerate is a generator that yields `Tuple[int, T]`, so the parameter to the lambda in `filter` would be a tuple, not an int. The other reason is because you do not have the matching `)` at the end of the line.", "id": "ias4ion", "parent": "t1_ias1hwm", "vote": 3}, {"content": "> but compared to even c# it\u2019s slow\n\n.NET (Core) is very fast.  Poor comparison with Python.", "id": "iapuv3h", "parent": "t1_iapc51n", "vote": 3}, {"content": "Yeah, somebody downvoted my comment. It's right here in the documentation. \n\nhttps://docs.python.org/3/library/http.server.html", "id": "iaqr54s", "parent": "t1_iaq1ush", "vote": 2}, {"content": "For some reason didn't see \"in Azure\" on first read... I thought you were talking about local area network machines.", "id": "iardwuz", "parent": "t1_iarbfer", "vote": 1}, {"content": "I think Poetry goes into the right direction. But it will take a while until production industry pipelines have adapted.", "id": "iavtk2m", "parent": "t1_iatysqk", "vote": 1}, {"content": "If you can\u2019t iterate over an object then you can\u2019t do it in neither for nor while loop :)", "id": "iap3idd", "parent": "t1_iaoy3gy", "vote": 0}, {"content": "Hell, I use it everywhere that interacts with 3rd party systems and I\u2019ve even migrated an internal configuration library to use it for expected settings.\n\nIt makes mocking for unit tests much simpler, typing across the codebase becomes much more helpful, and really helps focus on the architecture behind your code since you know exactly what\u2019s present in your models and what validations are in place.\n\nI\u2019d highly suggest it!", "id": "iaq3hzt", "parent": "t1_iapu9kv", "vote": 2}, {"content": "Yeah I have to admit I was confused. I would expect for...else to use the else block only if the for-loop never loops, rather than \"unless break encountered\". I suppose I can see the rationale for the way it is but it's still unintuitive and you shouldn't use it.", "id": "iap3iis", "parent": "t1_iaotvso", "vote": 1}, {"content": "You're right I had 2 mistakes:\n- forgot to add indexing to lambda when writing the comment\n- actually tested with a trivial case so my math was wrong\n\nCorrected in original comment, should be Ok now (only if I missed something else)\n\n\nWe take the index from enumerate (x[0]) subtract the start to make it 0-index(only for filtering), modulo the \"step\" equal to 0 and it should correctly skip over items", "id": "ias8inr", "parent": "t1_ias4ion", "vote": 1}, {"content": "[removed]", "id": "iark4wo", "parent": "t1_iapuv3h", "vote": -1}, {"content": "It looks promising.  I'm tired of having to read four different documents to understand how this all works.  And I've not actually read them end to end, just bits and pieces when I need them.\n\nI've generally mostly written scripts or libraries and now have a project that is a combination of both.  How I chose to do imports makes is extremely difficult to create a library package.  The documentation examples are mostly hello world and I haven't found a good example (or documented use case) to help me get this fixed.  I don't like the idea of manipulating PYTHONPATH, but I think that's the only way out of this.\n\nPointers welcome :-)  Perhaps the Poetry docs cover the entire range of topics and interaction with python import (namespaces and scopes) to be useful.  Seems very frustrating to \"touch dir1/\\_\\_init\\_\\_.py\" and something starts working.  At least I've avoided the horrible practice where people have nested directories with the same name.\n\nDon't get me started on pex!", "id": "iaxlgvk", "parent": "t1_iavtk2m", "vote": 1}, {"content": "Of course you can! I just showed you an example. There are plenty of cases where you're not iterating over an object and you're instead calling a function repeatedly until it yields a falsey value. Without a walrus operator, you have to switch to a `while True` loop.", "id": "iapjslb", "parent": "t1_iap3idd", "vote": 1}, {"content": "It's still filtering. That's not the desired behavior. You should be using map.", "id": "iatcn9k", "parent": "t1_ias8inr", "vote": 1}, {"content": "[removed]", "id": "iaruzbu", "parent": "t1_iark4wo", "vote": 1}, {"content": "    from functools import partial\n    for chunk in iter(partial(file_like.read, 1024), \u201c\u201d):\n        # process chunk", "id": "iaqzdml", "parent": "t1_iapjslb", "vote": 0}, {"content": "The purpose is to replicate the behaviour of step, thus filtering out elements (not executing loop for those)\n\n\nThe idea is to use on:\n\n`for n, element in filter(..., Enumerate()):`", "id": "iatd14t", "parent": "t1_iatcn9k", "vote": 1}, {"content": "I think you're missing the point. Just because you can throw in more machinery to get a solution in fewer lines doesn't mean that you should. Not only does it obfuscate what you're doing but it adds complexity where you don't need any. I'd rather have the few extra lines of boilerplate.\n\nThe walrus operator exists because assigning in conditionals is a zero cost abstraction. It's easy to read, and hard to introduce bugs. Even a beginner could understand it.", "id": "iarwlha", "parent": "t1_iaqzdml", "vote": 0}, {"content": "And you are misunderstanding how that behavior should exist. `step` should not filter out elements in `enumerate`, that would not be the desired behavior. In the same way that the `start` parameter doesn't change the starting item that is enumerated, it is apparent that `start` is not a modifier for the sequence, but is a modifier for the indices. That is to say, a `step` modifier would not modify the elements returned, it would only modify the distance between indices that are yielded by the generator.", "id": "iavskzi", "parent": "t1_iatd14t", "vote": 1}, {"content": "You are talking about walrus in your first paragraph right?\n\nAnd your second paragraph contradicts your first paragraph.", "id": "iasrxz9", "parent": "t1_iarwlha", "vote": 0}, {"content": "Understand what you are saying ![gif](emote|free_emotes_pack|grin), was thinking of a scenario you already have a list and want to iterate through every x items\n\nBut now that I think of it, would just be easier to directly use slicing ![gif](emote|free_emotes_pack|facepalm)", "id": "iavty6y", "parent": "t1_iavskzi", "vote": 1}, {"content": "No, I was actually referring to the usage of functools. It adds unnecessary complexity, while the walrus operator is light syntactic sugar to make certain patterns more Pythonic.\n\nLook man, I can feel how salty you're getting already. It doesn't matter, the walrus operator is in the language now and you can't do anything about it. There's plenty of conversations about the topic if you're actually curious about why it's useful.", "id": "iata1hn", "parent": "t1_iasrxz9", "vote": 0}, {"content": "Unfortunately, slicing returns a new list rather than an iterator, otherwise that solution would work for collections with millions or even billions of entries.", "id": "iaz8lc4", "parent": "t1_iavty6y", "vote": 1}, {"content": "Yes it\u2019s in the language, but nobody is using it (or at least I haven\u2019t seen it in a wild once)\n\nAnd btw walrus is not syntactic sugar: it adds DUP_TOP.", "id": "iatallg", "parent": "t1_iata1hn", "vote": 0}, {"content": "Cool story bro. I have.", "id": "iataof5", "parent": "t1_iatallg", "vote": 1}, {"content": "Good, you may go grab a donut", "id": "iataul4", "parent": "t1_iataof5", "vote": 0}], "link": "https://www.reddit.com/r/Python/comments/v1rde4/whats_a_python_feature_that_is_very_powerful_but/", "question": {"context": "", "id": "v1rde4", "title": "What's a Python feature that is very powerful but not many people use or know about it?"}, "resource": "Reddit"}, {"answers": [{"content": "I'm trying to use pyinstaller to compile a simple python script I wrote so my less technical coworkers can use it. It clicks the next arrow on an excessively long SCORM training web page that we take every year and can pass the quiz at the end 100%.\n\nI import time and pyautogui packages.\n\nFrom there I have a while(True) loop that has...\n\nTry: wait 5 seconds, pyautogui.doubleclick an image of a next arrow, move the mouse away from the arrow with pyautogui, click the mouse once. \n\nExcept TypeError as error:\nPrints working as intended with the current time for visual reference.\n\nMy question is thus: has anyone been able to use pyinstaller and pyautogui together? I have no idea what I'm doing wrong if for everyone else it \"just works\"\n\nWin10 environment on a portable python USB.\n\nAny help/advice would be appreciated.", "id": "fgf05oi", "parent": "t3_exy1ie", "vote": 2}, {"content": "Hi Everyone,  started studying python for my CS degree a couple of months ago, I\u2019ve found that I initially was able to pick up the syntax relatively easy and could write simple scripts without to much trouble, is it just me or has anyone else been able to write code knowing what needed to be put where but not necessarily knowing exactly how it all interacts?", "id": "fgf0dk0", "parent": "t3_exy1ie", "vote": 2}, {"content": "Is there a difference between a list and an array? I see the terms being used interchangeably around here but a Google search makes it seem like there might be some small difference that I'm not quite grasping.", "id": "fgfpqdd", "parent": "t3_exy1ie", "vote": 2}, {"content": "I guess I am having problems between:\n\n    for i in lst\nand\n\n    i for i in lst\nwill someone kindly explain the differences or point me to the threat that does. Thats kindly", "id": "fggjz4c", "parent": "t3_exy1ie", "vote": 2}, {"content": "I need someone with PyOpenGL knowledge.\n\nI'm a total noob and started with a solid rotating cube with six differently colored sides:\n\n    import pygame as pg\n    import traceback\n    import OpenGL.GL as GL\n    import OpenGL.GLU as GLU\n    \n    \n    cubeVertices = (\n        (1, 1, 1), (1, 1, -1), (1, -1, -1),\n        (1, -1, 1), (-1, 1, 1), (-1, -1, -1),\n        (-1, -1, 1), (-1, 1, -1)\n        )\n    cubeQuads = (\n        (0, 3, 6, 4), (2, 5, 6, 3), (1, 2, 5, 7),\n        (1, 0, 4, 7), (7, 4, 6, 5), (2, 3, 0, 1)\n        )\n    colors = (\n            (1, 0, 0),\n            (0, 1, 0),\n            (0, 0, 1),\n            (1, 1, 0),\n            (1, 0, 1),\n            (0, 1, 1)\n            )\n    \n    \n    def draw_solid_cube():\n        color_idx = 0\n        GL.glBegin(GL.GL_QUADS)\n        for cubeQuad in cubeQuads:\n            for cubeVertex in cubeQuad:\n                GL.glColor3fv(colors[color_idx])\n                GL.glVertex3fv(cubeVertices[cubeVertex])\n            color_idx += 1\n        GL.glEnd()\n    \n    \n    def main():\n        pg.init()\n        display = (1024, 768)\n        pg.display.set_mode(display, pg.DOUBLEBUF | pg.OPENGL)\n        clock = pg.time.Clock()\n    \n        GLU.gluPerspective(45, (display[0]/display[1]), 0.1, 50.0)\n        GL.glTranslatef(0.0, 0.0, -5)\n    \n        running = True\n        while running:\n            for event in pg.event.get():\n                if event.type == pg.QUIT:\n                    running = False\n    \n            delta_time = clock.tick(30) / 1000.0\n    \n            rot_angle = delta_time * 50\n            GL.glRotatef(rot_angle, 0.5, 1, 0)\n            GL.glClear(GL.GL_COLOR_BUFFER_BIT |\n                       GL.GL_DEPTH_BUFFER_BIT)\n            draw_solid_cube()\n    \n            pg.display.flip()\n    \n        pg.quit()\n    \n    \n    if __name__ == \"__main__\":\n        try:\n            main()\n        except Exception:\n            traceback.print_exc()\n            pg.quit()\n\nI want it so the sides of the cube don't look \"translucent\" to the viewer.\n\nFrom what I learned, OpenGL draws the Vertices in the presented order, but since the cube is rotating while the order remains the same, some sides are visible that should not be.\n\nIs there any convenience function that re-orders the vertices depending on the angle? None of the tutorials I found covered this. Or do I have to sort the list manually?", "id": "fgi903i", "parent": "t3_exy1ie", "vote": 2}, {"content": "I'm learning networks, e.g. OSI model, TCP/UDP. What are some Python project ideas I can integrate those new concepts into?", "id": "fgeob24", "parent": "t3_exy1ie", "vote": 1}, {"content": "Which IDE/Compiler should I use? I am a completely new beginner to Python so any information is helpful.\n\nAlso, is there an app I can use to code in Python?", "id": "fgepdxx", "parent": "t3_exy1ie", "vote": 1}, {"content": "I am using textblob to read sentences and print out polarity and subjectivity. I have the results, but I am scratching my head on how to output those results into a csv file. Messed around with pandas but not having luck.....\n\nEspecially since I'm trying to create a header, then the results below, with [sentence, polarity, subjectivity] as the format with the results below....", "id": "fgessna", "parent": "t3_exy1ie", "vote": 1}, {"content": "[deleted]", "id": "fgezt66", "parent": "t3_exy1ie", "vote": 1}, {"content": "Is instance is object?", "id": "fgf6s2o", "parent": "t3_exy1ie", "vote": 1}, {"content": "Is there a way to perform an if statement whilst a sleep command is running? At it's basics, I want to turn on an led, sleep for 5 seconds then turn it off and if a button is pressed during the sleep period a message to appear or something similar.", "id": "fgfagbe", "parent": "t3_exy1ie", "vote": 1}, {"content": "I have the result of an SQL-Query, that I save in a pandas Dataframe. In one colum there is a set. I want to translate this into colums of bolean values. So if the set has 3 possible values I want a column for each of the possible values indicating whether the it was present. I managed to do this, but I was wondering if there's a better solution. Here is what I'm doing atm:\n\n    #sample DataFrame \n    d = pd.DataFrame([[0, {'a', 'b'}], [1, {'a'}], [2, set()]])\n    d = d.rename({k:v for k,v in enumerate(['idx', 'set'])}, axis=1)\n    \n    #check\n    vals = ['a', 'b', 'c']\n    for val in vals:\n        d[val] = d.set.apply(lambda x: val in x)", "id": "fgffwgw", "parent": "t3_exy1ie", "vote": 1}, {"content": "Can someone make a super simple selenium .click() tutorial that's verified to work? I seem to be having difficulties getting the command to work properly.", "id": "fgflx1i", "parent": "t3_exy1ie", "vote": 1}, {"content": "Can someone share a python script to send email to a group of people attaching a jpg in the email body? Ideally, the script can send emails using the outlook strawman account, which has no account password; and adjust the size of the picture in the email body.", "id": "fgfodgg", "parent": "t3_exy1ie", "vote": 1}, {"content": "I\u2019m a beginner with Python. I\u2019m stuck with a challenge where I should edit the content of XML file, by finding a string and modify it. The \u201cfind & replace\u201d mappings are defined in a separate CSV file. \nHow to accomplish this?", "id": "fgfs5hm", "parent": "t3_exy1ie", "vote": 1}, {"content": "This is the perfect place for this, I have just started, literally, learning python. And I have a question.\n\nIn my tutorial there was a section on coding a simple game via while loop.\n\nI went ahead, and completed the coding before the tutorial, then went back and checked the tutorial.\n\nThere is a difference in the coding structure, both provide the same response, but my question is what makes the instructor's code better than mine? There must be a reason why it was done the way it was done.\n\n&#x200B;\n\nHere's my code:\n\nsecret\\_word = \"Giraffe\"  \nguess= \"\"  \ncounter = 1  \nwhile guess != secret\\_word and counter <= 3:  \nguess = input(\"Please enter your guess for the secret word: \")  \ncounter += 1  \nif counter >= 3 and guess != secret\\_word:  \n print(\"You are out of guesses, sorry better luck next time.\")  \nelse:  \n print(\" You guessed it!!!!\")\n\n&#x200B;\n\nHere's the code by the insturctor:\n\nsecret\\_word = \"Giraffe\"  \nguess= \"\"  \ncounter = 1  \nlimit = 3  \ng\\_counter = 0  \nout\\_of\\_guesses = False  \nwhile guess != secret\\_word and not(out\\_of\\_guesses):  \n if g\\_counter < limit:  \nguess = input(\"Enter guess: \")  \ng\\_counter += 1  \n else:  \nout\\_of\\_guesses = True  \nif out\\_of\\_guesses:  \n print(\"Sorry you lose this time.\")  \nelse:  \n print(\"You won!\")\n\nMy principal assumption being that the instructor must know better than I do, what I am doing.", "id": "fggb2d0", "parent": "t3_exy1ie", "vote": 1}, {"content": "#Advice for audio manipulation in python?#\nIm a bit of a noob when it comes to coding and software integration so I might need to hire someone to help eventually.  I just want to have a reasonable understanding of what\u2019s available and what would need to be done. I\u2019m trying to sequence sections of audio together and modulate the audio (such as EQ, time stretch, octavate). I can do these functions in my Digital audio workstation (Cubase) but do not want to export the audio from cubase with a bunch of different versions. I just want to bring the base audio file into python and have it modified as needed. Is there anyway to have python integrate with Cubase? Is there any open source code I can bring into python to do these functions? Any help or direction for more research would be very helpful, thanks!", "id": "fggcj9d", "parent": "t3_exy1ie", "vote": 1}, {"content": "Hi, I am trying to solve this problem, can you guys steer me in the right direction? \n\nlets say I bake cakes, and each cake has different ingredients in different amounts and this will change the properties of the cake, for example baking time, consistency, color, etc. I do have the formulas that give me the final properties of the baked cake depending of the ingredients and their quantities, but what I want is an app where I can do the inverse thing, I want to put the final properties and it should give me a valid ingredient list + quantity, but I want to put ranges for each variable, for example the app should suggest the quantity of water but the milk should be a fixed value, and the sugar should be between 10gr and 50gr. \n\n&#x200B;\n\nAt first I though about something like the Goal Seek tool in excel where it iterates trough numbers of solve a function value, but this is more complicated than that with multiple variables and restrictions. (currently I am reading about optimization, root finding, and genetic algorithms, however I am finding difficult to go from the basic examples to my full problem solution.)\n\nany suggestions?\n\nThanks!", "id": "fggcs2g", "parent": "t3_exy1ie", "vote": 1}, {"content": "What's the faster way to learn python?\n\nDo you recommend any udemy course?", "id": "fgggh0e", "parent": "t3_exy1ie", "vote": 1}, {"content": "Is it possible to make a step by step calculator with python to run on raspberry pi 0?", "id": "fggn6aq", "parent": "t3_exy1ie", "vote": 1}, {"content": "I'm quite confused on a piece of code. Here is a [pastebin](https://pastebin.com/2VwJFXXn) with all of the relevant information.\n\n(Summarized question at end)\n\nWhat I'm trying to do is to display some ascii art to the screen. To do this, you will see 3 functions in my main as well as a separate file 'cards.py' which simply contains the 'card' objects which I am passing into the function.\n\nThe first function in my main can 'build' a card given the information contained in a card.\n\nThe second function takes a list of cards and calls the first function to build the picture for each card (and then stores these in a list which can be used later).\n\nIn my third and final function... I would like to use curses to build a screen or board. This is where things go wrong. Instead of it displaying 3 cards centered in the screen... it breaks the image generated in function 1 and stored in a list via function 2 such that the top (or first element of the list generated in function 1 is the only one centered.\n\nMy assumption is that this is because this line only sets the position of the very first element in the list.\n\n            screen.addstr(middle_row, new_x_pos, ascii_victory_card_list[i])\n\n(as in,  ascii\\_card\\_list\\[0\\] is the list lines\\[ \\] and, since it is a list, the 'placement' arguments only affect lines\\[0\\] without moving the rest)\n\nSo, how would I set the rest of the list to *also* be centered in the screen?\n\nAdditionally, it seems normal iterative functions for loops like these:\n\n        for i in range(len(ascii_victory_card_list)):\n            new_x_pos = x_position\n            pass\n            #new_x_pos += 15\n\nAre not actually affecting the card's position. Is there an alternative way for putting multiple ascii images on the screen at the same time (since they will currently simply overlap)?\n\n&#x200B;\n\ntl;dr\n\nI would like to display 3 ascii art cards on the screen and have them stay up there whilst 'a game' takes place. In other words, I want a board on the screen.\n\nI have 2 current problems / questions:\n\n1) How am I able to center multiple items from a list on the screen and have them stay together (right now my positioning argument only affects the first line in the list).\n\n2) How am I able to add subsequent objects such that the previous card will not be overlapped and therefore erased?\n\n&#x200B;\n\nA note: since I am using curses, you would need to run this through your command prompt for the window to work.\n\nThank you!!", "id": "fggw8ud", "parent": "t3_exy1ie", "vote": 1}, {"content": "How to understand documentation, I always turn to google about every topic just because docs talk in such technical way that I just get 100% lost, is there a tip to get good at searching docs?", "id": "fghnlx3", "parent": "t3_exy1ie", "vote": 1}, {"content": "Hey guys,\n\nI want to build a web app that manages data for one of my businesses. After doing some research and talking to some people I came to the following conclusion: postgreSQL database, python flask API and perhaps javascript front end. The app would be for managing client information, payments, goods and all that jazz.\n\nMy question: do you know of a tutorial that covers the whole process of creating such app?\n\nThanks", "id": "fgi6cgj", "parent": "t3_exy1ie", "vote": 1}, {"content": "I want to delete all the lines from a text file.(I dont want to delete the file)", "id": "fgia1q2", "parent": "t3_exy1ie", "vote": 1}, {"content": "I have a specific environment that I use for python in anaconda, I must activate this manually every time I open anaconda prompt.\n\nIs there a way I can set it up so anaconda prompt opens in the environment I want automatically?", "id": "fgidkrf", "parent": "t3_exy1ie", "vote": 1}, {"content": "What does the reversed function do in python? Im new and i searched it up and me being dumb, idk what an iterator is.", "id": "fgj0l43", "parent": "t3_exy1ie", "vote": 1}, {"content": "Ok, I know for type checking don't use type() use isinstance()... Read this at some point did it always like this. But can someone explain to me why if this is the right way to type checking, why on earth does: `isinstance(True, int)` return `True` while the not recommended `type(True) == int` returns `False`?", "id": "fgj634e", "parent": "t3_exy1ie", "vote": 1}, {"content": "What is a good editor to use?  I'm just starting out.", "id": "fgj7c3j", "parent": "t3_exy1ie", "vote": 1}, {"content": "I have a JSON file here and if `\"finalScore\"` doesn't match up with a score I provide it, I want to update that entire game's dictionary. How would I do that?\n\n\n       {\n          \"games\": [\n            {\n              \"gameId\": 2019020812,\n              \"finalScore\": \"\",\n              \"winner\": \"\",\n              \"loser\": \"\",\n              \"date\": \"2020-02-04\",\n              \"comments\": []\n            },\n            {\n              \"gameId\": 2019020808,\n              \"finalScore\": \"\",\n              \"winner\": \"carolina hurricanes\",\n              \"loser\": \"vancouver canucks\",\n              \"date\": \"2020-02-02\",\n              \"comments\": []\n            }\n          ]\n        }\n\nI was thinking this but I can't figure out how to push the change. I tried `x[game] = new_dict`, `x['games'][game] = new_dict` and `x = new_dict` but none work. Returning a TypeError `TypeError: list indices must be integers or slices, not dict`\n\n        with open('gtsdata.json') as f:\n            x = json.load(f)\n        for game in x['games']:\n            if game['gameId'] == new_dict['gameId']:\n                if game['finalScore'] != new_dict['finalScore']:\n                    # update somehow", "id": "fgk1czo", "parent": "t3_exy1ie", "vote": 1}, {"content": "I\\`m using re.compile(r\"(?<='created\\_at')(.\\*)(?=display\\_text\\_range)\") and re.compile(r\"'created\\_at'.\\*display\\_text\\_range\") to try to get this chunk out of the data, but regex is only giving me the dates('Tue Feb 04 08:43:11 +0000 2020') and not the tweets that follows. \n\nChunk of data:\n\n'created\\_at': 'Tue Feb 04 08:43:11 +0000 2020', 'id': somerandomID, 'id\\_str': 'somerandomID', 'full\\_text': 'RT random\\_user: THERE IS SOME RANDOM TEXT HERE, 'truncated': False, 'display\\_text\\_range'", "id": "fgkfa9f", "parent": "t3_exy1ie", "vote": 1}, {"content": "Hey, I hope someone can help me to improve my code.  \n\nI'm trying to scrap data. So far it works for me, but my code is loooooong.\n\nI know there is a shorter way to do it, I just can't get my head around it.\n\nCode:\n \n```python\nfor i, row in enumerate(parsed_table.find_all('tr')[2:]):\n   try:\n      data = row.find(\"td\", attrs={\"data-stat\": \"player\"})\n      # Nutzen von stub, um auf die Seite des jeweiligen Spielers zu kommen!\n      stub = data.a.get('href')\n      count += 1\n      name = data.a.get_text()\n      pos = row.find(\"td\", attrs={\"data-stat\": \"fantasy_pos\"})\n      if pos.get_text():\n            position = pos.get_text()\n      else:\n            position = \"no pos\"\n      gs = row.find(\"td\", attrs={\"data-stat\": \"g\"})\n      ptd = row.find(\"td\", attrs={\"data-stat\": \"pass_td\"})\n      pyd = row.find(\"td\", attrs={\"data-stat\": \"pass_yds\"})\n      ryd = row.find(\"td\", attrs={\"data-stat\": \"rush_yds\"})\n      rtd = row.find(\"td\", attrs={\"data-stat\": \"rush_td\"})\n      reyd = row.find(\"td\", attrs={\"data-stat\": \"rec_yds\"})\n      retd = row.find(\"td\", attrs={\"data-stat\": \"rec_td\"})\n      fs = row.find(\"td\", attrs={\"data-stat\": \"fumbles\"})\n      games = gs.get_text()\n      pass_td = ptd.get_text()\n      pass_yds = pyd.get_text()\n      rush_yds = ryd.get_text()\n      rush_td = rtd.get_text()\n      rec_yds = reyd.get_text()\n      rec_td = retd.get_text()\n      fumbles = fs.get_text()\n\n      myList.append([name, stub, position, games, pass_td, pass_yds, rush_yds, rush_td,rec_td, rec_yds, fumbles])\n    except:\n        pass\n```", "id": "fgld6i9", "parent": "t3_exy1ie", "vote": 1}, {"content": "I have an app that get's some of its configuration from a json file, and one of them is the method of how to aggregate some data.\n\nI'm no fan of too many lines of code, so I came up with this method:\n\n    import statistics\n    \n    mylist = [1, 1, 2, 3, 4, 5, 8, 100]\n    print(mylist, '\\n')\n    \n    aggregation = 'mean'\n    value = getattr(statistics, aggregation)(mylist)\n    print(f'The {aggregation} of this list is {round(value, 2)}.')\n\nThe code is just an example. In my app, the config json file would have a key \"aggregation\" and then the string \"mean\" or \"median\" as the value.\n\nThis would be the alternative that doesn't use getattr, and is longer:\n\n    from statistics import mean, median\n    \n    methods = {\n        'mean': mean,\n        'median': median\n    }\n    \n    mylist = [1, 1, 2, 3, 4, 5, 8, 100]\n    print(mylist, '\\n')\n    \n    aggregation = 'mean'\n    value = methods[aggregation](mylist)\n    print(f'The {aggregation} of this list is {round(value, 2)}.')\n\nIs there any argument against using the first method? It feels a bit \"hacky\" to me tbh.", "id": "fglr679", "parent": "t3_exy1ie", "vote": 1}, {"content": "What's wrong here? I don't understand this error.\n\n[https://pastebin.com/MGQFwS3d](https://pastebin.com/MGQFwS3d)", "id": "fgm17cc", "parent": "t3_exy1ie", "vote": 1}, {"content": "[deleted]", "id": "fgmm8nx", "parent": "t3_exy1ie", "vote": 1}, {"content": "I am currently working on a project for a company that uses python 3.3 . Do we need the specific version of 3.3 to work with their system? I noticed there are 3.3.0-3.3.7 available on the website and just wanted to know if , for example, 3.3.2 will work with 3.3.6.", "id": "fgmn76f", "parent": "t3_exy1ie", "vote": 1}, {"content": "Can you use a variable (or a passed argument) as part of code syntax somehow? Don't know how to phrase it.\n\nEx. A :  Creating a canvas using the same function but assigning the master with a string parameter\n\n    root = Tk()\n    boot = Tk()\n    \n    def makeCanvas(w, h, master=\"root\"):\n        Canvas(master, width=w, height=h).pack()\n\n(Doesn't work; literal \"root\" isn't a Tk() object)\n\nEx. B : Create multiple variables with different names in a loop\n\n    for x, entry in enumerate(aList):\n        coolVar + x = entry\n\n. . . to truncate something like:\n\n    coolVar0 = \"hey\"\n    coolVar1 = \"jude\"\n    . . .\n    coolVar9 = \"song\"", "id": "fgn3q75", "parent": "t3_exy1ie", "vote": 1}, {"content": "I'm trying to extract certain integers from multiple columns, from multiple dataframes, using a regex. When I tested `df[column] = df[column].str.extract('(?<!-|\\+)(\\d{1,2}), expand = False)` in one column on dataframe, it worked without having to convert it to a string. But when I tried to do the same for all the columns in all the dfs using for loops, it results in a dtype error. I checked the datatypes for all the columns, and they are all orginially int64. So I tried converting it to a str and then back to int64 within the for loops:\n\n    df_list = [df1, df2, df3 ,df4, df5, df6]\n    extract_columns_list = ['column 1', 'column 2', 'column 3', 'column 4']\n    \n    for df in df_list:\n        for column in extract_columns_list:\n            df[column] = df[column].astype(str)\n            df[column] = df[column].str.extract('(?<!-|\\+)(\\d{1,2})', expand=False)\n            df[column] = df[column].astype(np.int64)\n\nHowever, this is resulting in a `ValueError: cannot convert float NaN to integer` which makes no sense to me, since it would be converting from a string to int64.\n\nI'm not sure what the problem is.", "id": "fgnc4wn", "parent": "t3_exy1ie", "vote": 1}, {"content": "Hello, quick question,\n\nI recently downloaded pycharm, and I started using jupyter notebook. I want to edit/create notebooks in pycharm which I can do now, but I am wondering if it is possible to have how a jupyter notebook looks like in pycharm?", "id": "fgnqsct", "parent": "t3_exy1ie", "vote": 1}, {"content": "What happens if you append to a list an object of a custom class. For example, I have a class Node. What happens if I did list.append(Node(5)). I saw this in a codewars solution, they didn't have a custom append function.", "id": "fgnqz2k", "parent": "t3_exy1ie", "vote": 1}, {"content": "I'm trying to create a PDF Merger for files organized by number (ie. Test PDF 1, etc.) However, when it runs, the output pages are organized as: 1, 1, 2, 1, 2, 3, 1, 2, 3, 4, etc.\n\nWhat have I bungled here?\n\n`from PyPDF2 import PdfFileMerger, PdfFileReader`\n\n&#x200B;\n\n`# Call the PdfFileMerger`\n\n`mergedObject = PdfFileMerger()`\n\n&#x200B;\n\n`# Loop through all of them and append their pages`\n\n`for fileNumber in range(1, 10):`\n\n\t`mergedObject.append(PdfFileReader('Test PDF ' + str(fileNumber)+ '.pdf', 'rb'))`\n\n&#x200B;\n\n\t`# Write all the files into a file which is named as shown below`\n\n\t`mergedObject.write(\"Test PDF Collection.pdf\")`", "id": "fgo0g44", "parent": "t3_exy1ie", "vote": 1}, {"content": "Q: How do I access the actual contents of a browser windows I have open?\n\nBackground:  \nI'm trying ton scrape websites of different banks for the purpose of getting information of various accounts into one excel sheet, same with investments etc.\n\nI'm new to python and so far I've managed to get the data via kind of working around various problems. Ive basically saved the whole website temporarily and then read from that saved-to-disk-version. I swear every single fricking website handles stuff different and weird. I mean I get these are financial institutions and part of it is anciebnt architecture, part is ridiculous regulations et cetera.\n\nSo sometimes stuff gets populated by some obscure script, sometimes its an iframe within an iframe within an iframe within five senseless tables etc.\n\nBasically what I'm wondering now is if instead of trying to scrape saved versions or the likes with beautifulsoup if it is possible to kind of read the actual content of my webbrowser. I think this will be easiest for me as a beginner and I wonder what module to use or how to go about that. Can someone give me some pointers?", "id": "fgosqba", "parent": "t3_exy1ie", "vote": 1}, {"content": "[deleted]", "id": "fgotfo3", "parent": "t3_exy1ie", "vote": 1}, {"content": "Does anybody know about the limitations of Pandas profiling? \n\n[https://github.com/pandas-profiling/pandas-profiling](https://github.com/pandas-profiling/pandas-profiling)\n\nI have a very large dataframe with size (133270, 55) and mixed dtypes `int` and `float` and so, as described in the quickstart guide, I use the minimal settings:\n\n    profile = ProfileReport(large_dataset, minimal=True)\n    profile.to_file(output_file=\"output.html\")\n\nHowever I still cant get it to work without a MemoryError:\n\n    MemoryError: Unable to allocate 168. MiB for an array with shape (133270, 55, 3) and data type float64\n\nWhat boggles me is that I tried casting the whole dataframe to float32 and still get a similar error:\n\n    MemoryError: Unable to allocate 224. MiB for an array with shape (133270, 55, 4) and data type float64\n\nWhat I also don't understand is the different array sizes. Here is my script:\n\n    import pandas as pd\n    from pandas_profiling import ProfileReport\n    \n    filename = 'path_to_my_data.csv'\n    data = pd.read_csv(filename, \n                       decimal=',', \n                       delimiter=';', \n                       encoding = \"ISO-8859-1\", \n                       low_memory=False)\n    \n    columns_to_profile = [\n            # list of column names...\n        ]\n    \n    data = data.loc[:,[*columns_to_profile]].astype('float32')\n    profile = ProfileReport(data, minimal=True)", "id": "fgp31fr", "parent": "t3_exy1ie", "vote": 1}, {"content": "I'm working on a practice question and wondering if I could some assistance\n&nbsp;\n\nI have a list and I'm looking to print the contents of it as string and also add 'and' before last string. So I wrote\n&nbsp;\n\n    spam=['apples','oranges','grapes','mangoes']\n    print (', '.join(s1 for s1 in spam))\n&nbsp;\n\n    My output >> apples, oranges, grapes, mangoes\n    Output should be>> apples, oranges, grapes, and mangoes.\n&nbsp;\n\nI was able to add ',' in between the list elements but I do not know how to add 'add' before last list element.", "id": "fgp7ve8", "parent": "t3_exy1ie", "vote": 1}, {"content": "Maybe you can help me fix this problem :)  \nhttps://www.reddit.com/r/learnpython/comments/ez9ltk/valueerror_columns_overlap_but_no_suffix/\n\nThanks", "id": "fgp8g2f", "parent": "t3_exy1ie", "vote": 1}, {"content": "Looking for help on how to managing and organize scripts.\n\nCurrently, I'm using PyCharm.  I'm new to python but have been able to create a bunch of different scripts that I been running here and there.  I feel like I've come to the point now where I've got too many to remember where I saved them, what names they are under and whatever else.  \n\nAny suggestions on how to organize or manage them?  I did make one into a .exe which seems to work good.  I haven't made a GUI for any of them, maybe that's a good direction.   It would nice to not have to open PyCharm and then open different files to run them.  Just not sure if there is something else.", "id": "fgpa9pb", "parent": "t3_exy1ie", "vote": 1}, {"content": "Indexing in python is a bit weird and different to what I'm used to. Specifically, if I have:\n\n> list = [\"first\",\"second\",\"third\",\"fourth\",\"fifth\"]\n\nand I want to select \"third\" and \"fourth\", I need to type: \n\n> list[2:4]\n\nI get that python starts counting at 0, but I don't understand why that isn't consistently applied. In other words, why isn't the correct code here:\n\n> list[2:3]\n\nThank you for your help.", "id": "fgpaajt", "parent": "t3_exy1ie", "vote": 1}, {"content": "Hey there,\n\nI'm trying to figure out, whats the best way to add huge amounts of scrapped data to a dataframe.  \n\nso far I have 620 iterations. I've heard that its best pratice to create a list in which is store the data I want to add to my dataframe later as lists.  \n\nIs this correct? I mean, the list is gonna be huuuuge.  \n\nalso: are there any sources on how to write best practice code? Like: How to I sort the imports, where in the code are my classes or functions.  \n\nThanks in advance.", "id": "fgpbnrx", "parent": "t3_exy1ie", "vote": 1}, {"content": "I am currently trying to make a project in python 3.3 . I tried using pycharm but I realized (after reading their installation requirements) you either need 2.7 or 3.5 and newer. Is there a way around this or should I just use another IDE. If I must use something else, does anyone have any recommendations?", "id": "fgphq01", "parent": "t3_exy1ie", "vote": 1}, {"content": "Me being bad at python, idk how to add numbers.\nhttp://imgur.com/gallery/pAwPT66\nWhat command am i supposed to use when there are set numbers i have to use?", "id": "fgpmp3d", "parent": "t3_exy1ie", "vote": 1}, {"content": "So what I want to do is pick the last value of every string in a list. Here is an easy example of the list I tried and the code I wrote that went wrong:\n\n`numberletter = ['1a', '2b', '3c', '4d', '5e', '6f']`\n\n`for thing in numberletter:`\n\n`letter=[a[-1] for a in thing]`\n\nSo the idea is that for every string in numberletter, it doesn't pick the last one. It picks the last thing instead: \\['6', 'f'\\]. While according to the code (I think) it should pick the last one for every string in numberletter. So why doesn't it do what I want to, but just the last string?", "id": "fgpqo0v", "parent": "t3_exy1ie", "vote": 1}, {"content": "is there an order of operations tool that goes step by step the order of operations being done by python?", "id": "fgpu5if", "parent": "t3_exy1ie", "vote": 1}, {"content": "Is there any real drawbacks with using pip install in the command prompt and downloading the packages directly on my Computer? Is it better to download in a virtual environment created in something like PyCharm?\n\nI know that one advantage with PyCharm is that it allows having different versions of the same package on my computer, but is there any more?\n\nThanks for the help!", "id": "fgqw0oc", "parent": "t3_exy1ie", "vote": 1}, {"content": "How do I execute multiple excel macros but I need to wait for the previous one to finish running before I start the next one.", "id": "fgr5tp6", "parent": "t3_exy1ie", "vote": 1}, {"content": "I'm almost done with a word count function and I've run into a little snag.  I don't know how to make the program ignore punctuation.  For example, if the word list is ['the', 'the.'], it will output 'the - 1, the. - 1', instead of the desired 'the - 2'.  How can I fix this?\n\n\n    def wordcount():\n     # new window\n        word_count_box = tk.Tk()\n        word_count_text = tk.Text(word_count_box)\n        word_count_text.grid(row=0,column=0)\n\n     # gets text from main window\n        x = str(text_box.get(0.0,tk.END)).lower()\n        x = str(x).split()\n\n     # total word count\n        word_count_text.insert(0.0,'Total word count: '+str(len(x))+'\\n\\n')\n    \n     # gets individual words\n        lst = [i for i in x]\n        occs = {}\n        for i in sorted(set(lst)):\n            if i not in '\\'[],':\n                occs[i] = lst.count(i)\n                word_count_text.insert(tk.END, f'{i} - {lst.count(i)} \\n')", "id": "fgr8b7p", "parent": "t3_exy1ie", "vote": 1}, {"content": "Decided to try and make a program that will take a directory you enter in then rename all files with whatever name you want + a number starting from 1 onwards + w/e the file extension was.\n\n    import os\n    \n    directory = input(\"Which directory should I organize?\\n\")\n    \n    os.chdir(directory)\n    \n    i = 1\n    \n    for file in os.listdir():\n    \n        file_name, file_ext = (os.path.splitext(file))\n    \n        src = file\n        dst = \"new_file_name_here\" + str(i) + file_ext\n        os.rename(src, dst)\n        i+=1\n\nFirst time i went through the code with a dummy file on my desktop and it worked but i noticed if there were more than one file type it would mess thing up and reformat files. so  i had to dig through some videos and i came up with adding : \"file\\_name, file\\_ext = (os.path.splitext(file))\"\n\nso i can separate the file name from the extention and that worked, so  now JPGs stay as JPGs, MP4s stay as MP4s, etc... now im trying to find a way for the program to detect when theres a new file folder and skips that when renaming.\n\nI also cant think of a way for the program to detect when the new name you enter in to rename the files to continue where you left off if you continuously add to the folder, for example you have 10 files in the folder and you run the program once and rename  the 10 files to \"New\\_file\\_1\", \"New\\_file\\_2\", ... all the way to \"New\\_file\\_10\". Then you add 5 more files and when you run the program again it starts from \"New\\_file\\_11\" - 15.\n\nIm thinking simple if statements but im probably doing something wrong so im still playing with that idea.", "id": "fgsc0xx", "parent": "t3_exy1ie", "vote": 1}, {"content": "I am TOTAL newbie who is meh at math, and just wants to try learning something new and hopefully open up some job opportunities for myself down the road, probably on the web dev end of things. So far I have purchased a Udemy course. What are some free resources that helped you all learn? Im kinda scared to take the plunge.", "id": "fgsmy0u", "parent": "t3_exy1ie", "vote": 1}, {"content": "Trying my luck at using a Python module (whois) so I can do a whois lookup against a list of domains.\n\n [https://pypi.org/project/whois/](https://pypi.org/project/whois/) \n\nI have installed the whois package on my machine but with the example from the module site I get the following error:\n\n AttributeError: partially initialized module 'whois' has no attribute 'query' (most likely due to a circular import) \n\n&#x200B;\n\nMy code is:\n\nimport whois\n\nw = whois.query('[google.com](https://google.com)')\n\nprint([w.name](https://w.name))", "id": "fgsufd9", "parent": "t3_exy1ie", "vote": 1}, {"content": "Probably a simple answer that I am completely missing but...\n\nUsing selenium, chromedriver, BeautifulSoup to webscrape data and strings over a certain length get automatically truncated with \"...\". Any way to make this stop?", "id": "fgt42qa", "parent": "t3_exy1ie", "vote": 1}, {"content": "# EDIT: NVM IT WAS JUST A COLON\n\n# \n\n&#x200B;\n\nI am getting a syntax error in a line\n\n    if playerMove == 'r' or playerMove == 'p' or playerMove == 's'\n\nis there anything that looks wrong here?\n\n&#x200B;\n\nHere is the full code\n\n    while True: #The main game loop\n        print(\"%s Wins, %s Losses, %s Ties\"% (wins, losses, ties))\n        while True:# The player input loop.\n            print('Enter your move: (r)ock (p)aper (s)cissors or (q)uit')\n            playerMove = input()\n            if playerMove =='q':\n                    sys.exit() #quit program\n            if playerMove == 'r' or playerMove == 'p' or playerMove == 's'\n                break #break out of player input loop\n            print('Type one of r, p, s, or q')\n            \n        # Display what the player chose:\n        if playerMove == 'r':\n            print('ROCK versus...')\n        elif playerMove == 'p':\n            print('PAPER versus...')\n        elif playerMove == 's':\n            print('SCISSORS versus...')\n        \n        # Display what the computer chose\n        randomNumber = random.randint(1, 3)\n        if randomNumber == 1:\n            computerMove = 'r'\n            print('ROCK')\n        elif randomNumber == 2:\n            computerMove = 'p'\n            print('PAPER')\n        elif randomNumber == 3:\n            computerMove = 's'\n            print('SCISSORS')\n        \n        # Display and record the win/loss/ties\n        if playerMove == computerMove:\n            print('its a tie!')\n            ties = ties + 1\n        elif playerMove == 'r' and computerMove == 's':\n            print('You win!')\n            wins = wins + 1\n        elif playerMove == 'p' and computerMove == 'r':\n            print('You win!')\n            wins = wins + 1\n        elif playerMove == 's' and computerMove == 'p':\n            print('You Win!')\n            wins = wins + 1\n        elif playerMove == 'r' and computerMove == 'p':\n            print('You lose!')\n            losses = losses + 1\n        elif playerMove == 'p' and computerMove == 's':\n            print('You lose!')\n            losses = losses + 1\n        elif playerMove == 's' and computerMove == 'r':\n            print('You lose!')\n            losses = losses + 1", "id": "fgttnnz", "parent": "t3_exy1ie", "vote": 1}, {"content": "In automating the boring stuff the prompt is \n\n> Write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints Greetings! if anything else is stored in spam. \n\nMy code is\n\n    for spam in range(10):\n        if spam == 1:\n            print('Hello')\n        elif spam == 2:\n            print('Howdy')\n        else:\n            print('Greetings!')\n\nHow does this look to you guys?", "id": "fgu32in", "parent": "t3_exy1ie", "vote": 1}, {"content": "How do I create my own shell? For example, there\u2019s a Git Bash for github. How can I create my own?", "id": "fguujcu", "parent": "t3_exy1ie", "vote": 1}, {"content": "Hi guys. My journey starts today. Gonna visit this sub frequently now.\n\nSubscribed to udemy class. Hopefully the knowledge sticks!", "id": "fgv06r8", "parent": "t3_exy1ie", "vote": 1}, {"content": "In Jupyter notebook, when I import packages, where does it get it from?", "id": "fgvurwj", "parent": "t3_exy1ie", "vote": 1}, {"content": "people i am trying to use pip (i already have it but python doesn't recognise it) and someone said me about \"environment variables \" but what is an environment variable?", "id": "fgynanq", "parent": "t3_exy1ie", "vote": 1}, {"content": "How do I upgrade python on Linux Mint? I have python3 installed but not the latest version. Sorry, I'm still very new to Linux and many of the tutorials online are vague or old. Thanks!", "id": "fgyv0x4", "parent": "t3_exy1ie", "vote": 1}, {"content": "I am new and wanna ask about Python Projects for beginners, I just wanna ask that which projects can improve my programming skills, If I watch a tutorial on YouTube and do as instructor explain will it helpful?", "id": "fh2acff", "parent": "t3_exy1ie", "vote": 1}, {"content": "Suppose you have a list of numbers.\n\nYou make a copy of the list .\n\nnumberscopy = numbers\n\nYou sort the original list.\n\nnumbers.sort()\n\nHow come the copy is also sorted? How do we create a new copy without this relationship? Appending?", "id": "fh2etp6", "parent": "t3_exy1ie", "vote": 1}, {"content": "Hello all. I am working on a scraper for a site and it was pointed out that the site probably pulls a JSON for the search results. I found the jquery 1.2.6 script that the site runs when a search is conducted.   \n\n\nWhat is the best way to get at the data? I don't necessarily need you to write some code, but maybe explain how I need to approach the issue or what resources you would use. Thank you.", "id": "fh2i2y4", "parent": "t3_exy1ie", "vote": 1}, {"content": "Hi I got adhd and im off meds and its been hell to sit down and read books, I hear a lot of people saying to get a project and just google it out, but if I dont read a book wouldnt I have a weak base on python and maybe it could hurt on the future?", "id": "fh2i9np", "parent": "t3_exy1ie", "vote": 1}, {"content": "I'm trying to read in a large .csv (59999x785), and the numbers need to be floating point. I'm reading it in with pandas like so:\n\n`def loaddata(filename):data = pandas.read_csv(filename, delimiter=\",\", engine='c', dtype=np.float64)return data`\n\n&#x200B;\n\nBut when I try to scale the values by dividing them all by 255, I get incompatible types with \"/\" (str and int)\n\nSo I modified my scale function to just print the type of the data value and the value itself:\n\n`def scale(data):`\n\n`for row in data:`\n\n`for num in row:`\n\n`print \"iterated\"`\n\n`print type(num)`\n\n`print num`\n\n`break`\n\n`break`\n\n`return data`\n\nand it still returns string data type\n\n`iterated`\n\n`<type 'str'>`\n\n`5`\n\nHow can I make it read in the data as floating point numbers rather than strings? I thought that was what dtype did?\n\n&#x200B;\n\nEDIT: Sorry, can't seem to get the indentation working on the second code block", "id": "fh43pd4", "parent": "t3_exy1ie", "vote": 1}, {"content": "Anyone know OpenPyXL? I have a spreadsheet where I want to multiply 1 column by 4 and put it in another column. So if cell E2 = 5, E3 = 6, E4 = 10, then G2 = 20, G3 = 24, G4 = 40. So far I have this which seems to work:\n\n    a = \"=E\"\n    b = 2\n    c = \"*4\"\n    \n    for col in sheet.iter_cols(min_col=7, max_col=7):\n        for cell in col:\n            #print(cell.value)\n            cell.value = a + str(b) + c\n            b = b+1\n\nMy problem is it ignores the column header so it starts entering data at G1 instead of G2. Does anyone know how to make it start at G2? I tried adding  `start_row=2`:\n\n    for col in sheet.iter_cols(min_col=7, max_col=7, start_row=2):\n\nBut that gives an error \"TypeError: iter\\_cols() got an unexpected keyword argument 'start\\_row'\"\n\nThanks in advance for any help\n\nP.S\n\nIs this the best way to multiply 1 column? Using a, b and c feels messy", "id": "fh4x4y9", "parent": "t3_exy1ie", "vote": 1}, {"content": "Can you give an example of what you mean?", "id": "fgg7n7f", "parent": "t1_fgf0dk0", "vote": 1}, {"content": "Yes, there is a difference.  As the [Python Module of the Week](https://pymotw.com/3/array/) says:\n\n> The array module defines a sequence data structure that looks very much like a list, except that all of the members have to be of the same primitive type. The types supported are all numeric or other fixed-size primitive types such as bytes.\n\nThat's different from python lists which are a heterogeneous sequence of any python objects.  The python `array` offers a more memory efficient storage of numeric data and possibly more efficient processing.\n\nThe [python doc](https://docs.python.org/3/library/array.html) has all the details.\n\nThere is also [the `numpy` array](https://en.m.wikipedia.org/wiki/NumPy) which is similar to the python `array`.\n\nTo add confusion, the python `list` is implemented internally as a [dynamic array](https://en.m.wikipedia.org/wiki/Dynamic_array).", "id": "fgfqx9x", "parent": "t1_fgfpqdd", "vote": 3}, {"content": "The first one is \"the loop part\". lst is the iterable object you want to loop over, i the variable with the changing value.\n\nThe second example is almost the same but already uses that value i. You see that in generator and list expression, where you can loop over object inline.", "id": "fgi3cgg", "parent": "t1_fggjz4c", "vote": 1}, {"content": "Maybe this article can help https://treyhunner.com/2015/12/python-list-comprehensions-now-in-color/", "id": "fgi5ubs", "parent": "t1_fggjz4c", "vote": 1}, {"content": "https://github.com/karan/Projects also lists some networking related ideas", "id": "fgp1pcu", "parent": "t1_fgeob24", "vote": 2}, {"content": "I use a combination of VS Code and Jupyter Notebooks but I am mainly coding for data operations and analysis so the interactivity of the notebooks is key for me.\n\nI would go about installing the Anaconda distribution and the manager that comes along with it gives you access to both jupyter and vs code.\n\nIf it's your first time installing python add it to PATH during the install.", "id": "fgfwvfq", "parent": "t1_fgepdxx", "vote": 1}, {"content": "what data structure are your results stored in?", "id": "fgfwpgc", "parent": "t1_fgessna", "vote": 1}, {"content": "This is something easily found with a search on \"python classes tutorial\".  Doing that finds this tutorial amongst many others:\n\nhttps://m.youtube.com/watch?v=ZDa-Z5JzLYM", "id": "fgf2w76", "parent": "t1_fgezt66", "vote": 1}, {"content": "If you mean to ask if an instance is an object, yes: https://stackoverflow.com/a/2885395/11032845", "id": "fgfbesw", "parent": "t1_fgf6s2o", "vote": 1}, {"content": "Everything in Python is an object.\n\n    class Foo: pass\n    f = Foo()\n    isinstance(f, object)  # returns True", "id": "fgfryvb", "parent": "t1_fgf6s2o", "vote": 1}, {"content": "Yes, using multithreading. Guessing you might be working on a RPi or similar, see http://robsraspberrypi.blogspot.com/2016/01/raspberry-pi-python-threading.html", "id": "fgfbc6v", "parent": "t1_fgfagbe", "vote": 2}, {"content": "https://automatetheboringstuff.com/chapter11/ scroll down to 'Controlling the Browser with the selenium Module'", "id": "fgfnakz", "parent": "t1_fgflx1i", "vote": 2}, {"content": "Hey I'm new too and this was exactly the first program I wrote as a way of learning. Automate the Boring stuff and the chapters on csv/xlsx parsing with openpyxl was a great for the excel bit, and py4e.com (Charles Severence) covers the xml stuff using Elementree pretty well in chapter 13 (https://youtu.be/6cwi1NcL0Zc) as a primer (although he focuses more on reading than writing but gets you most of the way there). Then just start building testing and googling! Good luck, PM me if you're struggling!", "id": "fgh4tj8", "parent": "t1_fgfs5hm", "vote": 1}, {"content": "I see you have an overlap with > = 3 and < = 3. For both of these 3 will be true. Lines 4 and 7 for counter variable. \nMaybe it can read counter > = 2 and > = 3 so three is true for only one condition. But if only 3 guesses are legal I imagine that >=3 will be better off as simply = 3 or == 3. I would use the latter but more experienced people here may have a better answer. \n\n As for the Instructor's code, it looks like their code is set up for further development of the game. You will be better off taking care of the nuances of the game as it develops with the Instructor's code foundation.", "id": "fggsbl4", "parent": "t1_fggb2d0", "vote": 1}, {"content": "Where does it take that values from? Python can't bake cakes, only you can. Stop thinking about the implementation of your idea -- think about how this generally works, so that you can \"solve\" the problem on paper.", "id": "fgi3fa0", "parent": "t1_fggcs2g", "vote": 2}, {"content": "Yes, if that raspberry is running some kind of OS that features Python, like Raspbian.", "id": "fgi5tjz", "parent": "t1_fggn6aq", "vote": 1}, {"content": "I know what you mean, it tool really long for me to understand how docs work. Maybe you can start backwards, search a method or function you already know well and read it's documentation. Since you already know what it does, you might understand it better. Then you can proceed to other functions and try to understand their documentation.\n\nDo you have an example?", "id": "fgi37fu", "parent": "t1_fghnlx3", "vote": 3}, {"content": "[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world)", "id": "fgjzhig", "parent": "t1_fgi6cgj", "vote": 2}, {"content": "There's an udemy course that i have enrolled which covers this stuff... But instead of flask, it uses django https://www.udemy.com/share/101WisBEITdllXRHg=/", "id": "fgj2a3w", "parent": "t1_fgi6cgj", "vote": 1}, {"content": "What made you decide to go for these options and how are you planning on deploying the application?", "id": "fgl8sw1", "parent": "t1_fgi6cgj", "vote": 1}, {"content": "Corey Schafer on yt has an amazing Flask series, you should check it out. It also covers SQLalchemy which can be very usefull - it makes your code suitable for most of the Databases and you dont need to worry about typing sql statements", "id": "fgyvpmu", "parent": "t1_fgi6cgj", "vote": 1}, {"content": "The technical term for this is [truncate](https://www.tutorialspoint.com/python/file_truncate.htm), but when you open a file for writing and write nothing, it will also end up as an empty file with that name:\n\n    open('myfile', 'w').close()\n\nwhich is also how an editor like Notepad would accomplish removing all the files from a file.", "id": "fgib9bp", "parent": "t1_fgia1q2", "vote": 5}, {"content": "This describes how to use a .bat file to run anaconda:\n\n[https://stackoverflow.com/questions/46305569/how-to-make-batch-files-run-in-anaconda-prompt](https://stackoverflow.com/questions/46305569/how-to-make-batch-files-run-in-anaconda-prompt)\n\nThis gives advice on getting a .bat to run on startup.\n\n[https://stackoverflow.com/questions/4438020/how-to-start-a-python-file-while-windows-starts](https://stackoverflow.com/questions/4438020/how-to-start-a-python-file-while-windows-starts)", "id": "fgjz9g9", "parent": "t1_fgidkrf", "vote": 1}, {"content": "You should look into iterators more, they are very useful in Python. `reversed` does exactly what it says, reverses an iterator. For a simple example, you can reverse a `range` object and print the values:\n\n    my_range = range(5)\n    for i in reversed(my_range):\n        print(i)\n    # 4\n    # 3\n    # 2\n    # 1\n    # 0", "id": "fgjlq5n", "parent": "t1_fgj0l43", "vote": 1}, {"content": "It's because `bool` is a subclass of `int`. Objects are considered to be instances of parent classes, but are not considered to be of the same type. This is just convention. You can try it yourself by writing some simple classes like so:\n    \n    class Animal:\n        def __init__(self, name):\n            self.name = name\n    \n    class Dog(Animal):\n        def bark(self):\n            print('Woof!')\n\n    fido = Dog('Fido')\n\n    print(isintance(fido, Animal)) # True\n    print(type(fido) == Animal) # False", "id": "fgjl8wj", "parent": "t1_fgj634e", "vote": 2}, {"content": "I found a [SO question](https://stackoverflow.com/questions/37888620/comparing-boolean-and-int-using-isinstance) regarding this. I still think this should be made clear in the docs... I don't know... It's always written that type might behave unexpected and than `isinstance` also has unexpected behavior.", "id": "fgj8hjl", "parent": "t1_fgj634e", "vote": 1}, {"content": "Are you completely new to programming? If so, I'd recommend to continue using Python IDLE until you get your bearings. Getting used to an IDE takes away from the code learning.\n\nI personally use PyCharm.", "id": "fgjax9l", "parent": "t1_fgj7c3j", "vote": 2}, {"content": "I use atom but that is because I started out learning HTML/CSS and Javascript. The Python IDLE can do everything for you though.", "id": "fgjk017", "parent": "t1_fgj7c3j", "vote": 1}, {"content": "Looks like `(x['games'].index(game)` will work", "id": "fgk34qn", "parent": "t1_fgk1czo", "vote": 1}, {"content": "    with open('gtsdata.json') as f:\n        x = json.load(f)\n    \n    for i, game in enumerate(x['games']):\n        if game['gameId'] == new_dict['gameId']:\n            if game['finalScore'] != new_dict['finalScore']:\n                x['games'][i] = new_dict", "id": "fgl8g6i", "parent": "t1_fgk1czo", "vote": 1}, {"content": "The exact text that regex gives me:  match='\\\\'created\\_at\\\\': \\\\'Fri Oct 11 02:53:51 +0000 2019\\\\>\\]", "id": "fgkfi84", "parent": "t1_fgkfa9f", "vote": 1}, {"content": "Why are you using a lookbehind and lookahead here? They're not required. The following regex [works for me](https://regex101.com/r/pzir8i/1):\n\n    r\"'created_at': (.*) 'display_text_range'\"", "id": "fgl899a", "parent": "t1_fgkfa9f", "vote": 1}, {"content": "That's a lot of unnecessary lines for intermediate values. Maybe you could simplify things by first combining the `get_text`.\n\n    games = row.find(\"td\", attrs={\"data-stat\": \"g\"}).get_text()\n    pass_td = row.find(\"td\", attrs={\"data-stat\": \"pass_td\"}).get_text()\n\nThen you might want to introduce a function, because the lines look so similar.\n\n    def get_stat(row, stat: str):\n        return row.find(\"td\", attrs={\"data-stat\": stat}).get_text()\n    \n    games = get_stat(row, \"g\")\n    pass_td = get_stat(row, \"pass_td\")\n\nThen you could maybe construct a list of the things you want to append before actually appending. That long line looks ugly. Even something like:\n\n    lst = [\n        get_stat(row, \"g\"),\n        get_stat(row, \"pass_td\")\n    ]\n\nOf course, now it's starting to look like a list comprehension.\n\n    lst = [get_stat(row, stat) for stat in (\"g\", \"pass_td\")]\n\nand so on. Happy refactoring :D", "id": "fglvsq4", "parent": "t1_fgld6i9", "vote": 2}, {"content": "It feels a bit hacky to me too, but it works, right? I have an argument for the second approach though. It is a lot clearer which methods are available when the dict is used. Additionally, it doesn't restrict the implementation to the statistics module, you could pull in implementations from any number of sources. But I'm sure the first one is enough for simple cases!", "id": "fglv3gk", "parent": "t1_fglr679", "vote": 2}, {"content": "You do not define *how* to add Grade instances to each other and how to add an integer to them.\nFirst, look at `help(sum)`:\n\n    Return the sum of a 'start' value (default: 0) plus an iterable of numbers.\n\nSo when you do `sum(self.grades)`, Python tries to do `0 + first_grade` and complains you haven't told it how to do that. You can do it like this:\n\n    class Grade:\n    \n        def __init__(self, score):\n            self.score = score\n    \n        def __add__(self, other):\n            return self.score + other.score\n    \n        def __radd__(self, other):\n            # this is for when an integer is on the left\n            return other + self.score\n\nAlso see [this post on the subject](https://www.reddit.com/r/learnpython/comments/3cvgpi/can_someone_explain_radd_to_me_in_simple_terms_i/) (first answer). It explains `__radd__`.", "id": "fgmmaap", "parent": "t1_fgm17cc", "vote": 2}, {"content": "My take on this:\n\n    # open file\n    opening = open(\"marks-lab.txt\", \"r\")\n    \n    # initiatlize line reading\n    read = opening.readline()\n    \n    # initialize an empty string\n    temp = ''\n    \n    # while still lines left\n    while read:\n    \n        # go through the length of the whole line & check if there are numbers\n        for char in read:\n    \n            # if a number, store it in a temp string;\n            if char.isdigit():\n                temp += char\n    \n        # once all digits are stored print them out\n        print(temp)\n    \n        # read next line\n        read = opening.readline()\n    \n        # reset temp string\n        temp = ''", "id": "fgmofig", "parent": "t1_fgmm8nx", "vote": 1}, {"content": "There's a number of things that could be said. You seem to be thinking that Python is C. I did too, but you'll get over it once you realise some of the beautiful constructs that this language has. For loops are in fact \"for each\" loops. This can be used in two ways in your code.\n\n* Lines can be read in a for loop \\`for line in open(\"filename\", \"r\")\\`\n* The line can be iterated over one character at a time \\`for c in line\\`\n\nAdditionally:\n\n* Strings are immutable, so you can't \"allocate\" a string as you would do in C\n* Strings have an \"isnumeric\" method\n\nSo your code could be written:\n\n    for line in open(\"marks-lab.txt\", \"r\"):\n        temp = \"\"\n        for c in line:\n            if c.isnumeric():\n                temp += c\n    \n        if len(temp) > 0:\n            print(temp)\n\nOr even using Python's list comprehensions:\n\n    for line in open(\"marks-lab.txt\", \"r\"):\n        temp = ''.join([c for c in line if c.isnumeric()])\n    \n        if len(temp) > 0:\n            print(temp)", "id": "fgmp462", "parent": "t1_fgmm8nx", "vote": 1}, {"content": "The changes between 3.3.2 and 3.3.6 are very minor.  The third number (.2 or .6) is a \"micro\" release number and is used for bug patch releases.  No new features are included.  You could probably use python 3.7 without any problems at all because python releases try to be backward compatible so as not to break existing code.  New features, and bug and security patches are added, not things that will stop code working.  There were changes between python 2 and python 3 that were not backward compatible but that was to fix perceived problems in the language.\n\nTry developing with the python version of your choice.  If using a later version of python than 3.3 you must be careful to not use features that were added after 3.3.  You are helped here by the test code that is part of the product.  That test code will be run with the version of python the company is using and will catch any advanced features that aren't in 3.3 as well as any bugs you might have introduced.\n\nIf there is no test code then maybe some should be written.", "id": "fgnwqyg", "parent": "t1_fgmn76f", "vote": 1}, {"content": "You have a Tk variable named root, pass that instead of the string \"root\":\n\n    def makeCanvas(master, w, h):\n        return Canvas(master, width=w, height=h).pack()\n    \n    if __name__ == \"__main__\":\n        root = Tk()\n        c1 = makeCanvas(root, 200, 300)\n        c1 = makeCanvas(root, 400, 600)\n        root.mainloop()\n\n>multiple variables with different names\n\nIn the larger picture, I wonder how you will use these variables; how will you know how many of them there are and how will you use those names in your code? You would need to store the names and the data in a collection; perhaps you want to bind names to values in a dict?\n\n    for x, entry in enumerate(aList):\n        my_dict[\"coolVar{:04}\".format(x)] = entry\n\nPerhaps used like this?\n\n    >>> cools = (\"hey\", \"jude\", \"song\")\n    >>> my_dict = {}\n    >>> for x, entry in enumerate(cools):\n    ...     my_dict[\"coolVar{:04}\".format(x)] = entry\n    ... \n    >>> my_dict\n    {'coolVar0000': 'hey', 'coolVar0001': 'jude', 'coolVar0002': 'song'}\n    >>>", "id": "fgn9mi4", "parent": "t1_fgn3q75", "vote": 1}, {"content": "The `.append()` method is a method of the list, not of the object being appended, so this works:\n\n    class Test:\n        pass\n            \n    l = []\n    l.append(Test())\n    l.append(Test())\n    print(l)\n    >>> [<__main__.Test object at 0x108325198>, <__main__.Test object at 0x10832a128>]", "id": "fgnup95", "parent": "t1_fgnqz2k", "vote": 3}, {"content": "https://automatetheboringstuff.com/chapter11/ scroll down to 'Controlling the Browser with the selenium Module'", "id": "fgoxgls", "parent": "t1_fgosqba", "vote": 1}, {"content": "As far as i know, python script optimization, since they are the same, (and close in the code), python just chooses to use the same string. (since strings are immutable, it does not cause any problems)\n\nYou should however not rely on that, since this is more a behind the scenes optimization.", "id": "fgotz36", "parent": "t1_fgotfo3", "vote": 2}, {"content": "~~I don't know the exact limitations, but~~ Python stores equal strings ~~up to a certain size~~  edit: regardless of size at the same memory location. You can check this with the id() function:\n\n    a = 'Python is fun!'\n    b = 'Python is fun!'\n    print(id(a))\n    print(id(b))\n\nThat's why they are treated as the same object.\n\nfurther reading: [https://rushter.com/blog/python-strings-and-memory/](https://rushter.com/blog/python-strings-and-memory/)", "id": "fgotzrr", "parent": "t1_fgotfo3", "vote": 1}, {"content": ">  I thought it didn't behave like ==\n\nIt behaves the same if the interpreter decided to use the same object for both references, which is not something you can rely on (and the language doesn't specify as a requirement).", "id": "fgoxeq1", "parent": "t1_fgotfo3", "vote": 1}, {"content": "You mean it returns 'False' while it shouldn't? That's because they aren't refering to the same thing. If you used:\n\n`a = 'Python is fun!'`\n\n`b = a`\n\n`print(a is b)`\n\nYou'd get 'True', but right now they aren't referring to the same thing. However, if you want to check if they saying the same thing, like they are doing in your thing, you can use '=='.  If you replace your 'is' for '==', it'll return 'True'.", "id": "fgpsqlo", "parent": "t1_fgotfo3", "vote": 1}, {"content": "You could simply `join` all but the last item (think about slicing with a negative index as the `stop` value) and then append whatever you want at the end.", "id": "fgpku8e", "parent": "t1_fgp7ve8", "vote": 1}, {"content": "The index is how many entries you skip over before arriving at the desired entry; to get to \"third\" you skip over 2 entries.\n\nThis has some useful side effects like:\n\n    >>> my_list = [\"first\",\"second\",\"third\",\"fourth\",\"fifth\"]\n    >>> my_list[:3] + my_list[3:]\n    ['first', 'second', 'third', 'fourth', 'fifth']\n    >>> (my_list[:3] + my_list[3:]) == my_list\n    True\n    >>> all((my_list[:x] + my_list[x:]) == my_list for x in range(len(my_list)))\n    True", "id": "fgq0dw4", "parent": "t1_fgpaajt", "vote": 2}, {"content": "The 0-based indexing and half-open slicing ideas are designed to work together.  The [person formerly known as the BDFL](https://en.m.wikipedia.org/wiki/Benevolent_dictator_for_life) explained [this a long time ago](http://python-history.blogspot.com/2013/10/why-python-uses-0-based-indexing.html).", "id": "fgr87ph", "parent": "t1_fgpaajt", "vote": 2}, {"content": "Slicing is a bit different to indexing. The rules of slice are that, in terms of index, the start point is inclusive and the end point is exclusive.\n\n[This is a useful way to think about it.](https://stackoverflow.com/a/509297) The slices are the points between values. So s[0:1] would return the first box, with 0 and 1 being the line between them.", "id": "fgpkikw", "parent": "t1_fgpaajt", "vote": 1}, {"content": "I usually read an index as \"starting at 'x' and up to, but not incuding 'y'\" if that makes it any easier. I think the teacher on one of my edX courses read it like that. So your example of list\\[2:4\\] would read as, \"starting at 2 and up to, but not including 4\".", "id": "fgv581n", "parent": "t1_fgpaajt", "vote": 1}, {"content": "Can't really speak to the first without knowing more about the data. 620 iterations doesn't sound like much unless each iteration is itself a large amount of data. At least if we are just talking about doing basic O(N) operations.\n\nAs for best practices and style, roughly in order;\n\n[PEP-8](https://www.python.org/dev/peps/pep-0008/)\n\n[The Hitchhikers Guide](https://docs.python-guide.org/)\n\n[The Google Python Style Guide.](https://google.github.io/styleguide/pyguide.html)\n\nPEP-8 is the basic \"good Python\" guide and has the most general agreement. Style guides tend to be built up from it as a starting point. \n\nH2GP is the more community driven opinionated guide. Some of it may be outdated still (haven't checked in a while) and it is written more as a book for publication than as a living document, but IIRC it represents what the community would ideally like to see in Python code in the wild pretty well.\n\nGoogle's guide is for their in-house developers so may not be as universally applicable. It goes over the pros and cons of language features as seen from that perspective (notably; large codebase, many hands) and gives a decision (recommendation really) for the usage of each. Their style section is more about consistency within a codebase. Think of it more as the points you need a firm decision on, even if you don't go with theirs. If I was building a large codebase and expecting a lot of developers to work on it I'd probably start from this and find any major areas of disagreement.\n\nFor style I'm of the opinion that you determine what you find good, then find a linter and auto-format option that enforce that and take as much thought out of the process as possible. Focus on writing functionality, not style.", "id": "fgpg62d", "parent": "t1_fgpbnrx", "vote": 2}, {"content": "I'm not much in the way of data science, but here's a great resource for Python function-use and code structure: [https://pyvideo.org/pyohio-2014/the-clean-architecture-in-python.html](https://pyvideo.org/pyohio-2014/the-clean-architecture-in-python.html)", "id": "fgv50ud", "parent": "t1_fgpbnrx", "vote": 1}, {"content": "Is there a particular reason you want to use 3.3?", "id": "fgq0522", "parent": "t1_fgphq01", "vote": 1}, {"content": "You have a string with comma separated numbers. You need to separate out each number, convert it to an int, and then sum.\n\n    >>> value1 = \"2,5,1\"\n    >>> numbers = [int(s) for s in value1.split(',')]\n    >>> numbers\n    [2, 5, 1]\n    >>> sum(numbers)\n    8\n    >>>", "id": "fgpzp53", "parent": "t1_fgpmp3d", "vote": 1}, {"content": "You have an assignment in a loop; only the last assignment will have any effect.\n\nOne loop over your list is all you need; take the last char of each item in numberletter.\n\n    >>> [a[-1] for a in numberletter]\n    ['a', 'b', 'c', 'd', 'e', 'f']", "id": "fgpz84w", "parent": "t1_fgpqo0v", "vote": 3}, {"content": "https://docs.python.org/3/reference/expressions.html#operator-precedence", "id": "fgpymx2", "parent": "t1_fgpu5if", "vote": 1}, {"content": "Keep a repl open as an easy way to test your understanding, but here is the list:\n\n[https://docs.python.org/3/reference/expressions.html#operator-precedence](https://docs.python.org/3/reference/expressions.html#operator-precedence)", "id": "fgpynvn", "parent": "t1_fgpu5if", "vote": 1}, {"content": "Packages can start to conflict and make each other not work if they start messing with the same libraries. Virtual environments keep that from happening by only installing into that isolated environment, so you'll need to restart the venv when you go to run that program again. It's not really a big deal right away, but once you get into larger projects with more and more dependencies, it can start to cause some headaches.\n\nAny IDE can run a venv, so you don't need PyCharm specifically, but it's certainly a great Python IDE.", "id": "fgv4thx", "parent": "t1_fgqw0oc", "vote": 1}, {"content": "`string` module: `from string import punctuation` -> gives you `'!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~'` \n\nuse `str.translate` to filter out punctuation strings from input (replacing `lst = [i for i in x]`)\n\nadvice: \n\nseparate building UI (view) from `wordcount()` / from the word counting logic, e.g. `wordcount()` is a function that produce a dict of words & their count numbers, not both constructing UI and inserting result from word counting logic.\n \nthen for code in this block  \n\n    occs = {}\n    for i in sorted(set(lst)):\n        if i not in '\\'[],':\n            occs[i] = lst.count(i)\n            word_count_text.insert(tk.END, f'{i} - {lst.count(i)} \\n')\n\ncan be written simply as\n\n    return {word: lst.count(word) \n            for word in \n            sorted(set(lst))}", "id": "fgrgfyd", "parent": "t1_fgr8b7p", "vote": 1}, {"content": "I think you could add\n\n    .strip('.')\n\nto the line\n\n        x = str(text_box.get(0.0,tk.END)).lower()\n\nWhen you use .strip() with a string passed in as an argument, it strips off that string.\n\nAs in:\n\n        x = str(text_box.get(0.0,tk.END)).lower().strip('.')", "id": "fgv4f77", "parent": "t1_fgr8b7p", "vote": 1}, {"content": "I'd consider using the pathlib module if I were you.\n\n    import logging\n    \n    from pathlib import Path\n    \n    logger = logging.getLogger(__name__)\n    \n    target_directory = input(\"Which directory should I organize?\\n\")\n    directory = Path(target_directory)\n    paths = [item for item in directory.iterdir() if item.is_file()]\n    \n    for i, path in enumerate(paths, start=1):\n        new_path = Path(f'{path.parent}/{path.stem}_{i:0>3}{\"\".join(path.suffixes)}')\n        logger.INFO(f'Renaming {path} to {new_path}')\n        path.rename(new_path)\n\nNow, as far as how to prevent yourself from renaming files that have already been renamed... I guess you might just want to filter out files where the stem ends with an underscore and then numbers. The only other suggestion I have is to store a hidden file in the directory that has a list of all the filenames that you updated previously. Then you can filter your paths of all of those files and you can start the enumeration in the for loop at the length of the list of files + 1. I'll let you code that up, but here's the general flow:\n\n    import logging\n    \n    from pathlib import Path\n    \n    logger = logging.getLogger(__name__)\n    \n    target_directory = input(\"Which directory should I organize?\\n\")\n    directory = Path(target_directory)\n    # look for the hidden file and, if found, open it here\n    # read all the filenames and put them into a set previously_renamed or set previously_renamed to None\n    # probably want to log this to the terminal...\n    paths = [item for item in directory.iterdir() if item.is_file() and item not in previously_renamed]\n    # set the value start_number to be 1 if previously_renamed is None otherwise set it to len(previously_renamed) + 1\n    \n    for i, path in enumerate(paths, start=start_number):\n        new_path = Path(f'{path.parent}/{path.stem}_{i:0>3}{\"\".join(path.suffixes)}')\n        logger.info(f'Renaming {path} to {new_path}')\n        path.rename(new_path)", "id": "fgt4wp1", "parent": "t1_fgsc0xx", "vote": 1}, {"content": "Crash Course Python and Automate the Boring Stuff, as well as YouTube videos like Traversy Media and Giraffe Academy (Mike Dane is the guy who does the Python videos, but I think he's with someone like Code Academy now).\n\nIf you want to do web dev eventually then I just started a pretty great Udemy course called \"Your Last Intro to Programming Course\" that goes over most of the important web dev basics, but just be aware that python isn't really covered in that, as a lot of web development is currently done in javascript, as that's what is actually executed by your browser.", "id": "fgv44qe", "parent": "t1_fgsmy0u", "vote": 2}, {"content": "If you are into web dev you should check Corey Schafer Flask series, very useful", "id": "fgyu9np", "parent": "t1_fgsmy0u", "vote": 2}, {"content": "There are plenty of resources on the wiki. Look at the sidebar for help. Don't be scared, just jump into it.", "id": "fgt1z89", "parent": "t1_fgsmy0u", "vote": 1}, {"content": "What did you name your file? I'm guessing you called it whois.py?", "id": "fgt1sy5", "parent": "t1_fgsufd9", "vote": 1}, {"content": "Nevermind it was a colon", "id": "fgtudy4", "parent": "t1_fgttnnz", "vote": 2}, {"content": "Looks like it will work, but if they meant to do it as a function, then you'd want to replace the first line with something like:\n\n    def check_number(spam):\n\nas  this will make it usable for any number passed in. It's somewhat confusing at first, but when used as an argument being passed into a defintion, as spam is in the line I typed, then any number passed into the () where spam is located will be evaluated against your if-statement, so that you could pass in 1 or 100000000 and have it return a valid answer - the word \"spam\" just serves as a local variable for that function and could be any word, meaning it can be used when writing that function, but then if you try to use \"spam\" as a variable later without setting up a \"spam\" variable outside of a function, the interpreter will not be able to use it and will return an error. The spam in the if-statement can reference spam, but outside of the function, spam doesn't exist. You'd want something like:\n\n    def check_number(spam):\n        if spam == 1:\n            print('Hello')\n        elif spam == 2:\n            print('Howdy')\n        else:\n            print('Greetings!')\n    \n    check_number(1) # This will print \"Hello\"\n    \n    check_number(2) # This will print \"Howdy\"\n    \n    check_number(3) # This will print \"Greetings!\"\n    \n    check_number(1000000) # This will also print \"Greetings!\"\n    \n    print(spam) # This will return an error because spam is a local\n                # variable for the check_number() function", "id": "fgv367m", "parent": "t1_fgu32in", "vote": 1}, {"content": "Looks great!\n\nThe code is clean and straight-forward. Nothing that seems unnecessary. Keep it up!\n\nP.S\n\nGreat choice of book. I used it myself at one point.", "id": "fgz84qh", "parent": "t1_fgu32in", "vote": 1}, {"content": "If you want to write something like the bash or bourne shell then that is possible.  Certainly on linux and possibly on windows.  Doing a search on \"linux shell in python\" finds a few hits, such as this one:\n\nhttps://danishpraka.sh/2018/09/27/shell-in-python.html\n\nThis other hit looks to be more complete and cross-platform:\n\nhttps://xon.sh/\n\nI would start with the first of the above two links.", "id": "fgvuq0k", "parent": "t1_fguujcu", "vote": 2}, {"content": "There is a lot of support for running and capturing output from  shell commands in IPython.\n\n[https://jakevdp.github.io/PythonDataScienceHandbook/01.05-ipython-and-shell-commands.html](https://jakevdp.github.io/PythonDataScienceHandbook/01.05-ipython-and-shell-commands.html)", "id": "fgzpdax", "parent": "t1_fguujcu", "vote": 2}, {"content": "Are you actually looking for a shell or just a command line interface to use in the command line?\n\nI think there is a package called \"ArgParse,\" that helps with creating CLI's", "id": "fh2i0s5", "parent": "t1_fguujcu", "vote": 2}, {"content": "I don't think you'd want to. Git Bash isn't really \"It's own shell\" as it just basically installs a Unix-style enviroment that makes it so you can use Unix commands and that sort of thing in another OS, like Windows or MacOS. I'm still quite a noob with regards to all this stuff, so please correct me if I'm wrong, but the actual shell itself is a lot more complicated and does a lot of lower level management stuff that you likely don't want to have to get into.\n\nYou may be looking to create a graphical user interface for stuff, which is different and much, much easier, and can be done in Python. If you want to interface with the shell then you can write shell scripts to run stuff like python programs in an more automated fashion, but writing a whole shell itself is probably rather unnecessary.", "id": "fgv1tuc", "parent": "t1_fguujcu", "vote": 1}, {"content": "don't give up. I've been going for over a year and just now am using Python reliably for work stuff. You may be way smarter than me or know other languages but other than sql, powerbi, tabluea, and excel this was my first true programming language and there is a ton more than just syntax you need to learn.\n\nGet a stack overflow account set up as soon as possible.\n\nGood luck and try to have some fun.", "id": "fh2hz4c", "parent": "t1_fgv06r8", "vote": 1}, {"content": "Jupyter notebook is just kind of an overlay. Think about it as a GUI for standard terminal", "id": "fgytpv9", "parent": "t1_fgvurwj", "vote": 1}, {"content": "Jupyter is a web page that is running a python interpreter. The packages are imported into that interpreter.", "id": "fgyzfb1", "parent": "t1_fgvurwj", "vote": 1}, {"content": "Any python interpreter looks for packages by searching the folders listed in sys,path; you can print that list out to see what folders are searched.", "id": "fgzoaf7", "parent": "t1_fgvurwj", "vote": 1}, {"content": "An environment variable is like a global variable for your shell. It is something that your shell and the programs running in your shell can access to figure out certain settings.\n\nI doubt its your environment variables, though. I'm guessing that you are using the wrong interpreter to try to find it without realizing it.\n\nSo how do you know that you \"have it\" and what do you mean when you say \"python doesn't recognise it\"?\n\nEDIT: Also what is your operating system and how did you install python?", "id": "fgyyrj2", "parent": "t1_fgynanq", "vote": 1}, {"content": "if I were you, I'd look into pyenv to manage your python versions. [https://github.com/pyenv/pyenv-installer](https://github.com/pyenv/pyenv-installer). Be sure to add the required exports to your bashrc (it'll tell you what to add when the installer is done). And then be sure to restart your terminal.\n\nOnce you do that, you can install just about any version of python that exists. You could, for example do this:\n\n    pyenv install -v 3.8.1\n\nTo see what versions you can install, do this:\n\n    pyenv install --list | less\n\nTo set the global version of python, assuming you've installed python 2.7.17 and 3.8.1 (the most current versions as of now), you can do this\n\n    pyenv global 2.7.17 3.8.1\n\nAnd after that, you'll see this:\n\n    $ pyenv versions\n      system\n    * 2.7.17\n    * 3.8.1\n\nAnd you'll be able to do this:\n\n    $ python3 --version\n    Python 3.8.1\n    $ python --version\n    Python 2.7.17\n\nAnd this...\n\n    $ pip3 install --update pip setuptools wheel\n\nAlso there is a virtualenv helper that you might find useful as you continue programming.", "id": "fgyy7xz", "parent": "t1_fgyv0x4", "vote": 1}, {"content": "https://docs.python.org/3/faq/programming.html#why-did-changing-list-y-also-change-list-x\n\n(use `numberscopy = numbers.copy()` or `numberscopy = numbers[:]`)", "id": "fh2gfsw", "parent": "t1_fh2etp6", "vote": 1}, {"content": "> You make a copy of the list .\n\nIf you did something like:\n\n    a = [1, 2, 3]\n    b = a\n\nthen you didn't copy the list.  Assignment never copies in python so `a` and `b` both reference the same list.  As others have pointed out, use either `b = a.copy()` or the \"slice copy\" `b = a[:]`.\n\nFor a very good talk on the name/reference/object thing [view this talk from pycon](https://www.youtube.com/watch?v=_AEJHKGk9ns).", "id": "fh2rnfs", "parent": "t1_fh2etp6", "vote": 1}, {"content": "The best way to reverse engineer a web page with javascript loaded data script is to load the data in your browser with the developer tools installed and the network tab open. Listed there will be the requests, headers and contents that your browser sent and using that info you can recreate those requests.", "id": "fh4570t", "parent": "t1_fh2i2y4", "vote": 3}, {"content": "Multiplying columns is supported using the numpy array; this multiplies the second column (specified by \"\\[:,1\\]\") by 4 and puts it as the last column:\n\n    >>> from numpy import array, column_stack\n    >>> a = array([[1,2,3],[4,5,6],[7,8,9]])\n    >>> a\n    array([[1, 2, 3],\n           [4, 5, 6],\n           [7, 8, 9]])\n    >>> column_stack((a, a[:,1] * 4))\n    array([[ 1,  2,  3,  8],\n           [ 4,  5,  6, 20],\n           [ 7,  8,  9, 32]])\n\n[https://stackoverflow.com/questions/30702129/excel-worksheet-to-numpy-array](https://stackoverflow.com/questions/30702129/excel-worksheet-to-numpy-array)", "id": "fh5o3qp", "parent": "t1_fh4x4y9", "vote": 2}, {"content": "I think what confused me the most was dictionary\u2019s within python.", "id": "fgg9d6l", "parent": "t1_fgg7n7f", "vote": 1}, {"content": "Trying to put it in a dataframe and output it to a csv. I need to make multiple columns ['sentence', 'polarity', 'subjectivity', etc....]\n\nI can get all the info in my output but still trying to get it to come out in a column format.", "id": "fggrkl1", "parent": "t1_fgfwpgc", "vote": 1}, {"content": "You guessed it! Thanks, i'll have a look into it", "id": "fgfd9fp", "parent": "t1_fgfbc6v", "vote": 1}, {"content": "Wonderful, thanks! Worked like a charm.\n\nQuick follow-up, I tried to adapt:\n\n`linkElem: WebElement = browser.find_element_by_link_text('Read Online for Free')`  \n[`linkElem.click`](https://linkElem.click)`()`\n\nfor a basic Google Search (google.com), such as:\n\n`linkElem: WebElement = browser.find_element_by_link_text('Google Search')`  \n[`linkElem.click`](https://linkElem.click)`()`\n\nIt loads the page and question just fine, but says \"NoSuchElementException\". I can clearly see the button that says, \"Google Search\" so why doesn't that work?\n\nThanks again for your help", "id": "fgfvpz0", "parent": "t1_fgfnakz", "vote": 1}, {"content": "I actually did try \" if counter == 3 \" and for some reason that goes to the else statement instead of returning a fail.", "id": "fggzqyd", "parent": "t1_fggsbl4", "vote": 1}, {"content": "Hi Standardw, the cake thing is an example, the app will be use for more complex chemical interactions, maybe I did a bad job with that example, let me rephrase: I have in excel a bunch of formulas interconnected that take a bunch of inputs (quantities of ingredients) and then give a list of results with different properties of the mix that depend directly of the input, so a little change in an input will chenge the outputs, there is an expected output but can only be achived by manually changing the inputs until you get close to the expected value, so the idea is to do something (better than pure bruteforce) that allows me to put the expected outputs and then it will give me the neccesary input(s) also with the ability to set some fixed input or even inputs that can only take a range of values, \n\nI hope this explains better my problem\n\npd. I already tried a bruteforce approach but its not the best, currently I am trying a genomic algorithm but I don't see how can I use the different formulas interconnected.", "id": "fgjcfhr", "parent": "t1_fgi3fa0", "vote": 1}, {"content": "I made a code to get tweets from a profile from tweepy, and it has a limit of 3.200 every 5 min, so what happens is my program closes afters tweet 3.2k and I dont know how to write something that makes my program wait  for the time needed and continue from where it started. Im trying to figure it out reading the tweepy doc but its been a big failure.", "id": "fgiq47f", "parent": "t1_fgi37fu", "vote": 1}, {"content": "I got it to work by just changing the target for anaconda prompt to the environment that I wanted to start in and that did the trick.", "id": "fgk0jdn", "parent": "t1_fgjz9g9", "vote": 1}, {"content": "Do you know if it builds a full list from a sequence first, or is it more crafty?", "id": "fgk1iu0", "parent": "t1_fgjlq5n", "vote": 1}, {"content": "This is in [the documentation](https://docs.python.org/3/c-api/bool.html), though you do need to read between the lines. It's important to remember that subclasses will evaluate to the parent class. For example:\n\n    >>> class A:\n    ...     pass\n    >>> class B(A):\n    ...     pass\n    >>> a = A()\n    >>> b = B()\n    >>> isinstance(b, B)\n    True\n    >>> isinstance(b, A)\n    True", "id": "fgl8q1e", "parent": "t1_fgj8hjl", "vote": 2}, {"content": "I have loads of VBA experience and a little bit of Java, C#, and others.  I'll check out both of those.  Thanks!", "id": "fgjg1xo", "parent": "t1_fgjax9l", "vote": 1}, {"content": "The first time I installed PyCharm it was like a bombardment of features which I didn't even know what they were for and if I need them or not. That was about a year ago and I quickly uninstalled it.\n\nNow I reinstalled it again and it's the best IDE I can think of.", "id": "fglg3vl", "parent": "t1_fgjax9l", "vote": 1}, {"content": "I tried with and without, this should work but all I typed and your code too only give me text about the date, nothing about the rest, cant figure why", "id": "fgltbil", "parent": "t1_fgl899a", "vote": 1}, {"content": "Hey Felix,  \n\nI just refactored my code. Because you helped me a lot I want to ask you some questions again.  \n\nyou can see my repo here: [https://github.com/faaabi93/pro-football-reference-scrapper/blob/master/main.py](https://github.com/faaabi93/pro-football-reference-scrapper/blob/master/main.py)\n\n&#x200B;\n\nMy first question is: Would it be smarter to follow your recommendation of using a list comprehension in my case? I decided against it, because by only using the function I implemented, I can save some requests and therefore traffic and I think my code is faster afterall? Do you think I made the right decision?", "id": "fgrzkg3", "parent": "t1_fglvsq4", "vote": 2}, {"content": "Yeah, there are indeed many unnecessary lines ...\n\nThank you very much for your reply. Really explained a lot to me :)\n\nI'll refactor my code now!", "id": "fgm1avo", "parent": "t1_fglvsq4", "vote": 1}, {"content": "Thank you very much!", "id": "fgold0q", "parent": "t1_fgmmaap", "vote": 1}, {"content": "    def add_grade(self, grade):\n        self.grades.append(grade.score)\n\ninstead of\n\n    def add_grade(self, grade):\n        self.grades.append(grade)\n\nalso works!", "id": "fgpacjp", "parent": "t1_fgmmaap", "vote": 1}, {"content": "[deleted]", "id": "fgmpx60", "parent": "t1_fgmp462", "vote": 1}, {"content": "Thank you for your input. That notion using a dictionary is helpful. I don't understand why the syntax in that for-loop makes sense. Why does the format method work attached to \"coolVar{:04}\"? Are { and } escape characters??", "id": "fgng64y", "parent": "t1_fgn9mi4", "vote": 1}, {"content": "Excellent pointer, thanks!", "id": "fgp85ep", "parent": "t1_fgoxgls", "vote": 1}, {"content": "Thank you! I thought of the same and it worked.", "id": "fgplf97", "parent": "t1_fgpku8e", "vote": 1}, {"content": "But the problem is that doesn't then count for the second element of the index. \n\nto get to \"third\" you skip over 2 entries.\n\nBut to get to \"fourth\" you skip over 3 entries. But you have to type the 4 instead. So it seems inconsistent that way.", "id": "fgq5g7g", "parent": "t1_fgq0dw4", "vote": 1}, {"content": "That visual will help, thank youi!", "id": "fgpl29j", "parent": "t1_fgpkikw", "vote": 1}, {"content": "this project is for a person who needs it in 3.3", "id": "fgq0e7t", "parent": "t1_fgq0522", "vote": 1}, {"content": "My teacher said i have to use that value1=sys.argv thing so that the solution is always correct no matter what numbers there are. Idk how to do that though.", "id": "fgrhsgi", "parent": "t1_fgpzp53", "vote": 1}, {"content": "Ok so let's say I have a list inside a list, how do I want to return them then? In this example it could be:\n\n`numberletter = [['1a', '2b', '3c', '4d', '5e', '6f'] , ['10p', '11q', '12r', '13s', '14t', '15u']]`\n\nI would still want only the letters, but inside those lists, so:\n\n`letters = [['a', 'b', 'c', 'd', 'e', 'f'], ['p', 'q', 'r', 's', 't', 'u']]`\n\nWhat would I have to do now?", "id": "fgs4rq5", "parent": "t1_fgpz84w", "vote": 1}, {"content": "I will!", "id": "fh1uzsa", "parent": "t1_fgyu9np", "vote": 1}, {"content": "I did.  would that conflict with the module?", "id": "fgt8g5e", "parent": "t1_fgt1sy5", "vote": 2}, {"content": "Yeah I like it so far. I also like python. I tried to learn R but it didn't feel as intuitive", "id": "fgzchaj", "parent": "t1_fgz84qh", "vote": 1}, {"content": "Thanks! but where exactly do the packages come from? Is there some central online database it gets it from?", "id": "fhofro2", "parent": "t1_fgyzfb1", "vote": 1}, {"content": "i have it: because my python version is 3.8\n\npython doesn't recognise it: see [this](https://i.imgur.com/TDYsQcB.jpg) \n\nos: win32\n\ninstalling method: by python.org/downloads", "id": "fgz63ib", "parent": "t1_fgyyrj2", "vote": 1}, {"content": "thanks very much.", "id": "fh3b6ss", "parent": "t1_fh2rnfs", "vote": 1}, {"content": "Thanks! I've never seen numpy or arrays before but this seems simpler than what I had. Should I try and load the whole Excel file into an array, modify it and then export it back to Excel then?\n\nEDIT: A quick Google search shows that pandas and xlsxwriter are good options for working with spreadsheets too", "id": "fh8utvl", "parent": "t1_fh5o3qp", "vote": 1}, {"content": "Dictionaries are just [associative arrays](https://en.m.wikipedia.org/wiki/Associative_array), that is, a collection of pairs of objects, a *key* and a *value*.  The *value* can be any python object but the *key* must be immutable and hashable.  Lots of languages have built in data structures similar to python dictionaries.\n\nWhat about python dictionaries confuses you?", "id": "fgi8ge0", "parent": "t1_fgg9d6l", "vote": 1}, {"content": " [https://wellsr.com/python/pandas-dataframe-from-dictionary-list-and-more/](https://wellsr.com/python/pandas-dataframe-from-dictionary-list-and-more/) \n\nCan you get your results into that format? essentially a dictionary with the column name as the key and then your sentences in a list as the rows for that column.", "id": "fgjaffp", "parent": "t1_fggrkl1", "vote": 1}, {"content": "Because buttons are generally not links. A link is a \n\n    <a href=\"url here\">link text here</a>\n\nelement, a button is either an <input> or a <button> element. A more archaic third option is to have an image inside the <a>, so \n\n    <a href=\"url here\"><img src=\"image url here\"/></a>\n\nbut that wouldn't qualify to having a certain 'link_text' obviously\n\nedit: almost forgot: you also could have any element basically with a onClick=\"js function here\" that could eventually trigger a navigation to another url.", "id": "fgfwtz6", "parent": "t1_fgfvpz0", "vote": 2}, {"content": "I just ran your code and it works fine, as you already know. There are many ways to accomplish a task and I see you've done yours with less code than the instructor. Most likely the instructor thought it would also be easier for students to follow along by including the extra variables. \n\n&#x200B;\n\nYou should expand on the game! I would suggest allowing answers in any case so that giraffe would be correct along with Giraffe and GIRAFFE, and so on.", "id": "fghwi6e", "parent": "t1_fggzqyd", "vote": 1}, {"content": "So a) craft a well-made algorithm for that or b) try machine learning.", "id": "fgjtmak", "parent": "t1_fgjcfhr", "vote": 1}, {"content": "Well at this point I just Google \"restart program after X minutes\" and it will show you some forum question. Hint: use the time.sleep function and sleep for 600 seconds.", "id": "fgiqou3", "parent": "t1_fgiq47f", "vote": 2}, {"content": "IDLE should be installed with any recent version of Python. \ud83d\udc4c", "id": "fgjn2p1", "parent": "t1_fgjg1xo", "vote": 1}, {"content": "Let us see all your code.", "id": "fgluuh0", "parent": "t1_fgltbil", "vote": 1}, {"content": "Nicely done! I mean, list comprehensions could be nice e.g. in the loop on L:40. You could then do myList.append([name, stub] + lst) and save a lot of typing. But the second loop in L:64 seems to be a bit more complicated because you actually need the individual values. Also, your get_stat currently has lots of similar lines. You might want to get rid of those too:\n\n    def get_stat(row, att):\n        try:\n            text = row.find(\"td\", attrs={\"data-stat\": att}).get_text()\n        except AttributeError:\n            text = None\n    \n        if not text:\n            text = \"0\"\n    \n        return text\n\nThough I'm not sure what the row.find returns. But \"if not text\" works for None values, empty strings and so on. In general, try to do everything only once. Then if you can't, it's ok. But figure out the reason why you can't.\n\nJust to share a beautiful piece of logic, though a bit confusing at first: you could also drop the if condition. Python's or operator returns the first operand that is evaluated to true. But this could be less readable if one isn't aware of what it does.\n\n    return text or \"0\"", "id": "fgs1wfk", "parent": "t1_fgrzkg3", "vote": 2}, {"content": "When I was starting out, I did exactly the same stuff. But a sense has developed, that basically tells me that if there's something complicated going on, it could be simplified. In terms of learning specific things, there are lots of tutorials out there. If you are very new to coding altogether, I'm sure any tutorial will get you further, as you'll acquire pieces of neat information all the time and start building knowledge of the beast that is Python. But if you are interested and don't mind reading, search the official documentation on the things you are using, for example [strings](https://docs.python.org/3.8/library/string.html) or [loops](https://docs.python.org/3/reference/compound_stmts.html). It's all there.\n\nCertainly there is a way to keep spaces. You can add extra conditions to the if clause, or use the first version to construct more complex logic. You're welcome! Have fun :D", "id": "fgmrb9y", "parent": "t1_fgmpx60", "vote": 1}, {"content": "There is a mini language, escaped by \"{\" and \"}\", used for formating text:\n\n[https://www.digitalocean.com/community/tutorials/how-to-use-string-formatters-in-python-3](https://www.digitalocean.com/community/tutorials/how-to-use-string-formatters-in-python-3)\n\nThat one means \"zero pad out to 4 digits\". It's bit of a strained example because the simple tuple above is probably a better way to store your data as you can use \"cools\\[0\\]\" where you where hoping to use \"coolVar0\", or \"my\\_dict\\['coolVar0'\\]\".", "id": "fgnj5gb", "parent": "t1_fgng64y", "vote": 1}, {"content": "That is why they are half-open ranges; so that you have this other useful invariant:\n\n    >>> x = 2; y = 4\n    >>> len(my_list[x:y]) == y - x\n    True\n    >>>", "id": "fgq9mu7", "parent": "t1_fgq5g7g", "vote": 1}, {"content": "The shell puts anything following the command into argv, so you run the program with something like 'python3 myprog.py 2,5,1'.", "id": "fgrn0zp", "parent": "t1_fgrhsgi", "vote": 1}, {"content": "You would have to know how deep the list goes and use one nested loop for each level of nesting in  numberletter.\n\n    \n    >>> [[inner[-1] for inner in inners] for inners in numberletter]\n    [['a', 'b', 'c', 'd', 'e', 'f'], ['p', 'q', 'r', 's', 't', 'u']]\n    >>> \n\nDo you know how many levels of nesting you will have?", "id": "fgso6e9", "parent": "t1_fgs4rq5", "vote": 2}, {"content": "yes. When you do \n\n    import whois\n\npython first looks in the same directory you're in to see if it can find it. In this case, it can, so it imports the file [whois.py](https://whois.py). In that file it sees import whois and it looks in the same directory and finds [whois.py](https://whois.py) and tries to import that ... and so on. Python has some protection against this kind of thing, hence the warning about circular imports.\n\nSo yeah, don't do that.", "id": "fgt9m8u", "parent": "t1_fgt8g5e", "vote": 2}, {"content": "Yes. https://pypi.org is the default location for pip.", "id": "fhovl6c", "parent": "t1_fhofro2", "vote": 1}, {"content": "Try pip3", "id": "fgzm4x4", "parent": "t1_fgz63ib", "vote": 1}, {"content": "If your data matches the numpy array features, I can recommend it.\n\nIf your data is more than pure numbers and you need indexing, relations, stats., storage options, etc. then pandas is really effective.\n\nEdit: pull them all together to try them out in jupyter: [https://jupyter.org/](https://jupyter.org/)", "id": "fh991ai", "parent": "t1_fh8utvl", "vote": 2}, {"content": "Managed to find a solution that worked.  \n\nCreated an empty list with the variable equaling the textblob\n\nBasically:\n\nfrom textblob import TextBlob  \nimport csv\n\nblobs = []\n\nblob = TextBlob('sss')  \nblobs.append(blob)\n\ndf = DataFrame()  \ndf['Comments'] = blobs\n\ndf. to_csv('test.csv', index=False)  \n\nHope this helps anyone that's looking for a solution", "id": "fgjis50", "parent": "t1_fgjaffp", "vote": 1}, {"content": "you are so helpful!", "id": "fgk3kdm", "parent": "t1_fgjtmak", "vote": 1}, {"content": "Using findall it just ignores the regex and print the whole txt file and finditer prints only the date.\n\nimport re  \nlista = open('tweetsdalorde.txt', 'r', encoding=\"utf-8\")  \ncontent = lista.read()  \nlista.close()  \npadrao = re.compile(r\"'created\\_at': (.\\*) 'display\\_text\\_range'\")  \nmatch = padrao.finditer(content)  \nlistaproxie = \\[\\]  \nfor x in match:  \nlistaproxie.append(x)  \n\n\nprint(listaproxie)", "id": "fgm2pk9", "parent": "t1_fgluuh0", "vote": 1}, {"content": "What does argv even mean", "id": "fgrni73", "parent": "t1_fgrn0zp", "vote": 1}, {"content": "I think two, thank you very much for this!", "id": "fgu49nt", "parent": "t1_fgso6e9", "vote": 1}, {"content": "Gotcha, I have changed the name of the script to [DNSLookup.py](https://DNSLookup.py) but now I have a different error.  These things are so frustrating when it has nothing to do with the code and just getting the environment setup.\n\n&#x200B;\n\nTraceback (most recent call last):\n\n  File \"C:\\\\Development\\\\WhoIs\\\\[DNSLookup.py](https://DNSLookup.py)\", line 2, in <module>\n\ndomain = whois.query('[google.com](https://google.com)')\n\n  File \"C:\\\\FOO\\\\Local\\\\Programs\\\\Python\\\\Python38-32\\\\lib\\\\site-packages\\\\whois\\\\\\_\\_init\\_\\_.py\", line 61, in query\n\npd = do\\_parse(do\\_query(d, force, cache\\_file, slow\\_down, ignore\\_returncode), tld)\n\n  File \"C:\\\\Users\\\\rschuman\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python38-32\\\\lib\\\\site-packages\\\\whois\\\\\\_1\\_query.py\", line 46, in do\\_query\n\n\\_do\\_whois\\_query(dl, ignore\\_returncode),\n\n  File \"C:\\\\FOO\\\\Local\\\\Programs\\\\Python\\\\Python38-32\\\\lib\\\\site-packages\\\\whois\\\\\\_1\\_query.py\", line 60, in \\_do\\_whois\\_query\n\np = subprocess.Popen(\\['whois', '.'.join(dl)\\], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n\n  File \"C:\\\\FOO\\\\Local\\\\Programs\\\\Python\\\\Python38-32\\\\lib\\\\[subprocess.py](https://subprocess.py)\", line 854, in \\_\\_init\\_\\_\n\nself.\\_execute\\_child(args, executable, preexec\\_fn, close\\_fds,\n\n  File \"C:\\\\FOO\\\\Local\\\\Programs\\\\Python\\\\Python38-32\\\\lib\\\\[subprocess.py](https://subprocess.py)\", line 1307, in \\_execute\\_child\n\nhp, ht, pid, tid = \\_winapi.CreateProcess(executable, args,\n\nFileNotFoundError: \\[WinError 2\\] The system cannot find the file specified\n\n\\[Finished in 0.328s\\]", "id": "fgtc1pp", "parent": "t1_fgt9m8u", "vote": 2}, {"content": "ok but\n\n1) how can i get it?\n\n2) is there a file to execute such as get-pip.py?", "id": "fh07bpu", "parent": "t1_fgzm4x4", "vote": 1}, {"content": "Thanks for replying! The data is so basic that I don't know what indexing, relations etc mean here. It's just a few columns of text and numbers. I multiply and divide columns by other ones and rearrange them so that I don't need to scroll horizontally to see them all. It takes less than 30 seconds to do in Excel. That code I posted above took me an hour and a half to get sort of working. It was the first thing I thought of trying to automate\n\nI like that every time you reply I end up with something new I need to look up. Thanks again!", "id": "fhbzbv5", "parent": "t1_fh991ai", "vote": 1}, {"content": "You've got the whole match in there, you are just not understanding the match object:\n\n    In [84]: content = \"\"\"'created_at': 'Tue Feb 04 08:43:11 +0000 2020', 'id': somerandomID, 'id_str': 'somerandomID', 'full_text': 'RT random_user: THERE IS SOME RANDOM\n        ...: TEXT HERE, 'truncated': False, 'display_text_range'\"\"\"\n        ...: padrao = re.compile(r\"'created_at': (.*) 'display_text_range'\")\n        ...: match = padrao.finditer(content)\n        ...: listaproxie = []\n        ...: for x in match:\n        ...:     listaproxie.append(x)\n        ...:\n        ...: print(listaproxie)\n    [<re.Match object; span=(0, 196), match=\"'created_at': 'Tue Feb 04 08:43:11 +0000 2020', '>]\n\nSee that part `<re.Match object:` in the printout? That is telling you that the listaproxie variable is holding a list that contains a single match object. Why? Well [The finditer documentation](https://docs.python.org/3/library/re.html#re.finditer) gives you some insight. i.e. finditer returns an iterator of non-overlapping *match objects* which you put into a list. So if you do this:\n\n    In [85]: match_data = listaproxie[0]\n    \n    In [86]: match_data.groups()\n    Out[86]: (\"'Tue Feb 04 08:43:11 +0000 2020', 'id': somerandomID, 'id_str': 'somerandomID', 'full_text': 'RT random_user: THERE IS SOME RANDOM TEXT HERE, 'truncated': False,\",)\n\nAnd that's all the data you've been looking for.", "id": "fgohkie", "parent": "t1_fgm2pk9", "vote": 1}, {"content": "ARGument Values: the values that were provided as the argument to the program. But that includes the program name itself, try\n    \n    import sys\n    print(sys.argv)\n\nWhat you can do is take its last argument using `[-1]` \n\n     import sys\n     numbers = [int(s) for s in sys.argv[-1].split(',')]\n     print(sum(numbers))", "id": "fgs6ab7", "parent": "t1_fgrni73", "vote": 1}, {"content": "whois is a wrapper for the Linux command 'whois' and so does not work on windows.\nIt probably could via bash for windows, i'm not sure. \n\n[You want python-whois instead.](https://github.com/richardpenman/pywhois)", "id": "fgtery4", "parent": "t1_fgtc1pp", "vote": 2}, {"content": "Looks like you're on windows. The [PyPI page for whois](https://pypi.org/project/whois/) suggests that it is a wrapper for the Linux whois command. So...", "id": "fgteb7v", "parent": "t1_fgtc1pp", "vote": 1}, {"content": "No. I mean, just try that instead of pip.", "id": "fh07kpq", "parent": "t1_fh07bpu", "vote": 1}, {"content": "Jesus, thank you so much!!!!!", "id": "fgpazv9", "parent": "t1_fgohkie", "vote": 1}, {"content": "Wow it worked. But what does the \"for s in sys.argv\" mean?\nAnd then ive been working on another one\nhttp://imgur.com/gallery/1tED389\nBut i am stuck, like i barely know the commands. How do i start it?", "id": "fgsx2i1", "parent": "t1_fgs6ab7", "vote": 1}, {"content": "Thanks I figured out what I was doing after the u/lanemik comment.  I uninstalled the previous one and added python-whois and it is now working. \n\n&#x200B;\n\nYou did it Reddit", "id": "fgtiu0j", "parent": "t1_fgtery4", "vote": 2}, {"content": "but how do i get that? is it a website or something i install on my python?", "id": "fh08ehk", "parent": "t1_fh07kpq", "vote": 1}, {"content": "Either 1) it's already there because you installed python, 2) it's already there because you did the get pip command or 3) we have to figure out what the eff is wrong with your system.", "id": "fh091mx", "parent": "t1_fh08ehk", "vote": 2}, {"content": "probably option 2, but 3 is possible since i use win32 to code... lol", "id": "fh0dgxo", "parent": "t1_fh091mx", "vote": 1}, {"content": "thanks, that was very helpful", "id": "fh0di8b", "parent": "t1_fh091mx", "vote": 1}], "link": "https://www.reddit.com/r/learnpython/comments/exy1ie/ask_anything_monday_weekly_thread/", "question": {"context": "Welcome to another /r/learnPython weekly \"Ask Anything* Monday\" thread\n\nHere you can ask all the questions that you wanted to ask but didn't feel like making a new thread.\n\n\\* It's primarily intended for simple questions but as long as it's about python it's allowed.\n\nIf you have any suggestions or questions about this thread use the message the moderators button in the sidebar.\n\n**Rules:**\n\n* Don't downvote stuff - instead explain what's wrong with the comment, if it's against the rules \"report\" it and it will be dealt with.\n\n* Don't post stuff that doesn't have absolutely anything to do with python. \n\n* Don't make fun of someone for not knowing something, insult anyone etc - this will result in an immediate ban.\n\nThat's it.", "id": "exy1ie", "title": "Ask Anything Monday - Weekly Thread"}, "resource": "Reddit"}, {"answers": [{"content": "I'm not a software developer, my background is network engineering, so someone more knowledgeable can feel free to  correct this.\n\nOOP is initially more difficult to understand, but once it clicks, it's actually very easy conceptually and provides a lot of benefits compared to procedural programming, for example:\n\n* Your data and methods (think functions) to manipulate the data are \"combined\" together, which makes it easier to manipulate data. Think for example of unit conversions. Imagine you're measuring temperatures, and each data point (i.e. measurement) is a separate Temperature object. Each of those stores the actual temperature reading in Kelvin, but you can have methods to convert it to Celsius and Fahrenheit, as well as say a text string method which gives you a string representation of that temperature with the unit suffix, all of these neatly \"packaged\" together with the data point. The difference in thinking then is that instead of thinking: \"I have this float / int which is my temperature and I now need to convert it to this unit for that reason using a function somewhere else in the code, or convert to another format for displaying on the web\", you're now asking that single temperature object for its own representation the way you need it, but it's still the same object.\n* You can easily extend methods, for example through subclassing. Imagine someone has implemented a basic NetworkHost object. This object can have a number of properties (think variables in a structure), e.g. a MAC address, a serial number and an IP address. You're now working on an application, which deals with servers, switches and routers. You can take that Host object and make a Server object which is a subclass of Host. It will retain all Host's properties, but now you can add your own, for example number of CPUs, disk size and/or RAM size. Similarly, you can extend (subclass) the Host object and make a Switch object from it. Again, all properties of Host will be present (without you having to do anything!) in a Switch object, but you can add your own (e.g. storing number of physical ports, STP bridge ID or similar). Now, not only your subclasses inherit properties (variables), they also inherit methods (functions) from Host. This means, if a Host object implemented a method for setting an IP address, both the Server and the Switch objects will have that method available by just the virtue of being subclasses of the Host object. So all you have to do now is to implement just the methods (functions) specific to the subclass (e.g. a method to set the RAM size or STP bridge ID), but you don't need to worry about the basic methods. This whole inheritance paradigm is very powerful and allows for reducing the code repetition and when well designed massively increases code readability and so on.\n\nHaving said all that, for simple tasks it's a perfectly valid approach to just write procedural scripts, without worrying about OOP. However, if your script has a potential to grow (e.g. either by extending its functionality, or for example because you want to add a GUI, or need to implement an API), the barrier of entry into OOP with Python is actually quite low.\n\nSo, my recommendation is, even if you don't see the need to use OOP today, it would be well worth looking at over a weekend or two - it may open your eyes as to the new ways of doing things.\n\n&#x200B;\n\nPS. Incidentally, with regard to the other comment above.. actually C is **NOT** an object oriented language (C++ is) and most of the UNIX-like OSes are **NOT** written with/as OOP. By extension, a lot of the network devices OSs are similarly NOT OOP. This is largely historical - UNIX was developed in C, before C++ even existed (and in fact C was created to develop UNIX).\n\nPS2. MacOS GUI apps, iPhone apps, Windows applications, Android apps - these are all good examples of OOP applications.", "id": "ep0xlse", "parent": "t3_btootg", "vote": 35}, {"content": "OOP is important, and I'll answer your question and help understanding in a single shot.\n\nOOP didn't click for me initially. I'm an NE, I  had some coding experience, but all the analogies like 'cars' and such didn't help.\n\nUntil I found this article.\n\nhttps://www.quora.com/How-do-Python-Classes-work\n\nClasses represent something that could be, with 2 major features.\n\nThings I can know about it.  \nThings i can do with it.  \n\nEnter the 'die' class. There isn't a die yet, but in the class I can define the things I can know and the things I can do if I were to have one.\n\nSides, value, roll()\n\nI can now create a die by calling the class (create an object)\n\nWith my die I can check its sides, its value, or i can roll() it.\n\nFor some reason this analogy just clicked. Hope this helps.\n\nNow instead of a die, it's a router.", "id": "ep3a7m1", "parent": "t3_btootg", "vote": 3}, {"content": "In my case we are using Ansible and it seems to get anything done that isn't dead simple I need to write a plug-in.  If you write a plug-in in Ansible you have to inherit the class.  So if you don't understand class inheritance you won't be able to understand what you need to do.  And the documentation on the Ansible site is about two paragraphs per plug-in type so I had to understand the code and look at the included plug-ins to see what I need to do.\n\nNow, if you are just using netmiko or napalm then you don't really need to understand inheritance.  However it would be good to understand what you are doing when you create an instance of the class and then use the methods.\n\nBut either way the beauty of it is that you can inherit any class.  I needed something close to CiscoConfParse so I just import the class, specify it as my base class, and change the methods I need to change and add new ones.", "id": "ep3ozfl", "parent": "t3_btootg", "vote": 3}, {"content": "> For some reason it\u2019s way more difficult to understand than \u201cstandard\u201d functional programming.\n\nFascinating. \n\nI found \"Functional Programming\" much harder to grasp, though that might have been because my first functional language was Lisp, which is like a death of a 1000 cuts by all the parenthesis to my eyeballs. (Some may disagree...)\n\nWithout a doubt, learning Functional Programming in Python would have been a lot saner.\n\nAnyway, OOP isn't that hard. Most courses just make it seem harder than it is.\n\nOOP is typically most useful for \"modeling\" things. If what you're programming is mostly about actions and less about \"the model\", then Functional Programming may be a better choice.\n\nPersonally, I feel Networking is all about the model and OOP lends itself well to Networking.\n\nThat said, Python (like many languages these days) are Multi-Paradigm, so don't feel restricted to strictly one paradigm. Most of my code these days is some mix of OOP, Functional, and Procedural. It's rare that my code is purely one paradigm.", "id": "ep12871", "parent": "t3_btootg", "vote": 4}, {"content": "I agree with everyone else here with one exception.\n\nWhen dealing with multiple devices you may want to create an object of each and fire off functions just for that one device based on output from another. For simple network automation, no objects are needed.\n\nThink of this: you want to build an ACL for the current traffic and nothing else:\n(1) API call to NetFlow collecting device (I did this with Stealthwatch)\n(2) log into the gateway of the network, and check for FHRP (HSRP/VRRP/GLBP/NX VPC handling of FHRP/etc)\n(3) Apply to correct interface on device(s)\n\nThis makes the script work without much thought but logging into multiple devices and checking interfaces would benefit from the efficiency of objects (each device as an object) versus logging in and back out of devices. \n\nHopefully, I didn\u2019t muddy the water with the example", "id": "ep0xbq9", "parent": "t3_btootg", "vote": 2}, {"content": "I\u2019m a network engineer with heavy focus on automation. I think it\u2019s safe to focus on functional programming to start.  If you want to spend more time studying OOP, one of the best real world examples is writing Rest APIs. It makes you think of constructing an object with CRUD, create, update, read, and delete.", "id": "ep0vjen", "parent": "t3_btootg", "vote": 2}, {"content": "IMHO, it\u2019s overkill.  Regular procedural programming is enough.  I advise to use the tools as most of your peers use which is Python.  Not exactly known to use the OOP paradigm.", "id": "ep1cmod", "parent": "t3_btootg", "vote": 1}, {"content": "One point of clarification, the programming you refer to isnt actually functional programming. Functional is an entirely different paradigm than both OOP and traditional modular programming where there can be no side effects of any given method.  It reads and feels more like pure math than programming (to me at least.)", "id": "ep1txqv", "parent": "t3_btootg", "vote": 1}, {"content": "There are people here talking about 'functional programming' [here's a list of functional programming languages.](https://en.wikipedia.org/wiki/List_of_programming_languages_by_type#Functional_languages)  There are  [4 major programming paradigms](http://www.eecs.ucf.edu/~leavens/ComS541Fall97/hw-pages/paradigms/major.html), and when people here are talking about how it's easier to start with functional programming, most likely they are thinking of *logical* programming with functions in the code.\n\nIt's straightforward enough to use python in the conventional logical sense without diving into object oriented use cases, and everything will work in much the same way as Perl, C, Java, and so on.  This make is easy to dip your toes into OOP one small use case at a time.  If network engineering is your background, consider this use case: IP Addresses.  In most cases when you sort a list of IP addresses, you are sorting a list of character strings, so the sort order would put 12.12.12.12 *after* 110.110.110.110, which for me is maddening.  However, in python you can import a module called *ipaddress* which gives you another data type that *will* sort IP addresses correctly because in that module the IP addresses are actually just integers.  Tests like \"<\" and \">\" also work as expected.\n\nAnd just as instances of integers have methods to add, subtract, multiply, and divide, instances of IP addresses have functions to test if an IP address is 'in' an IP network, or if two IP networks 'overlap' - things that a network engineer would immediately appreciate.  In python *everything* is an object with associated methods - integers (add, subtract, etc), lists (sort, contains or 'in', pop, push, etc), dictionaries (assign, contains, etc), and so on.  When you issue \"L = [1]\" you create an *instance* of the python builtin class 'list' and push an *instance* of python's builtin class 'integer' as the first member of that list.  If you want a list class that behaves differently or has an additional function, you can create your own class and inherit all the functions and methods from the builtin class 'list' and then either add more functions of your own, or replace those that some with the list class.\n\nI'd advice installing iPython as an interactive shell since it has tab completion which makes things much easier to use and explore.", "id": "ep57brj", "parent": "t3_btootg", "vote": 1}, {"content": "Yeah so, after reading this thread it's probably not best to ask about OOP in this subreddit as this subreddit is not really full of folks who are initiated in a proper computer science background.\n\n&#x200B;\n\nA lot of terminology being thrown around this thread is riddled with mistakes, not out of malevolence but simply out of ignorance.  Not all of it, there seem to be some really smart people who are correct about the OOP stuff here and how it works, but I also see some people who I think may be out of their element responding.\n\n&#x200B;\n\nHere are my two cents:\n\n\\*\\*\\*OOP is your friend.\\*\\*\\* Even the most simple of tasks can be reduced in complexity by employing OOP.\n\nOOP is all about recycling and reusing things efficiently, if you're writing an automation script your goal is to increase efficiency, you don't increase efficiency by writing the same routine over in a procedural context.\n\nOOP is NOT overkill- it's actually very simple.  I'm not trying to sound high and mighty here, I'm just telling you as someone who long ago resisted OOP and then learned to love it.  It really is simple and if you don't get it, (which is OK!!!  I don't understand a whole whole lot but i try to learn new things every day), then you really don't get procedural programming either.\n\nStart small and simple- Don't try to develop some massively complex script from the get go.   Start off with simple pieces and get familiar with how things work.  Keep doing it and keep learning how to accomplish new things.  Keep doing things in an OOP mindset.  One day you'll be able to incorporate all of your simple tasks in a much more complex procedure in a fashion that makes sense.  This is how you get better.  Practice.\n\n&#x200B;\n\nMy automation path of learning has come a long way- I started off like most people- writing simple batch file scripts in windows\n\n&#x200B;\n\nThen I learned Visual Basic 6 (back in early 2000's)\n\n&#x200B;\n\nThen in college I started learning C++ (probably had the biggest impact on my understanding of programming and Comp Sci)\n\n&#x200B;\n\nAt the end of college I started focusing on learning python (which was a breath of fresh air compared to C++)\n\n&#x200B;\n\nYears after I graduated college I started learning linux/bash heavily\n\n&#x200B;\n\nNow I'm writing larger scale python scripts that include JSON, XML, jinja, yml, that tie into bash and ansible scripts and work with APIs in Cisco ACI, azure, Palo alto, blah blah blah.   I've learned over time to break a complex task down into a sum of small tasks, write the necessary function including the necessary data structures for each task, and then combine results.  I wouldn't even bother writing scripts without the OOP side of things because the amount of time you'd waste writing the same things over and over and wasting massive amounts of time tracing the hell that the debugging of \"spaghettification\" of code can produce if you ignore OOP wouldn't be worth the effort in the slightest.\n\n&#x200B;\n\nDO NOT BE AFRAID OF OOP - EMBRACE IT.", "id": "ep593go", "parent": "t3_btootg", "vote": 1}, {"content": "While python is an object oriented language, your code doesn't have to follow object oriented design.  Python is still really useful, even if you don't write code using classes and OOP techniques.  I find python to be really useful simply because the syntax is easy and coding in it looks more sane and readable.  I come from a java and C/C++ programming background (a long long time ago), and python is just a better language to code in.\n\nThe object oriented part of modern languages isn't really that complicated either.  I guess people can't wrap their head around a class/object, but inside the classes/objects are just normal variables that you can work with (even if they are nested a few classes deep).  Its really just a method of organziation and grouping that helps keep code cleaner.  \n\nAnyways, python is really the best thing in the world to work with. I always complain about powershell, an object based scripting language, because it uses a syntax similar to C#.  Python is just so much more fluid, even though both are object based.  \n\nI'm not sure how much you'd end up using it in the end (I personally don't use it extensively for networking), but it is a great automation tool.", "id": "ep6fazk", "parent": "t3_btootg", "vote": 1}, {"content": "I worked as a programmer for a decade in a variety of languages (python, perl, c#, java, php, etc) and learned languages in other programming paradigms (haskell, sml, erlang, prolog, sql, etc) .  \n\nIMO there are better scripting languages for OO than python (Ruby comes to mind).  I wouldn't even say it is vital to know OO in python.  However, pieces of it can make some tasks easier and code cleaner.  With anything, it really depends on the task at hand.  Now that I am in network engineering, I use OO when needed and don't use it when I don't need it.\n\nOne example I can give you for using it related to network devices -   lets say you have switches or routers from different vendors Cisco and Juniper.  You need to provision a port, lets say add a vlan.  Your code shouldn't need to know the details of this, it just needs to provision:\n\n    switch.AddVlan(200)\n\nIMO this is where OO and its interfaces are very powerful, especially when combined with generics.  A definition of behavior (i.e. OO interface) is created saying all switches regardless of vendor should be able to add a vlan.  Then you write the implementation of that blueprint (OO class implementing the interface).  So you have an interface file with behaviors defined, and two classes that implement the behavior, one for Cisco and one for Juniper.  In those classes you define the behavior.  \n\nExample in C#(no generics) but easily translatable to python:\n   \n    // Yes I know this is not a complete program (missing ip address and login credentials), it is to show the concept  of an example of when to use OO.\n\n    // namespace is the package for organizing code\n    namespace Provision\n    {\n        // Define actions all switch vendors should do\n        public interface Switch\n        {\n             void AddVlan(int vlan);\n        }\n    }\n\n    namespace Provision.Cisco\n    {\n        // Implement Switch interface\n        public class CiscoSwitch : Switch\n        {\n             public void AddVlan(int vlan)\n             {\n                  // Commands go here to provision a vlan in Cisco\n             }\n        }\n    }\n\n    namespace Provision.Juniper\n    {\n        // Implement Switch interface\n        public class JuniperSwitch : Switch\n        {\n             public void AddVlan(int vlan)\n             {\n                  // Commands go here to provision a vlan in Juniper\n             }\n        }\n    }\n\n    // Main \n    // Assume you have a list of network devices\n    foreach( var device in devices)\n    {\n         // Detect type of device inside a function (called DetectSwitch here), however that is done in your work environment and return the CiscoSwitch or JuniperSwitch object.  Can do this many nice ways, though for most of you an if statement is probably easiest.\n         var switch = DetectSwitch(device); \n         // Add vlan 200\n         switch.AddVlan(200);\n     }\n\nThe calling program does not need to know implementation details.  This allows you to do many interesting things.  Dynamic creation on the fly, inversion of control, etc.  Very flexible.  However, it can be overkill for 90% of programs.  Stick with what is easiest and works.  If you then find your program expanding, refactor as needed.  Remember to write nice tests to detect breakage.  That has saved my ass many times, especially when dealing with third party vendors breaking their APIs.", "id": "ep7jvo6", "parent": "t3_btootg", "vote": 1}, {"content": "All the engineers I know do their scripting in Python. Don\u2019t think OOP comes into it much. That being said, all these underlying OSes on network devices are written in OOP languages like C. So if you have any aspirations to work for vendors and develop new OSes or you want to break into security, learning an OOP language couldn\u2019t hurt.", "id": "ep0r2eb", "parent": "t3_btootg", "vote": 0}, {"content": "I would learn lua and pflua. It's a glimpse into the future of networking", "id": "ep26n81", "parent": "t3_btootg", "vote": 0}, {"content": "Software engineer here. Don't do it. OOP was invented 40 years ago to solve problems of a different era that are no longer important. What is important today is code readability, reliability and concurrency. Think configuring 10000 routers simultaneously. OOP unfortunately doesn't solve these. Latest trends in the industry are very much anti-OOP. For instance the coolest language right now is GoLang and by all means it's not OOP. Also what others mentioned that most of the system software including Python itself is written in plain C which is not-OOP. Also don't mistake Python for a programming language. It's a scripting language and using OOP makes things overly and unnecessarily complicated not solving any problem.", "id": "ep2l6x2", "parent": "t3_btootg", "vote": -3}, {"content": "Great overview, thanks. For me OOP is much easier to comprehend. It\u2019s clear, allows code re-use and provides nice abstractions..inheritance etc.", "id": "ep1382t", "parent": "t1_ep0xlse", "vote": 3}, {"content": "Only thing I understood out of all of that is use SMTPv3.", "id": "ep3pgb6", "parent": "t1_ep0xlse", "vote": 3}, {"content": "I didn't read it, but it looks like /u/frozen-geek probably said what I was going to say. OOP is harder to learn and develop up front, and not something you would use to write a quick little script that you're going to use one time, but creating resusable classes allows you to whip out that one-time script more easily.\n\nFor example, you write a Router class. The class has the method sshTo(). You have tested this method and you know it works. Now you can safely reuse it in another script. \n\nRouter r = new Router(\"NewYork\");\n\nr.sshTo();\n\nYou no longer care about the code that makes sshTo() work. And that's not exactly an OOP concept, but OOP is a programming philosophy that helps create modularized, reusable code. It's going to take you a long time to develop a Router class and test it. But you're a network engineer; you're going to be able to use it over and over again.", "id": "ep1xmmp", "parent": "t1_ep0xlse", "vote": 3}, {"content": "> Incidentally, with regard to the other comment above.. actually C is NOT an object oriented language (C++ is) and most of the UNIX-like OSes are NOT written with/as OOP. By extension, a lot of the network devices OSs are similarly NOT OOP. This is largely historical - UNIX was developed in C, before C++ even existed (and in fact C was created to develop UNIX).\n\nYeah... that was the biggest selling point of C++. C gives you the low level nitty gritty hardware manipulation, but it doesn't scale as well because it lacks a most of the contemporary object oriented features. OOP allows you to take a \"step back\" and modularize things into building blocks so you can accomplish larger goals.\n\nA lot of modern programs will do the bulk of functionality in an object language like Java, C++, or Python with bits written in C only when necessary for performance or capability. C's pointer functionality and access to raw memory lets you do some really cool things, but it's impossible to keep that power in check as your program grows past one person's comprehension.", "id": "ep126qj", "parent": "t1_ep0xlse", "vote": 1}, {"content": "I believe OP may have meant \"procedural programming\", i.e. using functions.\n\nOP, lookup the differences between [Functional Programming](https://en.wikipedia.org/wiki/Functional_programming) (Python has a growing library of functional features, they're pretty neat), [Procedural Programming](https://en.wikipedia.org/wiki/Procedural_programming) (putting code in functions), and [OOP](https://en.wikipedia.org/wiki/Object-oriented_programming).", "id": "ep2a780", "parent": "t1_ep12871", "vote": 5}, {"content": "Python is absolutely an object oriented language", "id": "ep1ncc3", "parent": "t1_ep1cmod", "vote": 8}, {"content": "> IMHO, it\u2019s overkill. Regular procedural programming is enough. I advise to use the tools as most of your peers use which is Python. Not exactly known to use the OOP paradigm.\n\nAbsolutely everything you interact with in Python is an object. Functions are objects. Strings are objects. Integers and floats are objects.\n\nThe question isn't whether you want to use OOP in Python -- you already are --, the question is whether you want to spend time creating your own custom classes in Python. This is a question of program layout and structure. If you need a quick script that does one thing to one thing (or at least just one type of thing) over and over again, a class won't really benefit you much.\n\nIf you find yourself constantly passing the state of multiple things to different functions over and over again, yeah, a custom class is going to be useful. Exactly how deep down the rabbit hole of Pythonic class design you need to go depends on what you find yourself wanting to do with the class. Not every object needs to respond to the .format method, or be hashable, or implement bitwise operators.\n\nIf you're writing a script to validate VLAN config across a list of switches of the same make and model...sure, write it procedurally. If you're writing a program to track a list of network devices, listening for SMNP traps or polling an API as appropriate for dissimilar makes and models, and to implement autoconfiguration within the context of a broader operations support system (automated port turnup, etc), you're going to want custom classes.\n\nA good network engineer might go their whole career without ever writing a class. Another might do so many times a month.", "id": "ep1q9z8", "parent": "t1_ep1cmod", "vote": 10}, {"content": "Agree is overkill. Just json, jinja and yaml and that it", "id": "ep1s3tb", "parent": "t1_ep1cmod", "vote": -2}, {"content": "This, but mainly because OOP isnt a requirement to get started for network engineers.  I've coded in python for 4 years and rarely used more than functions.. never used through instatiaed instances of a object more than opening the connections to my devices. Dont get me wrong it's cool that pythin CAN do OOP.. it's just not a must to know how to code. It's a must to know how to use them ... but not code them yourself.", "id": "ep2kfq6", "parent": "t1_ep1cmod", "vote": -3}, {"content": ">underlying OSes on network devices are written in OOP languages like C\n\nNearly all kernel are written in straight C, and C is not an OOP language. You can force it to be but it wasn't designed for that. Mac drivers can be written in a subset of C++ but that's it. The XNU kernel is written in C.", "id": "ep0vp67", "parent": "t1_ep0r2eb", "vote": 11}, {"content": "Cisco IOS is written in plain C, Cisco NX-OS control plane runs on Linux kernel which is written in plain C, drivers for the data plane / data fabric are written in plain C, Arista EOS runs on Linux kernel with Fedora user-space in different languages.\n\nBottom line, things that actually matter in network devices are written in ~~functional~~ procedural programming languages.", "id": "ep0uw51", "parent": "t1_ep0r2eb", "vote": 7}, {"content": "I'm no expert, but my understanding is OOP is as much a style or approach to structuring programs as it is a particular language. That is, you can write both object based or traditional flow based code in Python. I don't have enough experience to answer the OP, and freely admit I also struggle wrapping my head around the benefits of OOP, but look forward to reading further comments.", "id": "ep0vhbs", "parent": "t1_ep0r2eb", "vote": 2}, {"content": "> All the engineers I know do their scripting in Python. Don\u2019t think OOP comes into it much.\n\nLiterally everything in Python is done through manipulation of objects. It's the reason Python is so useful. Are you kidding?\n\nAnytime you use a period in Python, you're reaching into an object's data structure. Requests.get() returns an object. Requests.post() accepts an object as an argument and returns an object.\n\nThe hard work has been consolidated into libraries for most standardized things, allowing people to accomplish a lot without going into the nitty gritty details. However, if you want to build bigger programs or do custom integration, learning how to create and structure your own objects is essential.\n\nYou don't need to learn an OOP language... You're already doing it. The question doesn't make any sense to begin with, as it's impossible to be competent with Python without learning a crapload about objects. It's the whole point of the language. If you want to be serious about Python, of course you want to learn about object oriented programming. It's the next thing you should dive into after working with functions (how can I structure many functions together and write something like a library I can reuse, and organize the data I need to work with).  It'd be like someone who claims to be a C programmer saying they don't know what a pointer is...", "id": "ep0yv9p", "parent": "t1_ep0r2eb", "vote": 3}, {"content": "Google wants you to know Java and Python.", "id": "ep3lrlc", "parent": "t1_ep26n81", "vote": 2}, {"content": "Well, I'm not a software engineer, but your advice here isn't terribly compelling.\n\n>OOP was invented 40 years ago to solve problems of a different era that are no longer important.  \n\nThe problems 40 years ago are fundamentally the same problems we have today - the biggest one being the ability to encapsulate various components of a system, and not requiring a programmer to understand the data structure of objects they're interacting with.  \n\n>Think configuring 10000 routers simultaneously. OOP unfortunately doesn't solve these.\n\nOOP is a way to structure your program logic - not a solution to specific problems.  And while python isn't the fastest kid on the block, it supports multiprocessing and concurrency.\n\n>For instance the coolest language right now is GoLang and by all means it's not OOP. \n\nGolang sounds great for webdev, and a lot of people say it's cool.  But Go was created by Google to solve Google scale problems, and to address their challenges in using C++.  Most people don't have Google scale problems.  A lot of people also say Rust is cool, but it's not a reason to use it.\n\n\n>Also what others mentioned that most of the system software including Python itself is written in plain C which is not-OOP.\n\nC is used for systems software because it let's you do things like manage memory directly and it doesn't have dependencies the same way higher level languages do.  It also has a a 1-1 relationship to machine code, making it ideal for an interpreter.\n\n>Also don't mistake Python for a programming language. It's a scripting language \n\nThat's just false.", "id": "ep3s9o4", "parent": "t1_ep2l6x2", "vote": 2}, {"content": "Yeah, I realized that a few minutes after posting, but decided to leave it be. Thanks for pointing that out, though.", "id": "ep2aqmx", "parent": "t1_ep2a780", "vote": 1}, {"content": "I stand corrected.  I somehow still equate Python to the days of Perl scripting back when Perl wasn\u2019t OOP.", "id": "ep1pmwx", "parent": "t1_ep1ncc3", "vote": 1}, {"content": "How does Jinja + Yaml + JSON = executable code?", "id": "ep3kr5b", "parent": "t1_ep1s3tb", "vote": 2}, {"content": "if you've called the same function twice in a script, spoiler alert, you've used OOP principles", "id": "ep2x1s7", "parent": "t1_ep2kfq6", "vote": 3}, {"content": ">Bottom line, things that actually matter in network devices are written in functional programming languages.\n\nBut C isn't a functional programming language? Functional programming are when you have no side-effects/composition of functions like Haskell/ML etc.", "id": "ep0vvwy", "parent": "t1_ep0uw51", "vote": 5}, {"content": "Well alrighty then, thanks for the info! I am not a programmer by nature, thanks for the distinction.\n\nSo basically, OOP wouldn\u2019t matter at all for a Network Engineer? Or would it matter for something like Ansible?", "id": "ep0vovd", "parent": "t1_ep0uw51", "vote": 0}, {"content": "Im talking you only need that for automation, forget about OOP.", "id": "ep4msyg", "parent": "t1_ep3kr5b", "vote": 0}, {"content": "Procedural, sorry, you know the drill \"too many people wrong on the Internet\", I'am involved in too many discussions. My bad, thanks for correcting me.", "id": "ep0xahj", "parent": "t1_ep0vvwy", "vote": 6}, {"content": "If you are / want to be a network engineer, then pick the automation toolset that's best supported by the vendor with whom you're working the most. Back in my days network devices did not have APIs, so for automation, what we did was that we used Perl to connect over Telnet to the devices, execute CLI commands and parse the command outputs.\n\nNowadays, most boxes have some sort of API, so pick a language that preferably has the libraries for the vendor APIs, if they have REST API then any language really can be used; OO languages have their benefits as well as their have their drawbacks; but with OOP you define the API as a class, then you create an object for each of the devices you need to manage and set the required properties on that object. It's easy to use, especially if the vendor provides the library for that particular language.\n\nIf you're after provisioning, using Ansible, Salt,... is definitely a good choice, infrastructure as a code is a great way to orchestrate large networks, but you need to pick the stack that your vendor supports in case you run into troubles, so you can ask the support for help.", "id": "ep0ydl1", "parent": "t1_ep0vovd", "vote": 6}, {"content": "It\u2019s cool just so everyone aware what kind of language C is!", "id": "ep163xa", "parent": "t1_ep0xahj", "vote": 2}], "link": "https://www.reddit.com/r/networking/comments/btootg/oop_for_network_engineer/", "question": {"context": "Hi,\nI\u2019m slowly starting my network automation journey with Python and was wondering how much of a benefit it is to know object oriented programming. For some reason it\u2019s way more difficult to understand than \u201cstandard\u201d functional programming. I know there\u2019s a lot of courses that focus on OOP but I feel like it would be a waste of time, at least for me. I know this could be on r/LearnPython or something similar but I wanted to know what\u2019s the relation between OOP and network engineers.\n\nThanks", "id": "btootg", "title": "OOP for Network Engineer"}, "resource": "Reddit"}, {"answers": [{"content": "Using a common type means you can instantiate any derived type with it. If you're making a game with enemy ships, but you have say 8 different types of enemy ships, which all share common functionality, you can refer to all of them with a single type, especially where the common functionality is implemented. The code that handles basic movement and collision detection, for example, can be implemented once, and all ships, regardless of type, can be handled which common code. \nI hope this helps, it's getting very late here.", "id": "js1mund", "parent": "t3_1506hfg", "vote": 32}, {"content": "> store object of derived class in base class\n\nFirst off, you cannot store an object of derived class in a base class object. Objects have a fixed type and a base class object is of base type. If you try to store an object of derived class into it, you will get *slicing*, i.e. you will only store the base class subobject.\n\nTo achieve polymorphism like this, you need to use pointers or references. A base pointer or reference can refer to derived objects.\n\n> Why can't we just continue creating objects of derived class directly and continue working with the same\n\nIf you are not actually *using* polymorphism, then there is in fact no point to this. If you only over create and store objects of a *single*, derived type, then you might as well just store it directly.\n\nPolymorphism now allows you to dynamically store and use objects of an arbitrary number of derived types through a base pointer/reference.\n\nThe point is that you can *store* objects of different derived types in the same container (albeit through pointers) and that you can have a single interface dealing in base pointers/references:\n\n    // our abstract actor interface\n    class Actor\n    {\n        virtual void fight( Actor& other ) = 0; // Every concrete actor will implement this method\n    };\n\n    class Player : public Actor //will be out player character\n    {\n        // has some other player related propertis\n        void fight( Actor& ) override; // fights by giving the player control\n    };\n\n    class Enemy : public Actor\n    { \n       //has some other enemy properties\n    };\n    class Dragon : public Enemy\n    { \n        void fight( Actor& ) override; // fights like a dragon AI\n    };\n    class Troll : public Enemy\n    { \n        void fight( Actor& ) override; // fights like a troll AI\n    }; \n\n    std::vector<std::unique_ptr<Enemy>> enemies; //vector of generic enemies\n    enemies.emplace_back( std::make_unique<Dragon>() ); // put concrete types into it\n    enemies.emplace_back( std::make_unique<Troll>() );  //even different types\n    \n    Player player;\n    player.fight( *enemies[get_random_idx] ); // we have a unified interface, so now we can write it like this.\n\nNote that this probably a terrible design that doesnt scale well at all. Polymorphism is not the answer to all problems and often can lead to more convoluted designs. But These simply inheritance examples do get the point across I feel.", "id": "js1sdc0", "parent": "t3_1506hfg", "vote": 8}, {"content": "Because you don't always know at compile-time which child class you want to use. It might depend on the user of your program, or some other developers who are using your code and defining their own derived types.", "id": "js26o11", "parent": "t3_1506hfg", "vote": 4}, {"content": "Are you asking why we need runtime polymorphism?", "id": "js1pa8v", "parent": "t3_1506hfg", "vote": 4}, {"content": "People try to put a derived class instance into a base class variable frequently because they are familiar with other languages which treat everything like a pointer/reference.  Where in C++, we have a distinction between a pointer and a value.\n\nIf your particular problem can be expressed by only dealing with instances of the derived class: DO THAT!  Run-time polymorphism solves a certain class of problems.  If you're not having that problem, don't overcomplicate things by trying to force run-time polymorphism into it.   This same thing goes for pretty much every feature of the language.  Template, exceptions, concepts", "id": "js2p0h0", "parent": "t3_1506hfg", "vote": 2}, {"content": "I think you're talking about the decorator pattern?\n\nhttps://refactoring.guru/design-patterns/decorator\n\nIn short, the decorator pattern allows you to add additional behaviour to a class _at runtime_ by \"decorating\" the object.", "id": "js1obx9", "parent": "t3_1506hfg", "vote": -2}, {"content": "Because that way you would have to recompile your code. That might not be feasible for larger codebases and for some existing client code.\nFurthermore it's needed to allow plugins because maybe you don't want to allow your clients to recompile your code to extend it.", "id": "js1msaj", "parent": "t3_1506hfg", "vote": 1}, {"content": "Since this is CPP, how does it even work? Don't you have to bypass the size issues with pointers (regardless if it is a dumb pointer, reference, or unique pointer) ?", "id": "js1nuf8", "parent": "t3_1506hfg", "vote": 1}, {"content": "It is perfectly fine to use inheritance as a way to implement a class, and then just use that type. \n\n[basic\\_iostream](https://en.cppreference.com/w/cpp/io/basic_iostream) is an example of a standard library class with four base classes. You never store that using a pointer-to-base class.\n\nSo polymorphism is just *one* reason for using inheritance, but far from the only one.", "id": "js1u9tm", "parent": "t3_1506hfg", "vote": 1}, {"content": "Polymorphism is used because of static typing. For example \u2018std:vector<base>\u2019 can store any derived class. Similarly \u2018void foo(base& ref)\u2019 can take any derived class. This is also why you use virtual functions it allows you to access things on derived from base and the function to adapt to what you need. Without polymorphism you\u2019d need an overload for every possible derived class.\n\nEdit: on mobile and can\u2019t find the mark to format for code.", "id": "js2jf7d", "parent": "t3_1506hfg", "vote": 1}, {"content": "> Can someone help me understand the reason why everything could not be continued by creating objects of derived class?\n\nYou could, for a fixed set. Suppose we had a shape library with ellipses, rectangles, and triangles. Instead of having\n\n    std::vector<std::unique_ptr<Shape>> m_shapes;\n\nand using polymorphism we could simply have\n\n    std::vector<Ellipse> m_ellipses;\n    std::vector<Rectangle> m_rectangles;\n    std::vector<Triangle> m_triangles;\n\nThat would work just fine. The only inconvenience in the implementation is everywhere you would have looped over one collection you now loop over three. \n\nAnd every time you add a new type you add a new field and update everywhere you've looped through all the shapes to also loop through your new shape.\n\nNow if you abandon virtual functions entirely with these types you can still write overloaded functions that work with any of them and do the same conceptual thing. It's just as valid to have\n\n    virtual void draw() = 0;\n\nas it is to have\n\n    void draw(Rectangle&);\n    void draw(Ellipse&);\n    void draw(Triangle&);\n\nThe real problem is that a user of this library can no longer define a new shape. They have to work with one of your approved and supported types.", "id": "js2s6y4", "parent": "t3_1506hfg", "vote": 1}, {"content": "If you want a practical example, something like QPainter is sort of a textbook one:  https://doc.qt.io/qt-6/qpainter.html#QPainter-1\n\nThe constructor takes a QPaintDevice pointer.  What's that?  Well, ultimately it doesn't matter.  It could be a Win32 window, or a MacOS window, or a page in a PDF, or an OpenGL framebuffer, or just an image buffer.  Or some other things.  Those things all have completely different APIs for drawing graphics.  But QPainter gives an abstract interface that can work with any kind of surface.  The various platform and device-specific implementations of QPaintDevice all work with the same API despite doing completely different stuff under the hood, so QPainter has no need to know exactly which specific PaintDevice it is actually painting on.", "id": "js2svbg", "parent": "t3_1506hfg", "vote": 1}, {"content": "Polymorphism let\u2019s you have a collection of things that act differently even though you call the same function on them.  This is a very useful and common pattern.", "id": "js3c2ed", "parent": "t3_1506hfg", "vote": 1}, {"content": "Because using the base type allows code designed to work with it to handle any derived type, even types that didn't exist when the code for the base type was originally written.\n\nSay for instance that I write a library, with a base class `Ship` which represents any water craft, and a class `Port` which has a `refuel` method for refuelling ships:\n\n```\nclass Ship { /* unspecified */ };\nclass Port {\n    void refuel(Ship& ship);\n};\n```\n\nMaybe my library contains some common derived classes of `Ship`, such as `Destroyer`, `Submarine` and `Schooner`. But users of my library can also define their own subclasses of `Ship` or its children, and these will be able to be refuelled by `Port.refuel()`, even though these classes didn't even exist at the time that the code for `Port` was compiled.\n\nThat's one of the many beauties of polymorphism in action!\n\n> Btw, remember that in C++ (unlike in Java), you _must_ use a type with reference semantics when accessing a derived object through a variable of base's type: Either `Base*` or `Base&` \u2014otherwise, object slicing will turn your `Derived` into an object of `Base`, and the polymorphism doesn't work.", "id": "js3em0c", "parent": "t3_1506hfg", "vote": 1}, {"content": "One reason which I can't see listed in the other comments is common storage. Let's say for example you have a Shape base class, and then Rectangle / Circle derived classes. You may want to just have one vector<Shape*> to store all your shapes instead of one for each derived type. Then you can iterate over each shape and call their draw() method, etc", "id": "js3fdmj", "parent": "t3_1506hfg", "vote": 1}, {"content": "> Why can't we just continue creating objects of derived class directly\n\nYou can.\n\nHere's what you *cannot* do:\n\nCall a member function by name without knowing which class type you should be calling it on.\n\nStore an object of class X without having enough storage set aside for an object with the size of X\n\nLet me give you an example of what can go wrong (which is why your compiler won't let you do it)\n\n    01   class Wizard {\n    02       void attack();\n    03       std::vector<Spell> spellbook;\n    04   }; // Total size: sizeof(vector<Spell>) + padding\n    05   \n    06   class Fighter {\n    07       void attack()\n    08       Weapon weapon;\n    09       std::optional<Armor> armor;\n    10   }; // Total size: sizeof(weapon) + sizeof(std::optional<armor>) + padding\n    11   \n    12   auto select_unit(char type)\n    13   {\n    14       if (type == 'W')\n    15           return Wizard{};\n    16       else\n    17           return Fighter{};\n    18   }\n    19   \n    20   int main()\n    21   {\n    22       char unit_type;\n    23       \n    24       std::cin >> unit_type;\n    25       \n    26       auto unit = select_unit(unit_type);\n    27       \n    28       unit.attack();\n    29   }\n\nThere are two problems witn `main` here, on line 26 and 28.\n\nLet's look at line 28 first.\n\nWhat does \"`unit.attack()`\" *actually mean*?\n\nIt means\n\n> copy the address of \"`unit`\" into the CPU register used for the \"`this`\" pointer, then set the instruction pointer to the address at the beginning of the \"`attack`\" method.\n\nProblem: That's ambiguous. There's two \"`attack`\" methods, and the way the compiler picks between them is to look at the type we're calling the method on - which the compiler cannot know here, because we don't pick a unit type until the program is running, long after we're done compiling.\n\nThis is what `virtual` functions are for - they change the meaning of calling a method on an object.\n\nIf you use `virtual`, *now* the method call means\n\n> 1: follow the embedded virtual table to find the type of the unit, then use that type to pick the correct `attack` method, then\n> \n> 2: As before, copy the address of \"`unit`\" into the CPU register used for the \"`this`\" pointer, then set the instruction pointer to the address at the beginning of the \"`attack`\" method.\n\nYou may ask: \"Why do I have to use the `virtual` keyword for that? Why doesn't that just always happen automatically? It always happens in C#, it always happens in Python, it always happens in Javascript, why is C++ different?\"\n\nAnd the answer is \"Notice that the function call is now a 2-step process - everything we did *without* `virtual`, and then some extra stuff we do to handle the `virtual` bits. That is, it is *slower*. So C++ doesn't do this by default.\"\n\n---\n\nSo that's the problem with line 28. There is also a problem on line 26.\n\n---\n\nOn line 26, stack space is reserved for the return value of `select_unit`. This is done *at compile time* - it is part of your finished program that your functions know how much stack space they take up.\n\nSo when the compiler tries to reserve space for the `main` function - how much should it reserve? 1 byte for the `unit_type` char, and then... how much for the unit itself? That depends on what the size of `select_unit`'s return value, which depends whether we're selecting a `Fighter` or a `Wizard`. Which we don't know at compile time.\n\nAgain - \"Why? Python and C# and Javascript all don't have this problem\" - yes and those languages all solve this by being slower. And like the function problem on line 28, you can solve this by doing the same thing C# does to solve it - instead of having a unit of unknown size, have a pointer. Pointers are always the same size no matter what they point to.\n\nAnd again, this is slower, so it doesn't happen by default.", "id": "js6chy4", "parent": "t3_1506hfg", "vote": 1}, {"content": "Can you provide an example how would the code be recompiled and what would be needed for recompilation", "id": "js1mvwh", "parent": "t1_js1msaj", "vote": 1}, {"content": "If I understand what you\u2019re asking, there are dynamic_cast. Also pointer are just a value.", "id": "js28gt0", "parent": "t1_js1nuf8", "vote": 1}, {"content": "Suppose you have a game and you have to populate the game world. The game is real-time, so on each tick of the world the objects populating it have to perform a step of what they are supposed to do, so every kind of object has its `step()` function. If this is not a virtual function then you have to hardcode the call for every type there is in your code. But you can probably automate this with some clever templating.\n\nHowever, when you introduce a new type of game object, you not only have to compile the new object, you have to recompile every piece of code that needs to step the new type of object, essentially the core of the game. And this is only the stepping of the game world, this will become more problematic when different types of objects have to interact. Essentially you will have to recompile the entire game. This might not be a problem if the code is small, but when one entire  compilation takes tens of minutes or hours, you might want to avoid that because it slows down development.\n\nIt could also cause code bloat because instead of one virtual call being compiled you have binary code to call the function for every different type.\n\nPlugins can also be demonstrated with this example. If you want your game to be moddable by introducing new types of game objects, you won't be able to do it when the game core (and possibly the game objects) have to know of every other type of possible game object. Introducing a virtual base/interface and allowing the user to load a dynamically linked library (dll)/shared object(so) will make modding/plugins possible like this. (Security risks with this approach are another topic...)", "id": "js1s4ja", "parent": "t1_js1mvwh", "vote": 2}], "link": "https://www.reddit.com/r/cpp_questions/comments/1506hfg/in_c_why_do_want_to_store_object_of_derived_class/", "question": {"context": "Sorry if this question is too trivial or common. But no where I can find satisfactory answers to it.\n\nI understood that it helps us achieve run time polymorphism. But why do we even want that? Why can't we just continue creating objects of derived class directly and continue working with the same, as that would help me in accessing Derived class methods without even the need of virtual functions. Can someone help me understand the reason why everything could not be continued by creating objects of derived class?", "id": "1506hfg", "title": "In c++ why do want to store object of derived class in base class?"}, "resource": "Reddit"}, {"answers": [{"content": "I have an opposite (serious) question: how to get OOP out of my head? I feel like sometimes there are better ways to express what I want to code, but I usually end up with objects, methods, inheritance, etc., while they are clearly not what I needed. Any suggestions?", "id": "c0kso4p", "parent": "t3_b3ocn", "vote": 11}, {"content": "Remember OOP is full of oops", "id": "c0ksr1k", "parent": "t3_b3ocn", "vote": 8}, {"content": "When researching something, go to the source. In this case, Alan Kay.\n\n* I can't find a better source, but ... [OOP should have been called \"message-oriented\" programming](http://www.reddit.com/r/programming/comments/9tb2v/how_bad_is_the_instanceof_operator_if_i_find/c0ehrjj). Here's Wikipedia on [Message Passing](http://en.wikipedia.org/wiki/Message_passing).\n* [Alan Kay on the meaning of OOP](http://userpage.fu-berlin.de/~ram/pub/pub_jf47ht81Ht/doc_kay_oop_en)\n* [Alan Kay on messaging](http://c2.com/cgi/wiki?AlanKayOnMessaging)", "id": "c0ksr6b", "parent": "t3_b3ocn", "vote": 8}, {"content": "http://apocalisp.wordpress.com/2008/12/04/no-such-thing/", "id": "c0ktila", "parent": "t3_b3ocn", "vote": 7}, {"content": "smalltalk books. enjoy", "id": "c0ksmaq", "parent": "t3_b3ocn", "vote": 5}, {"content": "You won't understand OO while working with C++. There's just too much other stuff obscuring your view. Learn OO separate from C++, then come back and it will make much more sense.\n\nMaybe try Perl + Moose, Perl 6, Ruby, or Python. However, Smalltalk is supposed to be *the* premier OO language, so you might consider that a first choice if you want the best possible OO experience.\n", "id": "c0kscje", "parent": "t3_b3ocn", "vote": 20}, {"content": "> I come from Visual Basic 6 which had little-to-no OOP, and what it did wasn't really true OOP (no inheritence/polymorphism, only implements).\n\nInheritance is usually the wrong thing in any case. Forget the is-a/has-a bullshit. The analogy breaks down very easily. It is far more often we create a type B which is a constrained version of A than a type C which is an A with more functionality. If your subtype is more restricted than the perspective superclass then even though B is-a A inheritance is the wrong thing.\n\n99% of the time this seems to be the case. Ironically even the examples they use to explain inheritance fall foul of this. Take the example of 'Square is-a Rectangle'. It is undoubtedly true that a square is a rectangle. However there is no sensible implementation of 'setDimensions(width, height)' for a square. Thus a square should not inherit from a rectangle. Even though a square is a rectangle.\n\nWhat a lot of people struggle with when learning OOP is the classical approach is obviously wrong. Even a naive study can throw up so many cases where it fails that it is amazing that universities still teach it.\n\nRegardless think very carefully when dealing with inheritance. A claim that A is B is always an interesting claim. A Ferrari may be a car but it doesn't go over speed bumps very well. A hummer may be a vehicle but it won't go down narrow lanes like most other vehicles will.", "id": "c0ku0iw", "parent": "t3_b3ocn", "vote": 4}, {"content": "Chortle if you must, but the thing that really made OOP gell in my mind was IntelliSense/code-completion and error-checking in IDEs. I realized that just reading about OO concepts in a book was causing me to make it more complex than it really is. \n\nWith an IDE like Eclipse/Netbeans/IntelliJ and a strongly typed language like Java, you can easily see what's going on in terms of, for example \"oh, okay, so if this class implements that interface, the compiler will let me use it as an argument to this method\" or \"I made a particular method in another class private, so it makes sense that it wouldn't be available in the code-completion drop-down.\"\n\nOf course, there's much more to OOP than what IDEs can tell you, but that's what put me over the hump as far as grasping the general idea.\n\nAlso, definitely avoid clogging up your mind with design patterns at this point. ", "id": "c0ksjt2", "parent": "t3_b3ocn", "vote": 12}, {"content": "The vast majority of OOP is incoherent gibberish, which is exemplified by OOP programmers' general inability to express it meaningfully. (In contrast to functional programming, or procedural programming, or logic programming or modular programming, or ...)\n\nThe best definition of OOP that I've read is from Alan Kay, who boils it down to \"decomposing programs into computers.\"\n\nEveryone else seems to big a grab bag of essentially random features that tend to include procedural abstraction and not much else consistently -- e.g., classes, encapsulation, inheritance, interfaces, and so on are all missing from various OOP systems.\n\nI suspect that most of what you're asking about as nothing really to do with OOP. So, why not deal with them individually?", "id": "c0ktg4t", "parent": "t3_b3ocn", "vote": 3}, {"content": "For me, the hard part was undoing the damage I did to myself by learning OOP in the first place.", "id": "c0kteso", "parent": "t3_b3ocn", "vote": 6}, {"content": "Inheritance is not part of the core of OOP.  Implementing interfaces is, and is all that is needed for this type of polymorphism.", "id": "c0ksikb", "parent": "t3_b3ocn", "vote": 4}, {"content": "I had a hard time until I read the short books by Shlaer and Mellor (in the bibliography here: http://en.wikipedia.org/wiki/Shlaer-Mellor). They are not intuitively useful for this, but the approach is so basic and simple that it is hard not to do OOP well if you follow their model for modeling the world through data and objects.", "id": "c0ksa7j", "parent": "t3_b3ocn", "vote": 2}, {"content": "I'm wondering if you actually struggling with the ideas behind OOP, or the language you are using. You might be struggling with getting your head around the concepts because of all the syntactic overhead of C++.\n\nI learned OOP by writing a program, then my brother gave feedback on how it could be better designed. I learned more advanced/different concepts by following the development of the D programming language.", "id": "c0ksktw", "parent": "t3_b3ocn", "vote": 2}, {"content": "One of the big problems is there's no such thing as OOP. For any property of an OO system you can declare as necessary there exists some OO system that does not have this property, except for the trivial property of being named an OO system. ", "id": "c0kt8i2", "parent": "t3_b3ocn", "vote": 2}, {"content": "Use Smalltalk or Ruby and it'll come to you naturally in the sense that it's basically impossible for you to get going beyond \"hello world\" without some sense of OOP.\n\n(GNU smalltalk is probably the easiest smalltalk to get started with.)\n\nSingletons and Delegates are well beyond the \"normal\" OOP design. Singletons in particular are somewhat of a rule-breaker. Master the basics first, then move on to the exceptions and the combinations.", "id": "c0ktcwo", "parent": "t3_b3ocn", "vote": 2}, {"content": "First, shame on most of the posters for turning this into a language discussion. This is about OO philosophy and uses, not evangelism.\n\n> I decided to try and start using Ogre and C++ for a small game, and looking through the sample code, it's a little mind-boggling.\n\nCan you be more specific? OOP is about creating small, self-contained bundles of data and code, called classes, that have a meaningful relationship. Classes try to abstract away the nitty-gritty, and often ugly implementation details that increase complexity. Take the std::vector class, for instance. You can push_back() elements as much as you want, and you never have to handle memory allocation. Behind the scenes, the vector class is the one sweating out the memory allocation. Eventually, the block of memory it reserved won't have room for anymore elements, and it will have to request a new one, then copy the objects over. But you, as a user, don't need to know about this. All you see is that the vector seems to grow without bound. \n\nObligatory car analogy: think about a car engine. (I hope you've opened a car's hood or this won't make as much sense.) Pretty complicated in there? Proper OOP design says that to make something that complicated, you should assemble it out of smaller classes, which themselves may have smaller classes, and so on. Each step of the way in this fractal-esque perspective, classes should only be worrying about the bare minimum of details necessary to do their job. Ideally, each class should have a sole purpose in life. This makes it easier to reason about the correctness of a system, and to test. (And I should mention that this layered approach to engineering is not exclusive to OOP, but proponents of OOP believe it to be a better means to achieve this goal.)\n\nIn practice, this can be very difficult to do. OOP requires you to spend a decent amount of time thinking about how you will represent the various concepts within your application. If your requirements change, then some of those concepts may just die, and require pieces of their functionality to be absorbed into other objects. This can be frustrating and time consuming. OOP requires you to think about the problem at a much higher level than function calls. This takes some getting used to. It is extremely easy to become paralyzed by the wealth of options available for creating an OOP design.\n\nAs for your mention of delegates: they are typically used like callbacks. You see them used in more modern OO codebases a way for an object to notify another object that something interesting has happened. It is intentionally abstract so as to decrease the coupling between classes. Coupling is a measure of how much each class knows about other classes. The lower the coupling, the easier it is to reuse the class elsewhere.\n\nAs for singletons, just don't. It is a bad habit to get into, and there is a specific time to use them. But you probably won't hit it yet.\n\nLastly, OOP isn't useful for everything. It is most useful when designing system architecture, as it can describe behavior in very general terms.", "id": "c0kt0tz", "parent": "t3_b3ocn", "vote": 4}, {"content": "I could never/still don't get OOP.  The whole paradigm doesn't make much sense to me and I often find myself battling Python's OOP to get what I want.  That being said, have you tried to learn Smalltalk?  I feel like that could be your best bet.  One can't really write 'purely' OOP in C++ IMO, you end up writing sort of a mish-mash of paradigms if you want a sane project.  Java is just a bad language all around.  I don't know about Ruby but Python kind of walks the line being very OOP but ends up just being weird.  My 2 dads.", "id": "c0ksbge", "parent": "t3_b3ocn", "vote": 4}, {"content": "[Refactoring: Improving the Design of Existing Code[Amazon]](http://www.amazon.co.uk/Refactoring-Improving-Design-Existing-Technology/dp/0201485672/ref=sr_1_1?ie=UTF8&s=books&qid=1266525510&sr=8-1) and [Mock Roles Not Objects[PDF]](http://www.jmock.org/oopsla2004.pdf)\n\nSingletons are almost certainly a bad solution but it may take many years for you to realise it. [Just Create One](http://butunclebob.com/ArticleS.UncleBob.SingletonVsJustCreateOne).", "id": "c0ksqcz", "parent": "t3_b3ocn", "vote": 2}, {"content": "Yes, it takes a while until you get it. And then some more time to be able to use it.\n\nWhat made it clear to me was book \"OOP with ActionScript 2.0\" or something like that. The example of Events and Listeners. That was the first time I understood an example where it was useful.\n\nAlso take a look at [gameprogrammingpatterns](http://gameprogrammingpatterns.com/) - great examples.", "id": "c0ksx71", "parent": "t3_b3ocn", "vote": 3}, {"content": "I'm surprised no one has yet mentioned Bertrand Meyer's book, _Object Oriented Software Construction_.  Meyer has some opinions about the field that are, um, controversial (mainly, the blanket dismissal of all dynamic OO languages), but his writing is crystal clear, and the book is brilliantly organized (both editions).  You can find the 1st edition for pennies on the Amazon used market.  The second edition is a pretty thorough restructuring and expansion, and is actually worth the cash you'll have to plunk down for it.", "id": "c0ksqql", "parent": "t3_b3ocn", "vote": 3}, {"content": "I didn't understand OOP until I studied design patterns.", "id": "c0kt080", "parent": "t3_b3ocn", "vote": 3}, {"content": "Practice, practice, practice.. and just when you think you've learned something, practice some more.\n\nThere's never enough practice.", "id": "c0kseb2", "parent": "t3_b3ocn", "vote": 2}, {"content": "one deeply underappreciated part of OOP that i've only recently come to understand is that each object provides a context of protected functions which form an implementation dsl for the object itself.\n\nthis can also be true for modules or any other 'encapsulated' part of code in other languages. OOP is traditionally thought of mostly in terms of interfaces and messages between objects. it allows for evolving code bases via hierarchies. and different types of function-call 'binding' -- i.e., runtime polymorphism.\n\nbut people rarely realize that each object is itself a context for solving a very specific set of problems related to the implementation of the object's interfaces. in that sense it is highly modular and somewhat elegant. you can do this in other languages -- but if there's no direct OO support, you have to do it somewhat verbosely and explicitly.", "id": "c0kt12i", "parent": "t3_b3ocn", "vote": 2}, {"content": "Here is the quickest way to really grok OOP (encapsulation, polymorphism, but no message passing (which some would argue is true OO)). Write a decent size program in C# or Java without using the following keywords:\r\n\r\n* if\r\n* while\r\n* for\r\n* foreach (well, this is ok in C# at least since it\u2019s still * fundamentally *OO under the hood)\r\n* void\r\n* switch\r\n* out (C#)\r\n\r\nPeople will tell you to try to only inherit from abstract classes and interfaces. They are right. If you avoid the aforementioned keywords you\u2019ll be led naturally to such a style. Once you have the \u201cAha!\u201d moment then use whatever features the language has to offer.\r\n", "id": "c0ktxd3", "parent": "t3_b3ocn", "vote": 2}, {"content": "I did C++ for a while but never really got OOP until I used Python. There are too many abstract concepts (like a class, which doesn't really exist anywhere) and unnecessary ideas in C++. In Python everything is concrete, a class exists during runtime alongside instances of the class. You can play around with the different types of objects and see how some OO ideas can give you better code reuse.", "id": "c0ksot8", "parent": "t3_b3ocn", "vote": 1}, {"content": "This one sentence improved my understanding and approach to OOP more than anything else:\n\n\"Model the solution, not the problem.\"", "id": "c0ksren", "parent": "t3_b3ocn", "vote": 1}, {"content": "I may be weird (well, actually that's a given) but I made my breakthrough writing OO in C. I know C doesn't have any OO features, but you can fake it with some discipline and a measure of insanity. Your object is a struct in a malloc'd chunk of memory. All access to that structure is through an API for that structure. Attributes and methods are all functions in that API.\n\nI actually had to write a cross platform comms API, and on the PC platform it had to be available as a DLL written in Visual C++. One of the other platforms only had C, so I wrote the C as above, then on the PC I put a thin wrapper around it in Visual C++.  If I got the OO model wrong in C, the C++ punished me for it. That was my eureka moment. I had to get under the hood and see how to do it from the inside.", "id": "c0kt2si", "parent": "t3_b3ocn", "vote": 1}, {"content": "> I find myself having a hard time fully understanding semi-large/medium-sized OOP projects (C++).\n\nI think that's true for almost everyone. Learning your way around a codebase takes time. If it's really well-designed (and OOP can help a lot here) it will take much less time, but very well-designed codebases are hard to find.\n\nThe biggest thing that helps is practice, and especially familiarity with common design patterns (both the ones in the book, and the ever-expanding set of all idioms frequently used in code). Over time, you'll be able to glance at a header and go, \"Oh, that's a little messaging system.\" and not have to scrutinize every method to see what they do.\n\nThere's no easy way out for this skill. Just keep coding, writing *and* reading, and you'll get better over time.\n\n> I decided to try and start using Ogre and C++\n\nOgre isn't bad, but that's diving into the deep end. Game engines are pretty complex and C++ is a big language. That doesn't mean you picked a bad place to start, just that you'll need to be patient.\n\nLook on the bright side, though, Ogre is pretty close to what you'd see in a full-on commercial game engine (as far as I know). If you reach a point where you can confidently get around in it, you'll be up there with pro game developers.", "id": "c0kt864", "parent": "t3_b3ocn", "vote": 1}, {"content": "Here's what you need to do (or what worked for me at least). Write a small to medium size project. Try and make the code flexible so you can easily modify it later. You will fail. Read a book on Design Patterns. This will show you why you failed. I recommend \"Design Patterns in Ruby\". I'd also recommend learning these concepts in a higher level language such as Ruby. You'll be less confused by language details (and C++ is confusing) and most of what you learn will transfer to other languages.", "id": "c0ktb4b", "parent": "t3_b3ocn", "vote": 1}, {"content": "Working with somebody that was really good at it and seeing how they did things, design by contract, interfaces forost stuff and writing big javadoc comments explaining what a method would do before writing said method.", "id": "c0ktgdr", "parent": "t3_b3ocn", "vote": 1}, {"content": "> Things like delegates, singletons, etc. I can't seem to wrap my head around.\n\n> Once I get a good, solid handle on OOP and some practice, I plan on reading and practicing design patterns. But I don't think I'm ready to start that yet.\n\nWell those 'delegates' and 'singletons' are the 'design patterns'.  So since you say you already have the basics down, you are ready to tackle design patterns.  Read the GoF.", "id": "c0kusmq", "parent": "t3_b3ocn", "vote": 1}, {"content": "This might get a lot of hate but, mneh: it's how I learnt. \n\nI learnt very basic OOP with PHP4. There's no member visibility, no interfaces, no abstract classes and only very basic inheritance. I consider it a great way to get the basic concepts into your head - interfaces and private methods etc are all very useful, but they won't seem it until you've got the basics under your belt. \n\nThen I moved onto PHP5. PHP5 introduces all sorts of new OOP stuff that you won't really appreciate until you've been forced to write code without them for a while. ", "id": "c0kvzhh", "parent": "t3_b3ocn", "vote": 1}, {"content": "Think of your program as objects and messages. \n\nLearn some transformations: A procedural program is essentially one object - one instance of one class, with one public entry point (main). \n\nFind ways to break this into several communicating objects, passing messages and receiving answers.\nBreak into several similar objects (same class, or classes related by inheritance) or non-similar objects.\n\nLearn patterns like Double Dispatch and Method Object.\n\nLook into Smalltalk (as others have said)\nIt is more object oriented than Java - but Scala is a better language than Java, on the JVM.", "id": "c0kvzsc", "parent": "t3_b3ocn", "vote": 1}, {"content": "OOP, like functional programming is an example of one of those wonderfully simple concepts whose explanations can each fit on a T-Shirt. Elsewhere in the thread I posted a comment about some keywords to avoid. You see, Java, C#, and C++ are not *pure* OO languages since they allow a lot of procedural code (which is good... even with goto!). By avoiding those procedural keywords you are forced to take OO *seriously* and you will very quickly have the \"AHA!\" moment I mentioned and realize how very, very simple the concept is.\r\n\r\nEinstein discovered relativity (and a bunch of other stuff) by taking a bunch of previous ideas more seriously than the people who originally thought of them. Now, I'm certainly not saying that OO is nearly as difficult as relativity, but this method of taking things super seriously really does lead to understanding quickly. Similarly, if I were to just say OOP is about encapsulation and polymorphism it wouldn't be any more illuminating than saying E=MC^2 if you haven't struggled with physics and differential geometry (by taking it seriously as an explanation for observable phenomena).\r\n\r\nBy the way, as someone may or may not have mentioned in this thread, VB6 does have polymorphism and is thus a true OO language. Implementation inheritance is really orthogonal to OOP, it's just one of those obvious conveniences that the compiler should have. You will almost always avoid it once you get OOP (sealed, final, MustInherit, et. al are your friends).\r\n\r\nIn Summary: Struggle with OOP by using it as a straitjacket and you'll get it.\r\n\r\n", "id": "c0kxxcg", "parent": "t3_b3ocn", "vote": 1}, {"content": "Oddly enough, what taught me most about OOP was implementing a system for it in Scheme.", "id": "c0l8qc6", "parent": "t3_b3ocn", "vote": 1}, {"content": "> Once I get a good, solid handle on OOP and some practice, I plan on reading and practicing design patterns. But I don't think I'm ready to start that yet.\n\nStart doing this. At the very least it'll give you a few practical examples of what all these abstract concepts can be used for. I assume you've got the ['gang of four'](http://en.wikipedia.org/wiki/Design_Patterns_(book\\)) book ?\n\nAlso, if you want personal help, what are the things you're having difficulty with ? If you explain your current understanding of those things I might be able to tell you where you're taking a 'wrong turn'. \n\nOh, and start with something like Java, it's not as distracting with 'low level' details as C++ and the like.", "id": "c0ksv9z", "parent": "t3_b3ocn", "vote": 1}, {"content": "[OO Programming Tutorial](http://www.atomicobject.com/pages/OO+Programming)", "id": "c0ksw0f", "parent": "t3_b3ocn", "vote": 1}, {"content": "The three pillars of OOP are \n\n* Poloymorphism\n* Inheritance\n* Encapsulation\n\nInheritance can be by implementation or by interface. VB6 did have interface inheritance.\n\nMaybe you need to look into design patterns. These are generic solutions to common problems that can be tricked up for your specific problem. The book of the same name is one of the most famous in CS/SD.", "id": "c0kthwh", "parent": "t3_b3ocn", "vote": 1}, {"content": "There are many styles of OO. The best, in my opinion, is described in *Domain Driven Design* by Eric Evans, which is also one of the best-written software design books ever.", "id": "c0ktmab", "parent": "t3_b3ocn", "vote": 1}, {"content": "Try writing a card game.  I remember that a definite shift in my thinking after I was introduced to OOP occurred while I was writing one.  Start with a card and then work your way up to more complex objects composed of cards (deck, hand, etc).  I got a feel for encapsulation, and other things followed quickly.", "id": "c0ktme9", "parent": "t3_b3ocn", "vote": 1}, {"content": "never really had a problem with it but from people that did, I hear that Bruce Eckel's Thinking in Java is very good to help understand OO, (regardless of whether you actually want to learn Java).", "id": "c0ktmum", "parent": "t3_b3ocn", "vote": 1}, {"content": "Invest in\n\n* *Accelerated C++* by Andrew Koenig and Barbara E. Moo\n* *Head First Design Patterns* by Eric T Freeman, Elisabeth Robson, Bert Bates, Kathy Sierra\n", "id": "c0ktpoj", "parent": "t3_b3ocn", "vote": 1}, {"content": "Nope, OOP was pretty easy from the get-go. Monads on the other hand still baffle me. I have yet to find a coherent introduction to category theory.", "id": "c0kttcq", "parent": "t3_b3ocn", "vote": 1}, {"content": "yes, **practice** makes things clearer over time.", "id": "c0ksj32", "parent": "t3_b3ocn", "vote": 0}, {"content": "This book: old, but very clear; gets you thinking in the object paradigm.\n\nhttp://www.amazon.com/Object-Oriented-Programming-Peter-Coad/dp/013032616X\n\nFor God's sake, don't pay $70 for it... find a used copy on abebooks.com.", "id": "c0ksltq", "parent": "t3_b3ocn", "vote": 0}, {"content": "I was in exactly your position until I literally had an \"a-ha\" moment one day.  Forgive me while I cast my own experiences all over you.\n\nMy suspicion:\n\nYou are overlooking something fundamental.\n\nMy advice:\n\n1. Read these PDFs on the SOLID principles [here](http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod).  There's one PDF for each principle.  Leave the ones on packaging/modules til later.\n\n2. Force yourself to write unit tests for everything.  If you find a class/method hard to test then chances are you need to rework the design keeping the SOLID principles in mind.\n\n3. The potential for information overload is enormous.  I'd shun everything except 1 & 2 for a week until you have a flow going.\n\nSome tips:\n\n* codesearch.google.com and open source are good when you're stuck.\n* Don't be afraid to break down long classes/methods.\n* Favor composition over inheritance.\n* [Tell, don't ask](http://www.pragprog.com/articles/tell-dont-ask).\n* You're wise to ignore patterns for now but they can be interesting reading later.  You will actually likely arrive at very similar patterns yourself anyway, if you're writing SOLID+testable code.  Remember many of them only suit certain languages.\n* DRY, YAGNI, be explicit and readable.\n\n**Edit:**\n\nIn case it's helpful, and because examples are always good: I think one of my problems was I used to create classes for logical entities and stop there.  So for example, if my app dealt with movies that were subject to some kind of validation, I would have written:\n\n    Movie movie = new Movie();\n    if (movie->isValid()) { ... }\n\nWhen in reality I probably wanted something more like this:\n\n    Movie movie = new Movie();\n    MovieValidator validator = new MovieValidator(movie);\n    if (validator->isValid()) { ... }\n\nThe difference being, the latter has two objects each with a single responsibility (the S in SOLID) rather than one object with two responsibilities.\n\nThis doesn't just satisfy the SRP rule, but it also allows us to add new types of validation down the track without modifying the Movie class.  For example:\n\n    Movie movie = new Movie();\n    DefaultMovieValidator defaultValidator = new DefaultMovieValidator(movie);\n    if (defaultValidator->isValid()) { ... }\n    SpecialMovieValidator specialValidator = new SpecialMovieValidator(movie);\n    if (specialValidator->isValid()) { ... }\n\nAnyway you're much better off reading UncleBob's PDFs on SOLID than my crap examples but hopefully this is of some help.  I think for a long time I only considered domain entities as candidates for classes/objects, and saw everything else as being a method.\n", "id": "c0ktd3d", "parent": "t3_b3ocn", "vote": 0}, {"content": "a singleton is basically a static class/function. there is never more than one instance. an interface is like an abstract class without a constructor. I just thought I'd share a couple of hints", "id": "c0ktlel", "parent": "t3_b3ocn", "vote": 0}, {"content": "The worst explanation of OO I have come across is the mechanical analogy. Depending on the source, it's usually either a bicycle or a car. Properties are usually velocity, gas (for the car), colour and so on. Methods are usually accelerate, brake, etc. This may help explaining what these things are, but not what they mean. I think the analogy also fails on several other levels (bikes and cars are composed of several parts that interact, dumping the whole thing in a single class doesn't really approximate that).\n\nI think the most basic understanding of OO can be gained by understanding encapsulation.\n\nInheritance comes naturally once you understand the analogy (\"Animal\" is an abstraction of \"Horse\", so \"Horse\" would probably be a subclass of \"Animal\", more specifically a subclass of \"Mammal\" which would be a subclass of \"Animal\", etc -- a bit like the difference between an object and a class except that objects are generally more concrete: \"bob\" might be an instance of \"Person\") and become used to dealing with objects.\n\nEncapsulation is really the crux of it. If you catch yourself using something like \"instanceof\" a lot, you're probably doing something wrong. e.g. instead of checking what subclass a \"Shape\" object is an instance of in order to draw it, you should probably put the specific drawing logic in the subclass. That's why it encapsulation can go hand-in-hand with polymorphism (in Python this aspect is taken to the extreme: you are supposed to rely on an object's capability alone without regard to the object's heritage; likewise Java takes the encapsulation aspect to an extreme because functions and variables can only exist within a class, even the main() function has to be in a class definition).\n\nStart with data structures first. They're easy to recognise and grasp. Create classes to encapsulate sets of related variables and create instances of these classes in the way you would previously have created the variables. Then try and find out what you're actually doing with those variables and try to refactor your linear code into smaller functions. If you find that a function only accesses the structure's variable's put it in the class and name it by what it does from that class's perspective.\n\nOften the problem isn't that you can't wrap your head around OOP, it's that you are too accustomed to linear programming. Look into refactoring and ignore the OOP for a bit. Just learn how you can group code into functions based on what variables it accesses. Then group the variables with the functions that use them and wrap them in a namespace (e.g. in Java: classes with only static members). Eventually you'll notice that these namespaces are really not enough if you want, e.g., to use the same code in a loop without having to reset every variable, or if you have namespaces that are practically identical. If you haven't yet, turn the namespace into a class and make the functions and variable instance members and instantiate the class where you previously simply accessed the namespace.\n\nGood OOP relies heavily on refactoring. Refactoring also allows you to \"OOPify\" your existing code step-by-step. That's probably an easier way to understand the paradigm than starting from scratch. You already know what the code does and how it does it. You just change the way it is defined. This practice will also help you be a better programmer once you have become accustomed to OOP. Many programmers who think they \"get\" OOP still have functions that show a lot of repetition and sloppily mix levels of abstraction. That's because their code simply evolved -- they never paused to think whether their intents could be described in a clearer way.\n\nJust because your code works doesn't mean your job's done. Take pride in refactoring your \"finished\" code to a clearer structure. Separate levels of abstraction and put code in functions if you can. Describe what you are trying to do in pseudo-code and see how your implementation differs. If your pseudo-code has an if-condition that looks like a single variable and your real code has several variables and method calls in it, put them in a function and name the function after what you are trying to check for.\n\nUltimately you will see that your code reads more like pseudo-code and comments become mostly redundant. If your code doesn't read like an explanation of what you _want_ to do, your level of abstraction is probably still too low (i.e. refactor, put the details in functions). Think of functions as definitions: the name should explain what it does, the body should explain how it does that. If you can't refactor any more code without creating functions that would have names that read like the actual code they wrap, you've reached perfection (you'll probably want to stop before reaching this stage, though).\n\nThe good thing is that refactoring isn't OOP-specific. You can restructure now without using OOP and gradually adopt OO patterns as you go along. Even if you find the OO paradigm impractical or unfulfilling, you will still have become a better programmer.\n\ntl;dr: l2refactor, plz", "id": "c0kucm7", "parent": "t3_b3ocn", "vote": 0}, {"content": "live a real life. oop is mapping of real life.", "id": "c0ksk0d", "parent": "t3_b3ocn", "vote": -5}, {"content": "Check out the (Game Programming Patterns)[http://gameprogrammingpatterns.com/] website. It has a lot of good stuff on design patterns that apply to video games. I don't think it will help with OOP though.", "id": "c0kstxm", "parent": "t3_b3ocn", "vote": -2}, {"content": "Use inheritance less. Use mutation less. Use interfaces more. Use closure under composition more. Use the Law of Demeter more. Contrary to many high-karma reddit comments, OO is not the opposite of FP.", "id": "c0ktczt", "parent": "t1_c0kso4p", "vote": 10}, {"content": "Haskell comes to mind...", "id": "c0ktaa8", "parent": "t1_c0kso4p", "vote": 3}, {"content": "[deleted]", "id": "c0kthi9", "parent": "t1_c0kso4p", "vote": 3}, {"content": "[deleted]", "id": "c0ktxws", "parent": "t1_c0kso4p", "vote": 2}, {"content": "Learn Haskell or Agda. You'll look back with a giggle, which is always refreshing. More succintly, you can formalise some of your stated notions and once you do, you realise that you can dismiss a lot of the other vague stuff aka \"OOP\".", "id": "c0kv3bw", "parent": "t1_c0kso4p", "vote": 2}, {"content": "I would spend a couple days building a small lisp project. ", "id": "c0ktf4y", "parent": "t1_c0kso4p", "vote": 1}, {"content": "These are good links, but I'm not sure if I would recommend Smalltalk OO for someone interested in C++.\n\n\n> Actually I made up the term \"object-oriented\", and I can tell you I did not have C++ in mind.\n\n-Alan Kay", "id": "c0ksrya", "parent": "t1_c0ksr6b", "vote": 4}, {"content": "\u201cNot to have one meaning is to have no meaning, and if words have no meaning, our reasoning with one another, and indeed with ourselves, has been annihilated.\u201d\n\nGreat quote", "id": "c0ktmlb", "parent": "t1_c0ktila", "vote": 2}, {"content": "Re: \"C++ ... too much other stuff obscuring your view ... try Perl\"\n\nFor this purpose, is Perl really any better than C++?  Why not C#/Java?", "id": "c0ksv4h", "parent": "t1_c0kscje", "vote": 13}, {"content": "Why not Java? After all, making something useful in Java will essentially require you to learn OOP.", "id": "c0kt1ru", "parent": "t1_c0kscje", "vote": 9}, {"content": "Java or Python are probably the clearest, and have a smaller learning curve. My tool of choice is Perl (and lately Perl+Moose), but really do think Java is more orthogonal to C++ which the poster appears interested in.", "id": "c0ktd2s", "parent": "t1_c0kscje", "vote": 3}, {"content": "Perl, not really.  Kind of.\n\nIf you really want to get into OOP, try some Java.  They do it well in my opinion.\n\nAlso understand that OOP doesn't or shouldn't be used everywhere.  A lot of newbie Java programmers use (abuse) OOP for everything.", "id": "c0ksy8o", "parent": "t1_c0kscje", "vote": 2}, {"content": "Wow you know a lot about a lot of languages.  However, I bet you are still able to produce good software.", "id": "c0kt21y", "parent": "t1_c0kscje", "vote": -4}, {"content": "The actual problem there is that a mutable rectangle is only accidentally square.\n\nRemove mutation and square-is-a-rectangle is fine, as square rectangles are neccessarily square.", "id": "c0kwcbg", "parent": "t1_c0ku0iw", "vote": 3}, {"content": "I started calling this whole mess \"Temporal Inheritance\".\r\n\r\nB inherits from A simply because A was *written first*", "id": "c0kua3l", "parent": "t1_c0ku0iw", "vote": 2}, {"content": "You're describing failure to follow the Liskov Substitution Principle, a fundamental principle of OO.", "id": "c0kzhnz", "parent": "t1_c0ku0iw", "vote": 2}, {"content": "While the parent comment has been downvoted (and uses the word \"IDE\"! and may be irrelevant considering the OP's practice and already acquired knowledge), there's a point in it: if you cannot understand the theory, just tinker with the tools, see what you can do and what you can't do. You'll get some (poor) picture in your head about how it works. Then get back to books and read the theory. You'll understand a bit more.\n\nThis is essentially how we all learned to program, isn't it? You didn't read every book on programming and then magically started writing code. Sometimes it's better to learn theory and then start tinkering with tools, sometimes vice-versa.", "id": "c0kspgj", "parent": "t1_c0ksjt2", "vote": 4}, {"content": "[deleted]", "id": "c0ktzqt", "parent": "t1_c0ktg4t", "vote": 3}, {"content": "the terrible thing about learning is that you can't *unlearn*.", "id": "c0ktvf4", "parent": "t1_c0kteso", "vote": 2}, {"content": "It depends on what you call OOP and who calls it: http://www.paulgraham.com/reesoo.html", "id": "c0ksofk", "parent": "t1_c0ksikb", "vote": 6}, {"content": "You don't need interfaces beyond \"accept a message\".", "id": "c0ktwi2", "parent": "t1_c0ksikb", "vote": 2}, {"content": "Inheritance is exactly logical implication under Curry-Howard with implicit dictionary passing (and a guarantee of purity in the conversion). Logical implication is exactly a function. Therefore, inheritance is \"implicit dictionary passing with a guarantee of purity in the conversion\". Some languages need no such guarantees, since they are encoded in the type system. Therefore, such languages likely don't have traditional inheritance because of [the problems it causes](http://okmij.org/ftp/Computation/Subtyping/).", "id": "c0kv3qb", "parent": "t1_c0ksikb", "vote": 2}, {"content": "_Modeling the World in States_ is the one that I like... still on my shelf!", "id": "c0kslxa", "parent": "t1_c0ksa7j", "vote": 1}, {"content": "Thanks.\n\nOne thing I noticed is that there are some people that try to create an object for literally everything they can imagine, making the codebase really difficult to sort through.\n\nThen there are some people that use minimal OOP concepts, I guess so they can just say, \"It's at least somewhat OOP\", even though it seems to defeat the whole purpose.\n\nWhen in the designing process, I always feel like there's a much better (or correct) way of doing it than the way that I'm doing it.\n\nOh, to clarify, I downloaded the binary Ogre3D SDK (rendering engine for games) and looked through the sample C++ projects it comes with and I had a hard time figuring it out and how the library works.", "id": "c0kt4q4", "parent": "t1_c0kt0tz", "vote": 2}, {"content": "This is why I don't think of Python as OO: I think of it it as a dictionary based language that has these special kind of dictionaries called classes that have some extra default behavior.", "id": "c0kt826", "parent": "t1_c0ksbge", "vote": 3}, {"content": "I like Java's syntax--very clean and straighforward.  (At least, the historic syntax--the newer bits irk me to varying degrees.)  Personally, I'd have no qualms teaching OOP in Java... that said, it does have a crazy-huge class library that's pretty intimidating to newcomers, and should probably be mostly ignored at the start of the OOP learning process.", "id": "c0kshi3", "parent": "t1_c0ksbge", "vote": -1}, {"content": "And two of the authors of the 'Mock Roles Not Objects' paper wrote a really good [book](http://www.growing-object-oriented-software.com/). ", "id": "c0kt553", "parent": "t1_c0ksqcz", "vote": 1}, {"content": "Except when interning? :)", "id": "c0ktgah", "parent": "t1_c0ksqcz", "vote": 1}, {"content": ">Meyer has some opinions about the field that are, um, controversial (mainly, the blanket dismissal of all dynamic OO languages)\n\nIt isn't a controversial view when you take into account he talks about Design By Contract where you specify the types, the pre-conditions and the post-conditions for methods and for object state. The idea of programming as a goal-oriented activity using post-conditions has been around since the late 60s.", "id": "c0ktoso", "parent": "t1_c0ksqql", "vote": 1}, {"content": "I've always been interested in that except for my blanket dismissal of all static OO languages :(", "id": "c0kt7jz", "parent": "t1_c0ksqql", "vote": -1}, {"content": "Indeed. I glazed over this point earlier, but it bears repeating. Partitioning concerns into multiple smaller classes is vital (to me) in ensuring high-quality software. Being able to split off a concept and attack it in complete isolation is extremely satisfying once you get the hang of it.\n\nPeople are quick to indict OOP due to the \"failure\" of inheritance, but, really, inheritance is the wrong way to approach problems. Composition is less complicated and does not require (as many) mental gymnastics to force everything into artificial hierarchies.", "id": "c0kt2o3", "parent": "t1_c0kt12i", "vote": 3}, {"content": "Can you elaborate on this a little bit?", "id": "c0o29kp", "parent": "t1_c0ksren", "vote": 1}, {"content": "[deleted]", "id": "c0ktzjn", "parent": "t1_c0kt2si", "vote": 0}, {"content": "You have a very intriguing way of going about this. Can you provide a project idea that would be good for this exercise (that of not using those keywords)? Ideally, I'd possibly like to implement the project that sparked your AHA! moment.\n\nThanks in advance.", "id": "c0o2962", "parent": "t1_c0kxxcg", "vote": 1}, {"content": "Every single category theory book I've looked at is coherent. Did you mean something like \"easy for me to understand\" instead of \"coherent\"?\n\nIf your background is more computer sciencey than mathy try Steve Awodey's book.", "id": "c0ku26z", "parent": "t1_c0kttcq", "vote": 1}, {"content": "You don't need a coherent introduction to category theory (although there are many) to understand monads; at least, the extent to which they are practical to programming.\n\nWhat is the problem exactly?", "id": "c0kv2yc", "parent": "t1_c0kttcq", "vote": 1}, {"content": "Dunno you can split things up too much, surely having Movie implement a Validator interface might make more sense?\n\n", "id": "c0ktgiu", "parent": "t1_c0ktd3d", "vote": 1}, {"content": "Except that animals violate subclass constraints all the time.\n\ne.g., animals in general can eat food in general, but cows are herbivores and cannot, so cow cannot be a subclass of animal.\n\nThis is a good example of how people get confused about inheritance.", "id": "c0kx7s4", "parent": "t1_c0kucm7", "vote": 1}, {"content": "Funny guy.", "id": "c0kv3gx", "parent": "t1_c0ksk0d", "vote": 1}, {"content": "I love it when I find out there's actually a word for something I've been doing all along(demeter's law). ", "id": "c0ktrxy", "parent": "t1_c0ktczt", "vote": 1}, {"content": "Depends what you mean by \"opposite\". Classes + dispatch are dual to algebraic types + pattern matching.", "id": "c0kttbd", "parent": "t1_c0ktczt", "vote": 1}, {"content": "Yes, yes, and yes, programming in Scheme (and listening to SICP lectures) actually made me realize that I'm thinking in OOP too much. Thanks!", "id": "c0kuwp8", "parent": "t1_c0kthi9", "vote": 2}, {"content": "scheme is only a gateway drug, the real hard stuff is haskell :)", "id": "c0kwpdb", "parent": "t1_c0kthi9", "vote": 1}, {"content": "I tried Go (wrote a command-line Twitter client in it as a hello world program :-). At first I liked it, but now I feel that it's to verbose and limiting. There was almost nothing new in it for me.", "id": "c0kuwhv", "parent": "t1_c0ktxws", "vote": 1}, {"content": "Yep, that's what I'm doing right now :-)", "id": "c0kuwcu", "parent": "t1_c0ktf4y", "vote": 2}, {"content": "Knowing how to do it right and then adapting for the language's shortcomings is better than learning how to do it wrong.", "id": "c0ksxii", "parent": "t1_c0ksrya", "vote": 5}, {"content": "Yea really.. C# or Java are perfect for learning OOP, but Perl... eh...", "id": "c0ktfv4", "parent": "t1_c0ksv4h", "vote": 3}, {"content": "Perl on its own, no. Perl with Moose, yes. Moose removes a lot of boilerplate that you encounter in Perl without an OO module (for example, writing a default constructor) and also eliminates boilerplate that I've found in Java (like getters/setters).\n\n(disclosure: I have not done tons of programming in Java, and I have done tons in Perl. Still, give Moose a look. It's the best OO in Perl and possibly better than some other OO languages.)", "id": "c0kswup", "parent": "t1_c0ksv4h", "vote": 6}, {"content": "Java made me understand OO.", "id": "c0kt6l9", "parent": "t1_c0kt1ru", "vote": 8}, {"content": "Yes, I think you're right. If the poster is interested in better-understanding C++, then maybe Java would help the most in this case.\n\n", "id": "c0ku39i", "parent": "t1_c0ktd2s", "vote": 1}, {"content": "Yes, I think Java forces you into learning OOP with the declaration of every instance variable as private and every instance method as public.", "id": "c0kt022", "parent": "t1_c0ksy8o", "vote": 7}, {"content": "The LSP came about long after OOP came into existence. Good OOP should follow it but classically it hasn't been taught this way. Regardless if you follow it you will find you have near 0 inheritance.", "id": "c0kzhst", "parent": "t1_c0kzhnz", "vote": 2}, {"content": "Programming is a fashion industry.", "id": "c0kv301", "parent": "t1_c0ktzqt", "vote": 3}, {"content": "The harder something is to grasp the more valuable it is taken to be.", "id": "c0kwc2z", "parent": "t1_c0ktzqt", "vote": 3}, {"content": "Indeed.  There are some things that mortals were never meant to know, e.g. the fiddly details of C++ template class runtime type identification.\n\n> *\"Among the agonies of these after days is that chief of torments \u2014 inarticulateness. What I learned and saw in those hours of impious exploration can never be told \u2014 for want of symbols or suggestions in any language.\"* \u2014H.P. Lovecraft, \"Hypnos\" (1922)", "id": "c0kvd06", "parent": "t1_c0ktvf4", "vote": 1}, {"content": "The boiler plating and number 8 in http://www.paulgraham.com/reesoo.html is what I am annoyed by the most in Java.", "id": "c0ksz7b", "parent": "t1_c0ksofk", "vote": 1}, {"content": "Yes, indeed, many people are wrong.  What else is new?", "id": "c0ktvec", "parent": "t1_c0ksofk", "vote": -2}, {"content": "> One thing I noticed is that there are some people that try to create an object for literally everything they can imagine, making the codebase really difficult to sort through.\n\nSmaller classes lead to more concepts to digest, but it is easier to see how the objects interact. What you don't want is a giant object that has lots of little side effects that are difficult to track down.\n\n> When in the designing process, I always feel like there's a much better (or correct) way of doing it than the way that I'm doing it.\n\nThis is good: it keeps you from becoming complacent. I learned a lot by discussing design and such in the General Programming section of GameDev.net. Find a forum that has people who are smart and willing to discuss these things with you, and then just keep designing and developing. There is no right way to do OOP. I tend to be more pragmatic about it these days, but there are cases when a little OOP can go a long way towards keeping the code nicely organized.\n\nProper OOP isn't worth stressing about. Using presentation patterns like passive view is, however, IMO.", "id": "c0ktbvp", "parent": "t1_c0kt4q4", "vote": 3}, {"content": "[deleted]", "id": "c0ktxz8", "parent": "t1_c0kt826", "vote": 1}, {"content": "It boils down to: Model components of a solution you can feed your problem to instead of designing classes that directly model components of the problem.", "id": "c0o2bbt", "parent": "t1_c0o29kp", "vote": 1}, {"content": "Thanks. It's nice to know there are others out there as nuts as I am! :)", "id": "c0kuwhl", "parent": "t1_c0ktzjn", "vote": 1}, {"content": "I think this is a good point because you want to keep things readable and simple and unnecessary abstraction certainly goes against that.\n\nI don't think it's possible to say one way or another whether that little example is broken up too much though.  It would really depend on the details.  For instance if there's just one type of validation and it's relatively simple and unlikely to change, then I like your suggestion.  If you require lots of different Validators (for whatever reason) to operate on the same movie and possibly come up with different results, then I think it will pay to break it up.\n\nNote I'm not suggesting this is how you implement a validation framework either!  I'm just trying to illustrate to anyone who has suffered the same mental block as me, that it can make sense to create objects for completely virtual things like \"validators.\"\n\nAs usual, the principles are something you have to balance.  Once you have experience you can be pragmatic about how you apply them.\n\n", "id": "c0ktl57", "parent": "t1_c0ktgiu", "vote": 1}, {"content": "That is a constraint, not a violation. Inheritance is about specification (subclasses being more specific than superclasses) and not just copy+paste. It's more like: if the animal is an omnivore, it can eat anything, otherwise if it is a herbivore it can only digest plants, etc. That's more like implementing certain interfaces or throwing up (sic!) an exception in the eat method. Cats can't digest plastic but that won't stop them from trying to eat it.", "id": "c0kxmi3", "parent": "t1_c0kx7s4", "vote": 1}, {"content": "I doubt that. Just because you have to put everything in a class in Java doesn't mean Java is the epitome of OO. Especially not with primitives and null getting special treatment.", "id": "c0ku6mw", "parent": "t1_c0kt6l9", "vote": 4}, {"content": "Yea, you can break out of it by using static public variables/methods and such, but generally java tries to steer you towards the oop way of doing things.", "id": "c0ktbc8", "parent": "t1_c0kt022", "vote": 2}, {"content": "I'm not sure how private/public is related to OOP in a major way...  and Smalltalk doesn't even have methods.", "id": "c0kt9pf", "parent": "t1_c0kt022", "vote": 1}, {"content": "Well, it's a very old concept by now. Anyway, that people are incompetent isn't an inherent fault with inheritance. If you don't follow good and well known design principles, like [SOLID](http://en.wikipedia.org/wiki/Solid_%28Object_Oriented_Design%29), you should expect to have problems.\n\nIt's false that you will have near zero inheritance, but it does help a lot in reducing it where it does not fit. Composition should be strongly preferred over inheritance,  but there are many areas where inheritance is a great abstraction.\n\nYour car examples does not really violate good OO principles, by the way. I claim that things can be cars even though they cannot be driven at all (no engine, for example), so code assuming that a car can drive must expect to sometimes achieve nothing. Still, having a common interface for all Cars can be very simplifying in your application.", "id": "c0l15g9", "parent": "t1_c0kzhst", "vote": 1}, {"content": "In a way, yes. In another way, no.\n\nYou can use classes as structs, though often tuples, lists, sets or dictionaries are a better choice. You can do this in most languages that have objects and classes.\n\nHowever in many cases it's only supposed to FEEL that way. There is no need for setX or getX methods (as you would find them in most Java code) because it is completely hidden whether you are actually accessing a member variable or a decorated \"property\" (i.e. a function call acting as a variable for most intents and purposes).\n\nOf course there are always objects that really only represent data and have little functionality of their own. The most blatantly obvious (or non-obvious, depending where you come from) example would be the typical primitives: numbers, strings, booleans. In (modern) Python, however, even these are objects and language concepts like addition, indexing and negation are implemented through methods by these \"types\".\n\nIf you are working on a drawing library, for example, Point or Line may be simple structs for most intents and purposes (the latter being a tuple of two Points, the former being a tuple of two or more offsets), but you could still implement sensible methods (`Line.__len__` could calculate the distance between the two points, for example; `Point.__neg__` could return a Point with inverted coordinates, etc).\n\nSo, yes, you can use classes as structs, but there's really no clear line dividing \"structs\" from \"real\" classes in Python.\n\nEDIT: The point I'm trying to make is that OOP is not about having classes vs having \"data structures\". It's about the reasoning behind them and how you use them and define them. That's what encapsulation is really about: putting data that belongs together in a common space.", "id": "c0ku7q4", "parent": "t1_c0ktxz8", "vote": 0}, {"content": "Can you give an example?\nHonestly, I think that what you're saying is about to make sense but I just need an example that kind of outlines the thought process behind it.\n\nNot only do I think it's about to make sense, I think it's going to make sense in a good way.", "id": "c0o2d0y", "parent": "t1_c0o2bbt", "vote": 1}, {"content": "See Liskov Substitution Principle.", "id": "c0kxt9t", "parent": "t1_c0kxmi3", "vote": 1}, {"content": "What do you mean by Smalltalk not having methods? Do you know Smalltalk?\n\n", "id": "c0kvzmk", "parent": "t1_c0kt9pf", "vote": 1}, {"content": "Egh... I uh... I don't quite know how to verbalize it or give a current example. (I've always had trouble with this which is why I'd make a terrible teacher.)\n\nIt's more of a general philosophy. Figure out a rough idea of how you're going to solve the problem at hand and then design your classes with that solution in mind. This helps you avoid crazy code where you try to shoehorn incorrectly-designed classes together.\n\nIf you find yourself overriding private methods with public ones and/or writing a lot of hacky-ish code just to get objects to play well together then you've modeled the problem instead of the solution.\n\n(I've found it also helps to make your object internals as private and as read-only as possible. Make public methods simple and have as few as necessary to work with that object. Even if an object's internals are messy and complicated, it should appear as a simple, easy-to-interact-with object from the outside.)", "id": "c0o2e29", "parent": "t1_c0o2d0y", "vote": 2}, {"content": "Not really. There are two problems: 1) an abstract animal can't be said to be able to eat anything at all (it's eating method is implementation specific). 2) the distinction between omni/herbi/carnivore is not necessarily inherited, but it doesn't affect the method signature anyway.\n\nThink of it more as a validation problem: the property of \"wanting\" to eat something is defined by its behaviour, the property of what CAN be eaten is a matter of what can be digested; bad food might still be eaten but result in an exception. You could actually even complicate the issue further by using generics to differentiate between omni/herbi/carnivores or use multiple inheritance (even if you use interfaces).\n\nThe animal analogy is flawed (unless you're a Creationist and believe in \"kinds\") anyway, but the example you provided isn't a good one.\n\nLSP isn't really about whether it's a valid example of OO or not. It's just about whether it violates LSP or not. You could even say the digestion example can be made to adhere LSP if the method `eat(obj)` of `Animal` already specifies that an `IndigestibleException` is thrown (which would be what you would expect to happen anyway). If the precondition contract for Animal.eat states \"any object will be digested\", that's not only wrong but also silly.\n\nThe analogy is \"Animals can eat something\", not \"Animals can eat anything\". LSP does not cause any problems with that.", "id": "c0ky06f", "parent": "t1_c0kxt9t", "vote": 1}, {"content": "OK. No worries then. \nThanks for the tips.", "id": "c0o2ezl", "parent": "t1_c0o2e29", "vote": 1}, {"content": "The point that you've missed here is that this makes subclassing about \"extending interfaces\" not about \"specialization\".\n\nThis is why subclassing doesn't map to taxonomic subcategories.", "id": "c0kywe3", "parent": "t1_c0ky06f", "vote": 2}, {"content": "True. But that is why we have abstract base classes.\n\nThe real point is that in most cases you shouldn't be using class hierarchies at all, you should be defining common interfaces or using encapsulation rather than inheritance.\n\nThe focus inheritance gets in introductions to OOP makes it sound like most of your time writing OO code consists of creating sub-classes. That's just plain wrong (except for sub-classes of your language's equivalent of the `Object` class, which some languages let you do implicitly).\n\nThe real problem with taxonomic categories is that they are completely arbitrary and based on ideals you won't find in the Real World. That's just how they work (you'd be hard-pressed to find a prototypical \"human\", for example). The analogy is blatantly flawed, but that holds true for most real-world examples -- that's also why _proper_ inheritance is hard.\n\nMaybe you are right: to understand inheritance you first need to understand interfaces and LSP and encapsulation and all that. But in the Real World you'll find that a lot of OO code violates LSP for one reason or another. You can argue that that's not really OOP then and you'll probably be right, but that's where theory and practice tend to differ (just like TDD and SCRUM &c are often not used the way they are supposed to be used).", "id": "c0pjhh6", "parent": "t1_c0kywe3", "vote": 1}], "link": "https://www.reddit.com/r/programming/comments/b3ocn/anyone_else_have_a_hard_time_with_oop_at_first/", "question": {"context": "I have the basics down, but I find myself having a hard time fully understanding semi-large/medium-sized OOP projects (C++).\n\nThings like delegates, singletons, etc. I can't seem to wrap my head around.\n\nI come from Visual Basic 6 which had little-to-no OOP, and what it did wasn't really true OOP (no inheritence/polymorphism, only implements).\n\nI decided to try and start using Ogre and C++ for a small game, and looking through the sample code, it's a little mind-boggling.\n\nReading tutorials helps, but shouldn't I be able to look at the example projects and basically (and pretty quickly) get a good understanding of what's going on?\n\nIs there a **really** good OOP tutorial? A generic one that would apply to most true OOP languages? The ones I've read are either lacking or explain things poorly.\n\nOnce I get a good, solid handle on OOP and some practice, I plan on reading and practicing design patterns. But I don't think I'm ready to start that yet.", "id": "b3ocn", "title": "Anyone else have a hard time with OOP at first? What did you do/read that made it clear?"}, "resource": "Reddit"}, {"answers": [{"content": "Its awesome, I love the read/write\\_text/bytes functions so convenient!", "id": "ihzsynn", "parent": "t3_wab01n", "vote": 95}, {"content": "Samesies. `path.with_suffix('.newsuffix')` is something to remember.", "id": "ihzycne", "parent": "t3_wab01n", "vote": 84}, {"content": "As someone who writes cross-platform code \\_every single day\\_, I can tell you that pathlib is heaven-sent.  Almost every necessary file operation (we don't do anything fancy - read, existence, move/copy, write) is trivially cross-platform.\n\nI'll die on this hill.", "id": "ii0y51e", "parent": "t3_wab01n", "vote": 29}, {"content": "Another pathlib lover here.\n\nThe shame is most tuts/examples use os.path. Yuck", "id": "ii052fz", "parent": "t3_wab01n", "vote": 41}, {"content": "My biggest complaint is that they do some magic with `__new__` that makes extending the Path  class very annoying.\n\nAlso, in principle I'm against overriding `__truediv__` to create some syntax sugar, but in practice the end-result actually makes sense, so I forgive it.\n\nOther than that, I  really enjoy it.", "id": "ii08z0e", "parent": "t3_wab01n", "vote": 45}, {"content": "Testing locally?  `Path.cwd()` is such a beautiful thing!", "id": "ihzvh03", "parent": "t3_wab01n", "vote": 34}, {"content": "Personally, I prefer os.path for most lighter operations, like \n\n`path=os.path.join(root, user)`\n\nPathlib feels bloated to me, but it works in complex situations", "id": "ii0h6pv", "parent": "t3_wab01n", "vote": 12}, {"content": "I think the fact that the relative priorities of \\`/\\` and \\`+\\` are the way around that they are is pretty disappointing - the syntax it gives rise to feels like an overly-clever trick.", "id": "ihzvmr6", "parent": "t3_wab01n", "vote": 18}, {"content": "I was just using it today and I don't think I'm a fan of the lib overloading \\_\\_truediv__.\n\nI think it's an interesting idea, but would be quite confusing to someone new to the library", "id": "ii023n8", "parent": "t3_wab01n", "vote": 19}, {"content": "I'll also put in a shameless plug about using it ([in my blog](https://www.nathanfurnal.xyz/posts/managing-grouping-files-python/)), what I really like about it, is that it's cross-platform and quite smart about handling paths altogether and it was really well thought out to interact with the rest of the standard library.", "id": "ii0ildq", "parent": "t3_wab01n", "vote": 5}, {"content": "I normally use pathlib in most cases. Sometimes though I need to use os as well.", "id": "ii0g5w6", "parent": "t3_wab01n", "vote": 4}, {"content": "It\u2019s brilliant. I use it all the time. `os.path.join`. WTF?! I wrote a [blog post](https://www.mynl.com/blog?id=55fc3ae8fe011350dc764f3b7af5b241) about it.", "id": "ihzrigj", "parent": "t3_wab01n", "vote": 17}, {"content": "Yeah it's really great", "id": "ii0gba8", "parent": "t3_wab01n", "vote": 3}, {"content": "I like it a lot, but I thought a few things could be slightly improved:\n\nhttps://ubelt.readthedocs.io/en/latest/ubelt.util_path.html#ubelt.util_path.Path", "id": "ii4enz5", "parent": "t3_wab01n", "vote": 3}, {"content": "It's handy but sometimes it little bit slower.", "id": "ihzxhgp", "parent": "t3_wab01n", "vote": 5}, {"content": "My partner who used python professionally introduced me (a casual scripted) to pathlib and I think it\u2019s far superior to os\u2026 mostly because code I\u2019ve both written and read taht uses os+glob is verbose and hard to read.. which feels very anti python", "id": "ii0kut8", "parent": "t3_wab01n", "vote": 2}, {"content": "I think that they made a mistake.\n\nPathlib object should have been just inquire objects. Not action objects.\n\nIn other words, you have a path object. You can ask for various properties of this path: is it readable, what are its stems, what are its extensions, etc.\n\nHowever, at is is, it is doing too much. It has methods such as rmdir, unlink and so on. It's a mistake to have them on that object. Why? because filesystem operations are complex, platform specific, filesystem specific, and you can never cover all cases. In fact, there are some duplicated functionalities. is it os.remove(pathobj) or pathobj.remove()? what about recursive deletion? recursive creation of subdirs? The mistake was to collate the abstracted representation of a path and the actions on that path, also considering that you can talk about a path without necessarily for that path to exist on the system (which is covered, but hazy) \n\nIt is also impossible to use it as an abstraction to represent paths without involving the filesystem. You cannot instantiate a WindowsPath on Linux, for example.\n\nAll in all, I tend to use it almost exclusively, but I am certainly not completely happy with the API.", "id": "ihzxuop", "parent": "t3_wab01n", "vote": 6}, {"content": "Very useful, now I challenge you to try and subclass pathlib.Path and see what happens!", "id": "ii0b2vo", "parent": "t3_wab01n", "vote": 4}, {"content": "Its terrible and I hate it.", "id": "ihzrogh", "parent": "t3_wab01n", "vote": -4}, {"content": "It's alright, but makes some mistakes that plumbum paths avoided, so I use those where I can. Basically I don't like how relative paths are not resolved, and the results of operations on those, and the way pathlib conflates absolute and real path resolution.", "id": "ii0k0cx", "parent": "t3_wab01n", "vote": 1}, {"content": "Still not using it consistently.  It doesn't play well with libraries and seems to create headaches.", "id": "ii1jbqx", "parent": "t3_wab01n", "vote": 1}, {"content": "[deleted]", "id": "ii0bevc", "parent": "t3_wab01n", "vote": -4}, {"content": "One downside that has made me adopt using it: when working in a jupyter notebook I rely on the tab autocompletion to find files. This doesn't work when using the path objects. Might just be specific to those that write python for data science in jupyter. I'm not writing production code.", "id": "ii0fweu", "parent": "t3_wab01n", "vote": 1}, {"content": "Use it, love it.", "id": "ii0xfma", "parent": "t3_wab01n", "vote": 1}, {"content": "I love it. I never think about slashes. It's just Path(parent, parent, parent, file) and it all works out.", "id": "ii0zqjm", "parent": "t3_wab01n", "vote": 1}, {"content": "I really like Pathlib, but isn\u2019t there still some incompatibilities with other libraries? I think `sys` has methods that expect string only and not pathlike objects. That could be different now, but I really hate wasting code to typecast variables.", "id": "ii11j1n", "parent": "t3_wab01n", "vote": 1}, {"content": "One issue I have with it is that recursive globbing doesn't follow symlinks and has been a known issue since 2016: https://github.com/python/cpython/issues/70200. I have to convert to string and use `glob.glob` for correct behavior.", "id": "ii13mpl", "parent": "t3_wab01n", "vote": 1}, {"content": "It's what I now reach for in new code. The major exception is when I simply want to test if a file exists (`os.path.exists(fn)`) before opening. I don't bother to cast it as a PathLib object first.", "id": "ii1hegz", "parent": "t3_wab01n", "vote": 1}, {"content": "I love that it has `.open`; makes testing vis-a-vis injection _so_ much nicer.", "id": "ii1unog", "parent": "t3_wab01n", "vote": 1}, {"content": "I also stopped using os.path once I learned about pathlib.", "id": "ii1vzz5", "parent": "t3_wab01n", "vote": 1}, {"content": "Check this one out- An interesting project I found is EZPaths. Paths are stored in Path objects that have handy built in methods. Paths can be added to join. \n\nhttps://github.com/Gastropod/ezpaths", "id": "ii24ldx", "parent": "t3_wab01n", "vote": 1}, {"content": "I like that you can do `mypath.chmod(0o600)`, but I miss `mypath.chown(\"myuser\", \"mygroup\")`, and maybe a gid and uid version of it too.", "id": "ii289nn", "parent": "t3_wab01n", "vote": 1}, {"content": "Pathlib is cool, but os and os.path have more functionality - for example, Pathlib has no way to do listdir - instead, you have to use glob.", "id": "ii2wr6x", "parent": "t3_wab01n", "vote": 1}, {"content": "yeah especially going into a folder Path('repo')/'.git'", "id": "ii32hi1", "parent": "t3_wab01n", "vote": 1}, {"content": "It's brilliant \ud83d\udc9d", "id": "ii3efsg", "parent": "t3_wab01n", "vote": 1}, {"content": "I prefer to use [`path.py`](https://pypi.org/project/path/) because it is a subclass of `str` so you can treat it as string and it has more methods.", "id": "ii3hr1g", "parent": "t3_wab01n", "vote": 1}, {"content": "That\u2019s all I use nowadays", "id": "ii3rq86", "parent": "t3_wab01n", "vote": 1}, {"content": "effective use of OOP and advanced concepts of python like multiple inheritance and .... is great", "id": "ii3tiho", "parent": "t3_wab01n", "vote": 1}, {"content": "I really like the ```.parent``` on the path instances \ud83d\ude01\u270c\ufe0f", "id": "ii3tldz", "parent": "t3_wab01n", "vote": 1}, {"content": "What is os.path?", "id": "ii41p3q", "parent": "t3_wab01n", "vote": 1}, {"content": "One of my happy days was when all currently supported version of Python included `pathlib` in the standard library :)", "id": "ii47ejn", "parent": "t3_wab01n", "vote": 1}, {"content": "It would be nice if `PathLib` had more of this stuff. Why not a `with_parents` function so that I can easily change the folder name 2-3 levels up?\n\nAlso this is fucked up:\n\n    assert(path.with_suffix(s).suffix == s)\n    Traceback...\n    AssertionError\n\n[EDIT]: /u/Average_Cat_Lover got me thinking about `stems` and such which lead me to an even worse behavior. There is a path you can start with which has the following interesting properties:\n\n    len(path.suffixes) == 0\n    len(path.with_suffix(\".bar\").suffixes) == 2\n\nSo it doesn't have a suffix, but if you add one, now it has two.", "id": "ii0iy7i", "parent": "t1_ihzycne", "vote": 9}, {"content": "The timing couldnt have been better when it came out as that is when Windows WSL was becoming more available or popular.", "id": "ii3wfnr", "parent": "t1_ii0y51e", "vote": 1}, {"content": "[This cookbook ](https://miguendes.me/python-pathlib) has helped me out a ton when I can\u2019t remember the syntax, I find it much easier to check a quick example than work through the docs.", "id": "ii12yc4", "parent": "t1_ii052fz", "vote": 20}, {"content": "There's a lot of work being done to make it extensible: https://discuss.python.org/t/make-pathlib-extensible/3428\n\nThings are going to be much better in 3.11.", "id": "ii0ql3h", "parent": "t1_ii08z0e", "vote": 28}, {"content": "As someone still early in their python journey, what is your use case for extending Path classes? Testing, or some design pattern you want to implement? And what is problematic about the magic they do with `__new__` and its affect on extending it?", "id": "ii0kz1y", "parent": "t1_ii08z0e", "vote": 11}, {"content": "or `Path(__file__).parent` to get to files in the same folder no matter where you call the script from\n\nedit: This gives you the directory the script is stored in, NOT the current working directory (the directory from which you've executed the script)", "id": "ii0ol1d", "parent": "t1_ihzvh03", "vote": 34}, {"content": "It is a bit of a puzzle why that would be considered so valuable. The source code for `cwd` is \n\n    return cls(os.getcwd())\n\nIf you want to express an absolute path relative to the current working directory you can do either of the following:\n\n     Path.cwd() / \"whatever\"\n     os.path.join(os.getcwd(), \"whatever\")\n\nNeither is particularly complicated.", "id": "ii178y5", "parent": "t1_ihzvh03", "vote": 3}, {"content": "building constants is the best! \n\n    CWD             = Path.cwd()\n    TMP             = Path(tempfile.gettempdir())\n    TEST_CACHE_PATH = TMP / f'{PROJECT}-testdata'\n    CONFIG          = load_config(CWD / 'configs' / f'{APP_CONFIG}.toml')\n    PYPROJ          = load_config(CWD / 'pyproject.toml')\n    LOGGING_CONFIG  = CWD / 'configs' / f'{APP_CONFIG}-logging.ini'\n    CACHE_PATH      = Path(CONFIG.filecache.root_path)", "id": "ii17d8l", "parent": "t1_ihzvh03", "vote": 0}, {"content": "It *is* an overly clever trick. And much better than the alternatives, if you ask me.", "id": "ii0h2ff", "parent": "t1_ihzvmr6", "vote": 13}, {"content": "YOU CAN NEVER BE TOO CLEVER. Otherwise Ruby wins.", "id": "ii0qi5g", "parent": "t1_ihzvmr6", "vote": 1}, {"content": "It's convenient but I agree that if the Python Gods had intended such use the special method would have been called `__slash__` (indicating *use it as you please*).\n\nNow it's plain and simple heretic. But: practically beats purity, so I'll use it none the less.", "id": "ii0m33v", "parent": "t1_ii023n8", "vote": 13}, {"content": "Why is this a problem? Do you also think that str.__add__ is bad? The syntax is clear and not ambiguous.", "id": "ii1vu6w", "parent": "t1_ii023n8", "vote": 4}, {"content": "When I was new to the library, I exclaimed \"That's brilliant!\" Now it's something I show off to non-Python users. Except many of those are Windows users and don't understand slashes....", "id": "ii0otkk", "parent": "t1_ii023n8", "vote": 8}, {"content": "It\u2019s really annoying that it plays so poorly with strings. If I can use + for str used as a path let me do the same. And it\u2019s a nightmare to subclass m, argh.", "id": "ii1t4cc", "parent": "t1_ii023n8", "vote": 3}, {"content": "I'd like to start blogging; could you help me?", "id": "ii01kxg", "parent": "t1_ihzrigj", "vote": -18}, {"content": "> Pathlib object should have been just inquire objects. Not action objects.\n\nDid you mean [PurePath](https://docs.python.org/3/library/pathlib.html#pure-paths)?", "id": "ii02inf", "parent": "t1_ihzxuop", "vote": 10}, {"content": "> because filesystem operations are complex, platform specific, filesystem specific, and you can never cover all cases.\n\nI think that was the entire point of pathlib.  It was supposed to be the one-stop-shop where it abstracted the specifics and gave you cross-platform actions.  You'd write your code once and the same action would work on Linux, macos, and windows.", "id": "ii0ivmu", "parent": "t1_ihzxuop", "vote": 11}, {"content": "[deleted]", "id": "ii0cja3", "parent": "t1_ihzxuop", "vote": 6}, {"content": "\n>It is also impossible to use it as an abstraction to represent paths without involving the filesystem. You cannot instantiate a WindowsPath on Linux, for example.\n>\n>All in all, I tend to use it almost exclusively, but I am certainly not completely happy with the API.\n\nQuestion for you, my understanding and usage has been using just `pathlib.Path`. here is a nonsensical example, which works cross platform. \n\n\n    from pathlib import Path\n    \n    MY_PARENT = Path(__file__).resolve().parent\n    \n    LOGS = MY_PARENT / 'logs'\n    CACHE = MY_PARENT / 'cache'\n    LOGS.mkdir(exist_ok=True)\n    \n    RESOURCES = MY_PARENT.parent.parent.parent / 'some' / 'other' / 'garbage/here'\u200a\n\n\nMy understanding is if you need to use the windows logic specifically on either platform is that the PureWindowsPath should be used. https://docs.python.org/3/library/pathlib.html?highlight=pathlib#pathlib.PureWindowsPath\n\nWhat can't be relied upon specifically regarding cross platform?", "id": "ii0ddsh", "parent": "t1_ihzxuop", "vote": 3}, {"content": "You're reminding me of a man who told me that type inference was the compiler just guessing. When I tried explaining that there's a mathematically guaranteed algorithm behind it, he didn't believe me but changed tack to this argument:\n\n\"A compiler should do one thing, and one thing only. Inferring types is two things.\" \n\nYou're basically arguing that actually acting on a file is two things. \n\n> because filesystem operations are complex, platform specific, filesystem specific, and you can never cover all cases. \n\nMaybe the way YOU do file system operations they're complex... but they DON'T HAVE TO BE. The whole point of Pathlib is that they DON'T need to be platform specific or file system specific either. And nothing can ever cover \"all cases\". Should we rip out the statistics library because it doesn't cover every mathematical distribution?\n\n>It is also impossible to use it as an abstraction to represent paths   \nwithout involving the filesystem. You cannot instantiate a WindowsPath   \non Linux, for example.\n\nYour first statement is categorically false. And the second statement is gibberish. OF COURSE YOU CAN'T INSTANTIATE A WINDOWS PATH ON LINUX. But I can instantiate the SAME path on either operating system. And I can work with either path structure. I had a large playlist that was created when I used Windows as my home OS. Now on Linux I wanted to recreate the playlist. Pathlib let me open the playlist file, parse it, CREATE WINDOWS PATH OBJECTS, then strip out the drive letter, do a slight bit of jiggery-pokery to match my current path structure, then create a Linux file path for the music files. One thing I also needed to do was copy these files onto a flash drive, so pathlib could then open up the transformed paths and copy the files for me.", "id": "ii0q5zb", "parent": "t1_ihzxuop", "vote": 4}, {"content": "`stat` itself is already platform dependent, and walking the directory tree can already induce side-effects (namely updating `atime`, but various other things, esp on bespoke/fuse filesystems). Not to mention windows, unix, and linux can have completely different permission systems, so \"is it readable\" does not even a simple cross-platform question to answer. \n\nSeems to me like your suggested API is not significantly more \"pure\" than `pathlib`'s, while being arguably *more* arbitrary as to the surface area it covers", "id": "ii0zysp", "parent": "t1_ihzxuop", "vote": 2}, {"content": "Why is that ?", "id": "ihzrwb0", "parent": "t1_ihzrogh", "vote": 6}, {"content": "That and you should simplify your fractions. `Path(\"foo\")/ (\"bar\" * \"baz\")` please.", "id": "ii0c1w9", "parent": "t1_ii0bevc", "vote": 15}, {"content": "[deleted]", "id": "ii0pbu1", "parent": "t1_ii0bevc", "vote": 10}, {"content": "How is it not readable? That's how you write it in real life anywhere except Windows... /foo/bar/baz.\n\nExcept in this case someone would just write Path(\"/foo/bar/baz\").\n\nBut there's nothing wrong with \n\nbasepath / user / settings \n\nor something.", "id": "ii0ojwp", "parent": "t1_ii0bevc", "vote": 4}, {"content": "What alternative do you prefer? Wrap each string in Path or something else?", "id": "ii0niq6", "parent": "t1_ii0bevc", "vote": 1}, {"content": "Yeah a pathlib object work well with the standard python library but many 3rd party ones won't understand it (you gotta cast it to a string before passing it).", "id": "ii325ct", "parent": "t1_ii11j1n", "vote": 1}, {"content": "Looks fixed no?", "id": "ii1965y", "parent": "t1_ii13mpl", "vote": 4}, {"content": "Looks fixed no?", "id": "ii196oq", "parent": "t1_ii13mpl", "vote": 1}, {"content": "[deleted]", "id": "ii0oeam", "parent": "t1_ii0iy7i", "vote": 15}, {"content": "    new_path = new_parent_parent / old_path.parent / old_path.name\nI though it is simple, isn't it?\nOR for Nth parent above\n\n    new_path = new_N_parent / old_path.relative_to(old_N_parent)", "id": "ii1se5b", "parent": "t1_ii0iy7i", "vote": 1}, {"content": "Checkout the ubelt.Path extension and it's augment method:\n\nhttps://ubelt.readthedocs.io/en/latest/ubelt.util_path.html#ubelt.util_path.Path\n\nGranted there is a nonstandard suffix behavior in it currently that's slated for refactor.", "id": "ii4ex6f", "parent": "t1_ii0iy7i", "vote": 1}, {"content": "The [Anatomy of a Posix Path Diagram](https://cdn.hashnode.com/res/hashnode/image/upload/v1635494392030/uomUWH2vC.png?auto=compress,format&format=webp) is really great and helpful...\n\nOnly problem is that it isn't correct. There are some screwy paths where the various operations parse the suffix and stem differently in different circumstances.\n\n----\n\nAlso `str(path)` is unsafe and could result in unprintable strings. Best to convert a path you didn't directly construct to `bytes` if you need to pass it to a legacy application.", "id": "ii1h28f", "parent": "t1_ii12yc4", "vote": 10}, {"content": "Thank God.\n\nIt\u2019s limitations are sometimes nightmarish to deal with.", "id": "ii1s944", "parent": "t1_ii0ql3h", "vote": 4}, {"content": "You could e.g. implement an \u00b4ExistingPath\u00b4 that checks its existence on instantiation, pretty useful for factoring out \u00b4p = Path(\u2026);assert p.exists() \u00b4. Or you could give Path extra side effects like directly creating a folder structure when instantiated, while still being able to use it as a path.", "id": "ii0rqpx", "parent": "t1_ii0kz1y", "vote": 13}, {"content": "Enforce paths that are cross platform and work on Windows as well as Unix.\n\nEnsure that people don't create files with invalid unicode filenames.\n\nEnsure that files don't have names like `\";rm -rf /;\"`\n\netc.. etc..", "id": "ii0n05a", "parent": "t1_ii0kz1y", "vote": 2}, {"content": "Mostly because I wanted to implement some convenience functions that I would find helpful in my projects. For example, one thing I wanted to do was checking if a path is a subfolder of another path using the `in` keyword:\n\n    \n    >>> Path('C:/Downloads') in Path('C:/')\n    True\n    \n\nThis, to me, looks much better than the current way:\n\n    \n    >>> Path('C:/') in Path('C:/Downloads').parents\n    True\n    \n\nIf Path was extensible I could do that. \n\n&#x200B;\n\n>And what is problematic about the magic they do with \\_\\_new\\_\\_ and its affect on extending it?\r  \n\r\n\nI'm actually taking a guess here because I didn't look at pathlib's source code, but you'll notice that if you instantiate Path, you actually get a WindowsPath or PosixPath object instead. Path.\\_\\_new\\_\\_() probably detects your system and chooses the adequate class for it. But that means that, if you tried to extend Path, you'd still get a WindowsPath or PosixPath object instead of the class you defined. You'd have to completely rewrite the \\_\\_new\\_\\_ method and possibly extend WindowsPath and/or PosixPath as well. As you can see, it becomes quite messy.", "id": "ii13ovb", "parent": "t1_ii0kz1y", "vote": 2}, {"content": "Something like [Pathy](https://github.com/justindujardin/pathy).", "id": "ii26vr6", "parent": "t1_ii0kz1y", "vote": 1}, {"content": "This.!!! It eliminates so much sys.path() crap that I've seen!!", "id": "ii0x7jm", "parent": "t1_ii0ol1d", "vote": 7}, {"content": "Does os.getcwd() not work for that?", "id": "ii13i32", "parent": "t1_ii0ol1d", "vote": 4}, {"content": "If I'm already importing Path for the other goodies, I'd rather just use what it has as it's far more convenient.  It's short and sweet; like a perk.  Sure, `os` is there, but even what you wrote is more characters (I'm a lazy dev, after all).", "id": "ii1869j", "parent": "t1_ii178y5", "vote": 1}, {"content": "Alternatives like what?\n\n`Path(\"/\")[\"usr\"][\"bin\"][\"python\"]` requires a little bit more typing, but we know what that means.", "id": "ii0jf7g", "parent": "t1_ii0h2ff", "vote": -1}, {"content": "I certainly do.\n\n* It is rarely what I actually need. Usually if I'm combining strings I want a separator so I use `\"_\".join(x, y, z)` or the like.\n\n* I'm rarely only combining 2 strings, which again leads me towards `str.join`.\n\n* And you can gain even more flexibility by using f-strings or `str.format` with an even more explicit representation of the end result.\n\nMy feeling is that everyone should be moving away from using `+` and towards using more expressive and more powerful ways of formatting and concatenating strings. Which makes the addition of pathlib with its `/` operator all the more dubious.", "id": "ii2i48r", "parent": "t1_ii1vu6w", "vote": 4}, {"content": "[deleted]", "id": "ii0fpmg", "parent": "t1_ii01kxg", "vote": 15}, {"content": "No he wants to be able to `stat` the file. He doesn't want some of the more complex functionality to be available because its behavior may not be the same across platforms.\n\nBetween Windows and Unix you have some common verbs `exists/isdir/stat` etc... and some common nouns (UNC paths can more or less be used interchangebly on Unix systems), but if that is your entire language it is really limited:\n\n* You can't talk about all paths on the system.\n* You can't do all things the system allows to those paths.\n\nPathLib has a verb-less universe of all nouns known as `PurePath` [including gobbledy-gook nouns like `PosixPath('\\x00')`]\n\nYou can abstract away some of the differences in verbs and get a slightly more advanced library that does more (reading writing text files/unlinking/etc), but it will have little differences of interpretation between the two. That gets you `Path`.\n\nHe wants something in between, `PurePath`+ the verbs that are \"not platform specific\", but not everything that appears in `Path`.\n\n-------\n\nI agree with his concern that `PathLib` sits in an awkward middle, but think it should be resolved in a completely different way from either approach. Fewer nouns, and more verbs. A language that is \"polite\" and enforces good practices such as not giving files names like `;rm -rf  *;`.", "id": "ii054qz", "parent": "t1_ii02inf", "vote": 6}, {"content": "And it does.", "id": "ii0q75j", "parent": "t1_ii0ivmu", "vote": 5}, {"content": "That's the problem: it's an abstraction on filesystem \\_operations\\_. Not on filesystem naming. The only operations that should be allowed are traversal and query. Of course you can't query a WindowsPath when you are on Linux, but I certainly would like to read a path from a config file in windows format, and convert it to a linux format.\n\nThis is kind of already the case with the os functions, but my point remains. pathlib is great, don't get me wrong. I just sometimes feel some of its functionalities should not be part of the Path object interface.", "id": "ii3uctl", "parent": "t1_ii0cja3", "vote": 2}, {"content": "> which works cross platform. \n\nYour typo is apropos. You wrote: `'some' / 'other' / 'garbage/here' ` and I imagine you meant to write `'some' / 'other' / 'garbage' / 'here' `\n\nWhen the path component strings themselves can contain path delimiters the resulting path is ambiguous. You don't see it with the `/` delimiter because that is a delimiter common to both Unix and Windows, but:\n\n    PureWindowsPath() / r\"foo\\bar\"\n\nis very different from:\n\n    PurePosixPath() / r\"foo\\bar\"", "id": "ii0ezbe", "parent": "t1_ii0ddsh", "vote": 0}, {"content": "> But I can instantiate the SAME path on either operating system....\n\nYou can often go from Windows -> Unix because Windows filenames are more restrictive than Unix. One only has to ensure that their code only uses the \"/\" character to separate paths (or rely entirely upon a library like `os.path/pathlib` to handle all path parsing).\n\nBut you cannot go the other direction, and if you try PathLib is not going to provide you much in the way of assistance. There are valid unix paths that are parsed into valid unix components... that windows cannot accept or will treat differently.", "id": "ii0rxti", "parent": "t1_ii0q5zb", "vote": 1}, {"content": "You can find lots of my thoughts [under this thread](https://www.reddit.com/r/Python/comments/w3o19i/its_time_to_say_goodbye_to_these_obsolete_python/) \n\nAt its core `PathLib` is just a very thin layer around `os.path` that doesn't actually treat paths as objects. Its just an attempt to put some kind of type annotation on things that you want thought of as paths, not to actually provide an OOP interface to paths.\n\nFor instance:\n\nYou can instantiate entirely invalid paths that contain characters that are prohibited on the platform. Things like a `PosixPath` containing the null byte, or a `WindowsPath` with any of `<>:\"/\\|?*`.\n\nYou can't do things like copy and modify a path in an OOP style such as I might want to do if copying alice's bashrc to ovewrite bob's:\n\n     alice_bashrc = Path(\"/home/alice/.bashrc\")\n     bob_bashrc = copy.copy(alice_bashrc)\n     bob_bashrc.parents[-1] = \"bob\"\n     shutil.copy(alice_bashrc, bob_bashrc)\n\nThe weird decision to internally store paths as strings and not provide a byte constructor means you have to jump through weird hoops if you don't have a valid UTF8 path (and no operating system in use actually uses UTF8 for paths).\n\nI also don't like the API:\n\nIt abuses operator overloading to treat the division operator as a hierarchical lookup operator, but we have a hierarchical lookup operator it is `[]` aka `getitem`. `Path(\"/\")[\"usr\"][\"bin\"][\"python\"]` would be my preference.\n\nThe following assertion can fail: `assert(p.with_suffix(s).suffix == s)`\n\nFinally I've never had issues with `os.path`[1]. Yes it is a low level C-style library, but that is what I expect from something in `os`. I understand what it does and why it does it. I don't need an OOP interface to the C library.\n\n--------\n\nIn the end I would be very much in favor of a true OOP Path/Filesystem tool. Something that:\n\n* Treats paths as real objects and actually splits out their components (like parents/stem/suffixes) into modifiable components of the object, not just making them accessible with  `@property`.\n* Enforce (or provide a mechanism to enforce) best practices such as not using unprintable characters in paths, and using a minimal common set of allowed characters between Posix and Windows\n* Incorporate more of `shutil` into the tool, because `shutil` is a real pain to use.\n\nBut `PathLib` isn't that thing, and unfortunately its existence and addition to the standard library has probably foreclosed the possibility of ever getting a true OOP filesystem interface into the python standard library.\n\n\n[1] There are supposedly some bugs in `os.path`, but the response to that shouldn't be to introduce a new incompatible library, but to fix the bugs. Sigh...", "id": "ihzvgam", "parent": "t1_ihzrwb0", "vote": 13}, {"content": "Hatred", "id": "ii0re5m", "parent": "t1_ii0pbu1", "vote": 6}, {"content": "[deleted]", "id": "ii0tvyw", "parent": "t1_ii0pbu1", "vote": -1}, {"content": "[deleted]", "id": "ii0uhjk", "parent": "t1_ii0ojwp", "vote": -1}, {"content": "[deleted]", "id": "ii0upjq", "parent": "t1_ii0niq6", "vote": 3}, {"content": "Ah you're right...I'm forced to use a frozen version of Python that doesn't have the big fix ;__;", "id": "ii1a27w", "parent": "t1_ii1965y", "vote": 1}, {"content": "Please don\u2019t put parentheses around assert, it\u2019s not a function call and can lead to subtle bugs.", "id": "ii0vv2f", "parent": "t1_ii0oeam", "vote": 21}, {"content": "There is an even worse issue than just confusion regarding singular and compound suffixes. One can create a zombie suffix that cannot be removed, but may or may not be considered a suffix depending upon the alignment of the stars and the time of day:\n\n    p = Path(\"foo.\")\n    p.suffixes # [] ie there are no suffixes, its all stem, fine if that is what you think\n    q = p.with_suffix(\"bar\") # invalid suffix must start with a dot\n    q = p.with_suffix(\".bar\") # \"foo..bar\"\n    q.suffixes # (\".\", \".bar\"), but you just told me that \".\" wasn't a part of the suffix\n    q.with_suffix(\"\") # back to \"foo.\"", "id": "ii1etbx", "parent": "t1_ii0oeam", "vote": 3}, {"content": "Yes I am sure of it, I just got the assertion error in my ipython window.\n\nGo read the [source code](https://github.com/python/cpython/blob/main/Lib/pathlib.py#L633) and think for a few minutes about what it is doing.\n\n----\n\nAnd yes it is the double suffix thing. Its a bad API. There are property accessors: `.suffix` and `.suffixes` that distinguish between simple and compound suffixes.\n\nThe \"setter\" should use the same terminology as the \"getter\".\n\n`with_suffix` should throw an exception on compound suffixes. `with_suffixes` needs to be added to the library.", "id": "ii0pe2d", "parent": "t1_ii0oeam", "vote": 6}, {"content": "So I want to go from `/aaa/bbb/ccc/ddd.txt` to `aaa/XXX/ccc/ddd.txt`\n\nThe `aaa/XXX` isn't too hard, but then what? A relative_to path... I guess that might work, I haven't tried it.\n\nThe easiest is certainly going to be \n\n    _ = list(path.parts)\n    _[-3] = XXX\n    Path(*_)\n\nBut that is hardly using paths as objects, it is using lists.\n\nAnd even more direct approach would be to simply modify `path.parts` directly... If it's supposed to be an object then it should be able to support that.", "id": "ii1vex8", "parent": "t1_ii1se5b", "vote": 2}, {"content": "> Granted there is a nonstandard suffix behavior in it currently that's slated for refactor.\n\nNon-standard in ubelt? non-standard in pathlib? What is the standard? Does pathlib have a standard?\n\nBased on [this bug](https://github.com/python/cpython/issues/82805) I don't know that they do.", "id": "ii4gvu2", "parent": "t1_ii4ex6f", "vote": 1}, {"content": "> Path('C:/') in Path('C:/Downloads').parents\n\nThat is wrong and unsafe, hopefully you are aware:\n\n    def write_file(path, data):\n       if Path.home() not in path.parents:\n          raise ValueError(\"Not permitted\")\n       path.write_text(data)\n\n    pwn_path = Path.home() / \"..\" / \"..\" / \"etc\" / \"sudoers\"\n    write_file(pwn_path, ...)", "id": "ii14kbc", "parent": "t1_ii13ovb", "vote": 1}, {"content": "No guarantee that `__file__` is in any way related to CWD", "id": "ii1kmb5", "parent": "t1_ii13i32", "vote": 7}, {"content": "Cwd gives path from which you call the script, not the path where the script is located", "id": "ii1vi35", "parent": "t1_ii13i32", "vote": 3}, {"content": "I don't know what the hell he is complaining about. The source code for `Path.cwd` is literally: `return cls(os.getcwd())`.\n\nThe complaint here is entirely that `getcwd` is defined in `os` instead of `os.path`", "id": "ii16a8q", "parent": "t1_ii13i32", "vote": 0}, {"content": "I don't know what the hell that means. Are those lists? Or is the whole thing some strange dictionary?", "id": "ii0qlat", "parent": "t1_ii0jf7g", "vote": 13}, {"content": "This is not easier to understand. And it doesn't solve the problem of using a +.\n\nAlternatives like os.path.", "id": "ii14uoy", "parent": "t1_ii0jf7g", "vote": 3}, {"content": "\\3.\tSpam your blog all over the socials.", "id": "ii0xasw", "parent": "t1_ii0fpmg", "vote": 6}, {"content": "Except when it doesn't.", "id": "ii0ql3d", "parent": "t1_ii0q75j", "vote": 3}, {"content": "Yours is an interesting perspective, and while I ultimately disagree with it I think it points out a key underlying issue with pathlib:\n\nNobody knows what PathLib is for. I don't think the developers of it had a clear idea what they wanted.\n\nThey claim it has \"classes representing filesystem paths\" but then implemented the library based off UTF8 strings which no operating system actuator uses. They included functions that parse out \"suffixes\" but don't even have a clear definition of what a suffix is. They included equality tests to determine if two paths are equivalent, but can't get the results correct, and can't even decide if they should bias towards false positives or false negatives. Finally they have started to add functions to read and write text files.\n\nThere is no common agreement on what the library should and should not do, and not surprising given that situation the code is a mess.", "id": "ii480ah", "parent": "t1_ii3uctl", "vote": 1}, {"content": "My typo wasn't a typo, Pathlib standardized on / as the separator for you the dev if you want to use it in the strings you use. It will parse `thing/stuff` stuff, child of thing (a little lotr feel there.)", "id": "ii0kpje", "parent": "t1_ii0ezbe", "vote": 5}, {"content": "Just because an object is immutable doesn\u2019t mean it\u2019s not \u201cOOP enough\u201d.\n\nI agree about the lack of validation, that\u2019s unfortunate.\n\nAdding more of shutil to the API has happened and will continue to happen AFAIK.\n\nSo I don\u2019t understand how all you said amounts to it being terrible. I\u2019d summarize this as \u201cit\u2019s not perfect\u201d.", "id": "ii012ez", "parent": "t1_ihzvgam", "vote": 10}, {"content": "Surely it depends on what you need for your current situation or project , for me i don't think i will go so deep into the file handling system that i start to worry about encodings and stuff , the thing is pathlib just provides me with a more readable , concise syntax + handy utilities so that i can do what i want with only one func while in os.path it would usually require three nested funcs to get there .", "id": "ihzwy7b", "parent": "t1_ihzvgam", "vote": 4}, {"content": "Especially when you can just use an f string.", "id": "ii16tj7", "parent": "t1_ii0tvyw", "vote": 3}, {"content": "[deleted]", "id": "ii1ljh3", "parent": "t1_ii0tvyw", "vote": 1}, {"content": "I feel like I'm going to be spending all day fixing your broken ass code.\n\n    def do_something(path, some_number):\n        some_number = some_number / 2\n        write_something(\"/var/tmp/\" / path, some_number)\n\n    path = Path(sys.args[1])\n    path = path / \"whatever\" / (2*random.uniform(0,1))\n    do_something(path)\n\nThink about what you are writing before you deploy it to production!\n\n[In case you can't tell I 1000% agree with you.]", "id": "ii13pf5", "parent": "t1_ii0uhjk", "vote": -1}, {"content": "I didn't even know Path took multiple arguments. I think I'll use that from now on. I was always combining strings and paths with annoying combinations of + and /. It's also annoying that some of Path's methods return strings while others return Path objects. Doing it this way solves that problem.", "id": "ii0wr3s", "parent": "t1_ii0upjq", "vote": 2}, {"content": "No worries, I didn't know I could glob directly from a Path and was converting to string too. So thanks!", "id": "ii1a85e", "parent": "t1_ii1a27w", "vote": 2}, {"content": "What sorts of bugs?", "id": "ii158ph", "parent": "t1_ii0vv2f", "vote": 11}, {"content": "The only potential bug I am aware of is if you put parenthesis around both the assert test AND the optional assert message. This code doesn't have an assert message so it can't possibly trigger that.\n\nOn the other hand anyone used to writing code in pandas is well aware of potential issues related to omitting parens around some test conditions:\n\n     df.state == \"NY\" & df.year == 2022\n\nSo anyone who like myself is used to using pandas will always put arentheses around any test (X == Y).\n   \n    if (X == Y):\n    assert(X==Y)\n\nI'm not \"calling assert as a function\", any more than I am \"calling if as a function\". I am ensuring proper parsing of the test conditional.\n\nIf I were to put a message on the assert it would look like:\n\n    assert (X==Y), \"message\"", "id": "ii19gkn", "parent": "t1_ii0vv2f", "vote": -1}, {"content": "[deleted]", "id": "ii1r9mv", "parent": "t1_ii1etbx", "vote": 5}, {"content": "I went throug documenation and found one more way to do it:\n\n    new_path = p.parents[:-1] / 'XXX' / p.parents[0:-2] / p.name\n\nbut slicing and negative indexing is supported only from 3.10", "id": "ii214b9", "parent": "t1_ii1vex8", "vote": 1}, {"content": "Coincidentally I just started a project to add that sort of pseudo-mutability to path objects.\n\nIt's very much still in the early \"pondering\" phase, and who knows if it'll ever be completed, but the idea is there:\n\n    >>> a = Path(\"/foo/bar/baz/filename.txt\")\n    >>> a[2] = \"hello\"\n    >>> a\n    Path(\"/foo/hello/baz/filename.txt\")\n\nhttps://github.com/dougthor42/subscriptable-path", "id": "ii2lcq6", "parent": "t1_ii1vex8", "vote": 1}, {"content": "Non standard in that what I originally called a suffix (when I originally wrote the os.path-like ubelt.augpath function the augment method is based on) doesn't correspond to what pathlib calls a suffix (which is what I called an extension). \n\nWhat I called a suffix in that function actually corresponds something added to the end of a stem. I'm thinking of renaming the argument stemsuffix, but that's a bit too wordy for my taste.", "id": "ii4hlks", "parent": "t1_ii4gvu2", "vote": 1}, {"content": "I don't get what you're trying to convey. My example has nothing to do with writing a file to the path, where did that come from?\n\nAlso, I believe using `Path().parent` is preferred over using `Path() / '..'` .", "id": "ii16mz2", "parent": "t1_ii14kbc", "vote": 1}, {"content": "So you mean if a shortcut is made for an exe file the script will get fucked if not in the original folder? Assuming I have a configuration file or something?", "id": "ii4oiui", "parent": "t1_ii1vi35", "vote": 1}, {"content": "The comment you two are replying to is not talking about getting the CWD, but the directory that the currently executing python source file is located in, which is obviously not guaranteed to be CWD.", "id": "ii1kken", "parent": "t1_ii16a8q", "vote": 6}, {"content": "> Or is the whole thing some strange dictionary?\n\nYes its a strange dictionary commonly referred to as a \"FileStore\".", "id": "ii0r3y9", "parent": "t1_ii0qlat", "vote": -1}, {"content": "> This is not easier to understand.\n\nNot to me. to me its a lot clearer.\n\n> And it doesn't solve the problem of using a +.\n\nI don't know what that problem is. If you are using \"+\" for string concatenation you should stop.", "id": "ii15u9j", "parent": "t1_ii14uoy", "vote": -4}, {"content": "It works every time 50% of the time.", "id": "ii1ntsv", "parent": "t1_ii0ql3d", "vote": 3}, {"content": "This only works if you use '/' as a separator, things get muddy if you try to mix separators.", "id": "ii0so67", "parent": "t1_ii0kpje", "vote": 3}, {"content": "> Pathlib standardized on / as the separator for you the dev if you want to use it in the strings you use.\n\nNo. The path separators are defined by the OS themselves. Posix standard says that \"/\" is a component separator. Microsoft documentation says that \"/\" or \"\\\" are valid path component separators.\n\nAny library that works with paths will be required to recognize valid separators on their respective systems. \"/\" is just a separator common to all platforms which host Python.\n\nIf I wrote an OS where `$` was the only path separator, then Pathlib would [be obliged to respect that.](https://github.com/python/cpython/blob/main/Lib/pathlib.py#L65) (see also lines 124 and 179)\n\n`Path() / \"foo/bar$baz\"` would result in `baz` as a child of `foo/bar`. That was their \"design decision\".\n\n-----------\n\nI would have argued that the better design decision would be to treat both `/` and `\\` as separators on Unix. Establish a minimal common standard that works on all systems, and define them as such in the abstract `PurePath` not the individual flavors.\n\nThis would mean `PathLib` would be unable to specify certain valid paths on Unix systems, but you frankly shouldn't be creating such paths in the first place. `\"~/alice;rm -rf /;\\\\ << \\x08 | /bin/yes\"` is not a path anyone wants to be working with.", "id": "ii0mik8", "parent": "t1_ii0kpje", "vote": 0}, {"content": "> Just because an object is immutable doesn\u2019t mean it\u2019s not \u201cOOP enough\u201d.\n\nIt isn't about mutability per se. `.with_suffix` exposes the suffix for modification while preserving immutability. One could imagine a `.with_parents` that does much the same thing.\n\nIts just more complicated and harder to define such an API for folders because the ways in which people interact with folders is a bit broader than the ways in which they interact with suffixes.", "id": "ii01tsl", "parent": "t1_ii012ez", "vote": 1}, {"content": "Off topic but I\u2019ve been curious.. why do you put spaces before periods and commas?", "id": "ii0m7x8", "parent": "t1_ihzwy7b", "vote": 3}, {"content": "Even then, having to use `with_name` and `with_stem` instead of a simple setter is just not OOP at all. And let's not even go down to how `stem` is implemented:\n\n    obj = Path(\"/path/to/file.tar.gz\")\n    obj.stem  # file.tar\n    obj.with_stem(\"new_file\")  # \"/path/to/new_file.gz\"\n\nIt is a lot more trouble trying to replace a file's true stem with `pathlib.Path` than just parsing it as a string.", "id": "ii0u6b8", "parent": "t1_ihzwy7b", "vote": 1}, {"content": "> for me i don't think i will go so deep into the file handling system that i start to worry about encodings and stuff\n\nI don't think you should. I don't anyone should. I think a good library should be strongly discouraging you from interacting with non-UTF8 paths... but it should go further. A unix path like `\"/home/alice;rm -rf /;\"` is perfectly valid (both as a path and as UTF8), but your library certainly shouldn't let you use it.\n\n> while in os.path it would usually require three nested funcs to get there \n\nIf that was the real issue you could just create a proxy class:\n\n    import os.path\n    from functools import partial\n    def ModuleProxyFactory(module):\n       class Proxy:\n         __module = module\n         def __init__(self, thing):\n            self.thing = thing\n         def __getattr__(self, attr):\n            return partial(getattr(self.__module, attr), self.thing)\n    return Proxy\n\n    OsPath = ModuleProxyFactory(os.path)\n    print(OsPath(\"/home\").join(\"alice\"))", "id": "ii00dhj", "parent": "t1_ihzwy7b", "vote": 1}, {"content": "[deleted]", "id": "ii1n70i", "parent": "t1_ii1ljh3", "vote": 0}, {"content": "[deleted]", "id": "ii10bky", "parent": "t1_ii0wr3s", "vote": 5}, {"content": "`assert 1==2, \"hi\"`  \nthis raises an error and returns \"hi\" as the error message  \n`assert(1==2, \"hi\")`  \nthis evaluates parameter as a tuple (1==2, \"hi\") which resolves to True and thus does not raise an error.", "id": "ii16488", "parent": "t1_ii158ph", "vote": 56}, {"content": "If you use the message argument, putting parentheses around it will treat it as asserting a 2 item tuple (which will always be considered true).  Eg:\n\n    assert x!=0, \"x was zero!\"   # Will trigger if x == 0.\n    assert(x!=0, \"x was zero!\")  # Will never trigger\n\nFortunately, recent versions of python will trigger a warning for cases like this, suggesting removing the parenthesis.  But in the past, you'd just have a silently non-working assert.", "id": "ii17r2e", "parent": "t1_ii158ph", "vote": 15}, {"content": "No idea why you're being downvoted. Your comment appears to be detailed on its face and I don't see any problem with it.\n\nAlso, it's a pet peeve of mine when people downvote a technical explanation like this but don't provide a response. I have to interpret their actions as \"my personal preferences are just different,\" which is a shitty reason to downvote someone's post.", "id": "ii350v8", "parent": "t1_ii19gkn", "vote": 2}, {"content": "     \n    assert(X==Y)\n\n\nis confusing and reader might assume that you are using a function call protocol. If you want to adhere to your reasons, you can simply do\n\n    assert (X==Y)", "id": "ii26dq5", "parent": "t1_ii19gkn", "vote": 0}, {"content": "You are technically correct, but given that `assert(X == Y)` looks like a function call, someone unfamiliar with this gotcha might be tempted to add the message as `assert(X == Y, message)`.\n\nSaying parentheses are allowed as long as they only surround a single assert parameter is correct, but it\u2019s an consistency that begs for somebody to make the wrong assumption. Treating it as a keyword consistently reduces that risk.", "id": "ii5x6sb", "parent": "t1_ii19gkn", "vote": 1}, {"content": "My preferred solution is not to use the library.", "id": "ii1t8ai", "parent": "t1_ii1r9mv", "vote": -4}, {"content": "that's why I prefer text based os.path,\n\nyou can also use linux path on Windows.", "id": "iihj7yk", "parent": "t1_ii1r9mv", "vote": 1}, {"content": "Aren't those slices on `parents` going to return tuples of paths? How can the `__div__` operator accept them? It needs to act on paths not tuples of paths.\n\nMaybe that made some significant changes to how those work, in 3.10.\n\nBut it would seem much easier in my mind to say: `Path` is a list of components. You can insert/delete/modify components at will.", "id": "ii21pqz", "parent": "t1_ii214b9", "vote": 2}, {"content": "One challenge is you should add this functionality to not only the parents, but also to the suffixes and anything else you break the path into.\n\nIf the model of a path is what is reflected in the [diagram here](https://cdn.hashnode.com/res/hashnode/image/upload/v1635494412217/w8PsZFUD-.png?auto=compress,format&format=webp) then we really should have getters and setters for each and every one of those identified components.\n\nI suspect the reality is that they didn't actually set such a clear framework at the outset and that trying to bolt on setters is going to go badly.\n\nBut good luck.", "id": "ii2o0xp", "parent": "t1_ii2lcq6", "vote": 1}, {"content": "Ok so the difference is you actually thought about what you were doing, while the authors of pathlib just threw some shit together at 3am after a night of heavy drinking. \n\nGot it ;)", "id": "ii4i1dv", "parent": "t1_ii4hlks", "vote": 1}, {"content": "> one thing I wanted to do was checking if a path is a subfolder of another path using the in keyword:\n\nIs \"/home/alice/../../etc\" a subfolder of \"/home/alice\"?", "id": "ii17rbc", "parent": "t1_ii16mz2", "vote": 3}, {"content": "Thanks for explaining that makes sense", "id": "ii687za", "parent": "t1_ii1kken", "vote": 1}, {"content": "`Path` represents a *path*, not a FileStore. conflating them is not appropriate", "id": "ii0xgd0", "parent": "t1_ii0r3y9", "vote": 7}, {"content": "Why? It works perfectly fine.", "id": "ii16tcg", "parent": "t1_ii15u9j", "vote": 2}, {"content": "I agree the OS does get to decide the path, and Python has to deal with it. However, I don't have to care. Just like `os.joinpath` is one function that is itself aware of what OS you are on, and thus joins paths properly. Also, on a purely pragmatic matter, outside of \"raw\" strings, backslashes can be such a dumb tripping hazard hah. \n\nI guess I am fine with that abstraction, and you aren't and that is totally cool. I was interested in hearing your opinion, thanks for taking the time to discuss this with me and not get heated or hurtful. I appreciate good intellectual discussions!", "id": "ii19267", "parent": "t1_ii0mik8", "vote": 0}, {"content": "Many things can be done, and a bunch of with_ methods exist. What\u2019s `x.with_parents(y)` other than `y / x` or `y / x.name` or so?\n\n    rel_path = Path('./foo/bar.x')\n    abs_path = Path.home() / 'test'\n    \n    abs_path / rel_path  # ~/test/foo/bar.x\n    abs_path / rel_path.name  # ~/test/bar.x\n    abs_path.parent / rel_path.stem  # ~/bar\n    rel_path.with_stem(abs_path.stem)  # ./foo/test.x\n    abs_path.relative_to(...)\n\nMaybe you haven\u2019t tried actually using it more than a minute?", "id": "ii058ke", "parent": "t1_ii01tsl", "vote": 5}, {"content": "It seems that not only grammerly that notices it , i don't know i think it's just a habbit :D", "id": "ii0o48m", "parent": "t1_ii0m7x8", "vote": 2}, {"content": "After reading fellow programmers opinions , the conclusion for me is that whenever possible and whenever it is less prone to errors i will try to use pathlib cause of it's handy concise utilities , when i am stuck i can then use os.path after all they both eventually there for helping me so no harm in using both two compined , let me know what you think also", "id": "ii0zkum", "parent": "t1_ii0u6b8", "vote": 2}, {"content": "`.joinpath` that's what I do, except I put the `path` before the dot so it says `path.join`\n\nAlso why do all these tutorials what the imports wrong. `import os.path as path`\n\nIf you are going to publish something on the web do some basic editing first.", "id": "ii26zi5", "parent": "t1_ii1n70i", "vote": 1}, {"content": "I use pathlib extensively on a large project and the overloaded division operator has not ever been a problem. It feels like a very theoritical issue to me.", "id": "ii3oz23", "parent": "t1_ii10bky", "vote": 1}, {"content": "Side note that you _can_ use parenthesis with assert, but only before or after the comma, not both.\n\n```\nx = 10\n# valid\nassert x > 5, (\n    f\"otherwise long message about {x}\"\n)\n\n# also valid\nx = 10\nassert (x is None), f\"otherwise long message about {x}\"\n\n```", "id": "ii3lqlu", "parent": "t1_ii16488", "vote": 4}, {"content": "Fair. But realistically why would you want an assert besides in a unit test? Raising an exception is usually more verbose and expressive.", "id": "ii177v1", "parent": "t1_ii16488", "vote": -21}, {"content": "It's the story of the thread.", "id": "ii419ry", "parent": "t1_ii350v8", "vote": 1}, {"content": "That is disgusting you should be ashamed of yourself. It's obviously supposed to be:\n\n    assert ( X == Y )", "id": "ii27cgw", "parent": "t1_ii26dq5", "vote": -1}, {"content": "So like this: `assert 1 < 3 & 4 < 8`", "id": "ii5xy9v", "parent": "t1_ii5x6sb", "vote": 1}, {"content": "Your comment made me wonder about the difference between the standard pathlib.Path(s).with\\_suffix(...) and ubelt.Path(s).augment(ext=...). \n\n&#x200B;\n\nThere are differences in some cases. I'm not sure which one is more sane. \n\n&#x200B;\n\n\\`\\`\\`\n\n\\--  \ncase = Path('no\\_ext')  \nsagree  \npath.with\\_suffix(.EXT) = Path('no\\_ext.EXT')  \npath.augment(ext=.EXT) = Path('no\\_ext.EXT')  \n\\--  \n\\--  \ncase = Path('one.ext')  \nsagree  \npath.with\\_suffix(.EXT) = Path('one.EXT')  \npath.augment(ext=.EXT) = Path('one.EXT')  \n\\--  \n\\--  \ncase = Path('double..dot')  \nsagree  \npath.with\\_suffix(.EXT) = Path('double..EXT')  \npath.augment(ext=.EXT) = Path('double..EXT')  \n\\--  \n\\--  \ncase = Path('two.many.cooks')  \nsagree  \npath.with\\_suffix(.EXT) = Path('two.many.EXT')  \npath.augment(ext=.EXT) = Path('two.many.EXT')  \n\\--  \n\\--  \ncase = Path('path.with.three.dots')  \nsagree  \npath.with\\_suffix(.EXT) = Path('path.with.three.EXT')  \npath.augment(ext=.EXT) = Path('path.with.three.EXT')  \n\\--  \n\\--  \ncase = Path('traildot.')  \ndisagree  \npath.with\\_suffix(.EXT) = Path('traildot..EXT')  \npath.augment(ext=.EXT) = Path('traildot.EXT')  \n\\--  \n\\--  \ncase = Path('doubletraildot..')  \ndisagree  \npath.with\\_suffix(.EXT) = Path('doubletraildot...EXT')  \npath.augment(ext=.EXT) = Path('doubletraildot..EXT')  \n\\--  \n\\--  \ncase = Path('.prefdot')  \nsagree  \npath.with\\_suffix(.EXT) = Path('.prefdot.EXT')  \npath.augment(ext=.EXT) = Path('.prefdot.EXT')  \n\\--  \n\\--  \ncase = Path('..doubleprefdot')  \ndisagree  \npath.with\\_suffix(.EXT) = Path('..EXT')  \npath.augment(ext=.EXT) = Path('..doubleprefdot.EXT')  \n\\--  \n\\`\\`\\`", "id": "iighord", "parent": "t1_ii4i1dv", "vote": 1}, {"content": "That's an implementation detail. You can solve that problem it by resolving the path:\n\n    \n    >>> Path('/home/alice') in Path('/home/alice/../../etc').resolve().parents\n    False", "id": "ii19jg7", "parent": "t1_ii17rbc", "vote": 4}, {"content": "If that is true then we can really simplify pathlib. We can basically remove the entire API, because a PosixPath is just a char* byte array that doesn't contain the NUL byte.\n\nWe don't need anything in pathlib to work with those!", "id": "ii101lk", "parent": "t1_ii0xgd0", "vote": -2}, {"content": "Why what?", "id": "ii17es3", "parent": "t1_ii16tcg", "vote": -1}, {"content": "> What\u2019s `x.with_parents(y)` other than `y / x` or `y / x.name` or so?\n\nSuppose I have a path `/foo/bar/baz/bin.txt` and want to convert to `/foo/RAB/baz/bin.txt` there would be a couple approaches.\n\nOne might be: `p.parents[2] / \"RAB\" / p.parts[-2] / p.parts[-1]` but there is no way I'm getting the forward indexing of `parents` and the backwards indexing of `parts` right, and having to list all the terminal parts because you can't join to a tuple like: `p.parents[2] / \"RAB\" / p.parts[-2:]` is pretty ugly.\n\nA more straighforward approach would be:\n\n    _ = list(p.parts)\n    _[-3] = \"RAB\"\n    Path(*_)\n\nBut at this point I'm just working around pathlib, I'm not working with it. I'm treating the path as a list of string components, and its not really any different from how one would do the same with `os.path`", "id": "ii08cp6", "parent": "t1_ii058ke", "vote": 2}, {"content": "Totally agree, `pathlib` is more useful and easier to understand when you just want to list files for later use:\n\n    from pathlib import Path\n    BASE_DIR = Path(__file__).resolve().parent\n    OTHER_FILES = (BASE_DIR / \"random folder\").glob(\"*.txt\")\n    \n    from os.path import join as pathjoin, dirname, abspath\n    from glob import iglob\n    BASE_DIR = dirname(abspath(__file__))\n    OTHER_FILES = iglob(pathjoin(BASE_DIR, \"random folder\", \"*txt\"))\n\nBut to `rename`, `remove`, `chmod` and others I'd much rather use `os` directly (I find it easier to understand at a glance what is happening with `remove(path)` instead of `path.remove()`).\n\nTo read files I prefer `with open(path, 'rb') as fileobj` syntax, but that's probably because I learned it before `path.read_text()` and `path.read_bytes()`.", "id": "ii4sgw4", "parent": "t1_ii0zkum", "vote": 1}, {"content": "[deleted]", "id": "ii4sv9z", "parent": "t1_ii3oz23", "vote": 1}, {"content": "Yeah, I was talking about making it look like a function call. Your examples are obviously different.", "id": "ii5wet6", "parent": "t1_ii3lqlu", "vote": 1}, {"content": "subjective", "id": "ii17wuu", "parent": "t1_ii177v1", "vote": 14}, {"content": "Realistically, \"it's not a function call\" should suffice.  Do an \"import this\" and refresh your Zen of Python, specifically \"readability counts\".", "id": "ii1wc7r", "parent": "t1_ii177v1", "vote": 11}, {"content": "Why do you think this wouldn\u2019t be problematic in a unit test?", "id": "ii5wjuo", "parent": "t1_ii177v1", "vote": 1}, {"content": "No, you are failing PEP8 here:\n\n    Avoid extraneous whitespace in the following situations:\n\n    Immediately inside parentheses, brackets or braces:\n\n    # Correct:\n    spam(ham[1], {eggs: 2})\n\n    # Wrong:\n    spam( ham[ 1 ], { eggs: 2 } )", "id": "ii29cdm", "parent": "t1_ii27cgw", "vote": 0}, {"content": "As long as you are aware you need to fully resolve the path. From the initial comment it looked like you thought this kind of test was sufficient in and of itself.", "id": "ii1a4yt", "parent": "t1_ii19jg7", "vote": 3}, {"content": "f\ud83d\ude44 a \"FileStore\" implies a datastore implemented *on top* of a filesystem. If you have a `FileStore` and a `MemStore` and a `DbStore`, I spect them to be implementations of your app-specific `Store`. pathlib is meant as a cross-platform abstraction of filesystems themselves. Whether you appreciate this goal isn't the point.\n\nMore importantly, `PurePath`s (in `pathlib` terminology) don't even represent any realized part of the filesystem. Calling it any kind of \"store\" is boldly wrong", "id": "ii13wgp", "parent": "t1_ii101lk", "vote": 3}, {"content": "The advice you gave...?", "id": "ii17l4z", "parent": "t1_ii17es3", "vote": 2}, {"content": "If you frame the problem as something other than \"I want to randomly replace a path component\", I think you can find a solution that makes some sense.\n\n    import pathlib\n\n    new_container_name = 'RAB'\n    some_path = pathlib.PurePosixPath('/foo/bar/baz/bin.txt')\n    current_container = some_path.parents[1]  # /foo/bar - you want to \"move\" the path in this dir\n    base = current_container.parent  # /foo - this is the common root between start and finish paths\n\n    print(base / new_container_name / some_path.relative_to(current_container))\n\nEdit: or, if you have pre-knowledge of the base path `/foo` and want to move any arbitrary file into the `RAB` subdirectory, for example, you could do something like this:\n\n    base = pathlib.PurePosixPath('/foo')\n    new_container_name = pathlib.PurePosixPath('RAB')\n    some_path = pathlib.PurePosixPath('/foo/bar/baz/bin.txt')\n\n    old_container = some_path.relative_to(base).parents[-2]  # bar/ - top level dir (-1 is .)\n    print(base / new_container_name / some_path.relative_to(base / old_container))", "id": "ii1wpbk", "parent": "t1_ii08cp6", "vote": 3}, {"content": "If `list` or `tuple` had this API (which I still don\u2019t understand, is it just \u201creplace a slice\u201d?), you could just do `p = Path(*p.parts.replace(2, 'RAB'))`.\n\nBut I don\u2019t see you complaining about `list` or `tuple` even though them getting a new API would be much more general purpose, since it\u2019d not only cover your use case but also a lot of others.", "id": "ii3m2h9", "parent": "t1_ii08cp6", "vote": 1}, {"content": "To me the meaning was immediately obvious when taking a first glance at code using pathlib since it looks like a path. I am not a Windows user though.\n\nEdit: i don't think + is a very idiomatic way of doing string manipulation in python so I don't have an automatism of reaching for + anyways.", "id": "ii5dwtv", "parent": "t1_ii4sv9z", "vote": 1}, {"content": "I\u2019m with ya!\nI only mentioned it because I know https://peps.python.org/pep-0679/ exists. \nAnd there was also a [recent-ish change in 3.10 ](https://docs.python.org/3.10/whatsnew/3.10.html#parenthesized-context-managers)with context statements to allow parentheses, which honestly has been great with multiple things being patched in unit tests.", "id": "ii8jqrc", "parent": "t1_ii5wet6", "vote": 1}, {"content": "What I mean is that asserts in tests are common place whereas in library code they are very rare, usually replaced by more explicit checks and error messages. Not sure why I'm being down voted...", "id": "ii6ymxy", "parent": "t1_ii5wjuo", "vote": 1}, {"content": "I don't follow PEP8, I just pass my good through `black` before I commit it.\n\nBut you do realize it makes no difference to the parser right? You can have as many or as few spaces after the function name and before the parenthesis or arguments.\n\nYou are arguing about stuff that doesn't matter.", "id": "ii2bkfo", "parent": "t1_ii29cdm", "vote": 0}, {"content": "It\u2019s a good warning actually. Missing resolve calls is really annoying. \n\nI had a script that made some insane relative paths and worked, sometimes, for a while, until I found the bug.", "id": "ii1spa4", "parent": "t1_ii1a4yt", "vote": 3}, {"content": "Then s/FileStore/HierarchicalFileSystem/ in my comment above.\n\nPaths are lookup keys into an OS managed hierarchical data structure. And `getitem` is how we do key based lookups in python.", "id": "ii15e8e", "parent": "t1_ii13wgp", "vote": 1}, {"content": "What advice? I've given lots of advice.", "id": "ii18348", "parent": "t1_ii17l4z", "vote": 0}, {"content": "You certainly can do stuff like this. I just see it as more complicated.\n\nAmong the various things you would need recipes for:\n\n* replace a path component at an arbitrary position\n* Insert a path component...\n* Remove a path component...\n* Apply a string substitution to a path component\n* Parse a path component as a date and replace it with three components for year/month/day\n\nAnd so on...\n\nIt seems a lot easier to say: it's just a list of components, and you know how to manipulate lists, so just do that. The library can then reassemble the results into a path.", "id": "ii4ayhf", "parent": "t1_ii1wpbk", "vote": 1}, {"content": "`list` has standard modification functions: `del, insert, =`. It doesn't need anything new.\n\n`tuple` is immutable and can't have this API.\n\nPathLib exposes `parts/suffixes/etc` using property methods that return immutable tuples. That makes it impossible to use these properties for anything but access.", "id": "ii416zc", "parent": "t1_ii3m2h9", "vote": 1}, {"content": ">I don't follow PEP8, I just pass my good through `black` before I commit it.\n\nBlack follows PEP8...\n\n>But you do realize it makes no difference to the parser right? You can have as many or as few spaces after the function name and before the parenthesis or arguments.\n\nCan't tell if sarcasm or blissfully unaware of your original comment... I feel like it must be sarcasm, and my detector is a bit off", "id": "ii2fhov", "parent": "t1_ii2bkfo", "vote": 3}, {"content": "Of course. Code styles and best practices are mostly for readers/developers. Not for parsers", "id": "ii2ge28", "parent": "t1_ii2bkfo", "vote": 1}, {"content": "Operations *with* `Path` *sometime* perform lookups into a filesystem. A `Path` itself is not that data structure, it's the key. You're not doing \"lookups\" you're constructing a path. and it is not common (at least in the stdlib) to use `__getitem__` to implement a builder pattern.", "id": "ii16vy6", "parent": "t1_ii15e8e", "vote": 3}, {"content": "Is it that hard to read your previous comment and search out the single advice you gave there I *could* have asked about?", "id": "ii1d84y", "parent": "t1_ii18348", "vote": 3}, {"content": "No builtin type has the exact API you\u2019re asking about, i.e. functional (as opposed to imperative) replacement. If they had it could be used here as I demonstrated above with my code example `p = Path(*p.parts.replace(2, 'RAB'))`.\n\nIndeed your 3-line code example  involving `_[-3] = \"RAB\"` is \u201cworking around pathlib\u201d exactly as much as it\u2019s \u201cworking around list\u201d. About your other examples:\n\n* `x.with_parts(y)` is just `Path(y)` (if you replace everything, the original is not involved)\n* `x.with_parents(y)` is just `y / x.name` or whatever you think its semantics should be.\n* You do have a (minor) point as there\u2019s no `with_suffixes`, which is indeed a (small) wart. You have to do `x.with_name(x.stem + 'tar.gz')`, which is still quite straightforward.\n\nBut all the other things you think are missing are really exactly as present or missing as they are for list or tuple.", "id": "ii4ifi9", "parent": "t1_ii416zc", "vote": 1}, {"content": "I can't tell if PiaFraus is being serious about the space after `assert` or if he just doesn't understand the language.\n\nIf there is a serious risk of a bug here, then it exists whether or not you put that space in there.\n\nIt's the most batshit crazy suggestion that \"it's okay if you add a space\".", "id": "ii2h1rx", "parent": "t1_ii2fhov", "vote": 1}, {"content": "When you use SQLAlchemy it doesn't immediately execute the associated SQL statement.\n\nI don't have any issues with libraries that build deferred data for potential future operations (that may or may not succeed). That is ultimately what PathLib does.", "id": "ii1d22y", "parent": "t1_ii16vy6", "vote": 1}, {"content": "Is it that hard to answer the question I directly asked you and tell me what \"the problem of using a +\" was?", "id": "ii1f625", "parent": "t1_ii1d84y", "vote": 1}, {"content": "> `x.with_parts(y)` is just `Path(y)`\n\nWhich is why I never suggested it.\n\n> `x.with_parents(y)` is just `y / x.name`\n\nNot entirely, you might want to preserve the `name` and last two folders, so `with_parents` would also need some kind of level argument so that it could know where to split `x` and splice in the new parent. Something more like `x.with_parents(x.parents[-2] / \"backup\", level=2)` might be desirable.\n\nThat said I don't think it is the best API and would prefer simply exposing the parts of the path in a way that makes them directly modifiable. `x.parts.insert(-2, \"backup\")` seems more direct and the intent is clearer.\n\nThat would make the path object mutable which is the big trade-off.", "id": "ii4k0m9", "parent": "t1_ii4ifi9", "vote": 1}, {"content": "I agree, and I am not sure if they meant it was better for readability or would actually change the behaviour (I would like to assume that's not what they meant, though). But I was referring to your original comment:\n\n>That is disgusting you should be ashamed of yourself. It's obviously supposed to be:\n>\n>assert\u00a0(\u00a0X\u00a0==\u00a0Y\u00a0)\n\nAnd then your other comment:\n\n> But you do realize it makes no difference to the parser right? You can have as many or as few spaces after the function name and before the parenthesis or arguments.\n>\n> You are arguing about stuff that doesn't matter.\n\nWhich is the very thing you did in a previous comment, hence why I assumed you were being sarcastic.", "id": "ii2ji40", "parent": "t1_ii2h1rx", "vote": 1}, {"content": "1. sqlalchemy uses method calls to build queries, not `__getitem__`, so not exactly sure what you're trying to prove here.\n2. building a path is not a \"deferred operation\" (unless you are referring to `__str__`). A path does not necessarily represent *any* filesystem operation.\n\nOverloading `__getitem__` here is *more* confusing than the current usage of `__div__` because it implies every time you're building a path object you're really performing some (deferred?) fs operation. Where as currently there is a clean separation between `PurePath` and `Path`. Not exactly sure why you think this is an improvement", "id": "ii1fbmb", "parent": "t1_ii1d22y", "vote": 3}, {"content": ">`x.with_parents(x.parents[-2] / \"backup\", level=2)`\n\nYou mean like this?\n\n    Path(x.parents[-2], 'backup', *x.parts[-2:])\n\nI also agree with this comment: [https://www.reddit.com/r/Python/comments/wab01n/comment/ii1wpbk/](https://www.reddit.com/r/Python/comments/wab01n/comment/ii1wpbk/)\n\nIf I did a code review, I\u2019d prefer to see you define variables with speaking names, similar to this (assuming your actual use case is multiple files using loops otherwise the amount of variables is overkill)\n\n    orig_root = x.parents[-2]\n    backup_root = x.parents[-2] / 'backup'\n    rel_path = x.relative_to(orig_root)\n    backup_path = backup_root / rel_path", "id": "ii4nnrr", "parent": "t1_ii4k0m9", "vote": 1}, {"content": "I was being sarcastic.\n\nAs I said I don't think about PEP8 it spacing. I write the code and let black figure out the formatting.\n\nIf you are thinking about which of the two is more readable, you are wasting your time.\n\n----\n\nBesides readability to the programmer isn't the relevant issue here. The issue is readability to the parser, and it don't care.", "id": "ii2ka7w", "parent": "t1_ii2ji40", "vote": 1}, {"content": "All path building is a deferred operation, unless you ultimately end up just discarding the path entirely.\n\nWhile possible that isn't really interesting.", "id": "ii2373m", "parent": "t1_ii1fbmb", "vote": 0}, {"content": "`Path(x.parents[-2], 'backup', *x.parts[-2:])` does work, but so too would: `os.path.join(x.parents[-2], 'backup', *x.parts[-2:])`. To me this isn't really an OOP approach.\n\n`x.parents[-2] / 'backup' / x.parts[-2:]` doesn't work because you can't divide a path with a tuple.", "id": "ii4prz5", "parent": "t1_ii4nnrr", "vote": 1}, {"content": "seems like you enjoy missing the point", "id": "ii3nygz", "parent": "t1_ii2373m", "vote": 2}, {"content": "`x.parents[-2] / 'backup' / Path(*x.parts[-2:])` works, but sure, file an issue for a nicer way to do `Path(*x.parts[-2:])`, maybe `p.tails[1]`? Or `p.relative_to(parent=2)` or so?\n\nThe lack of `with_suffixes` and this one still doesn\u2019t make the whole module \u201cterrible\u201d is my point, and I don\u2018t quite understand how you get from \u201csome use cases are slightly more cumbersome and closer to `os.path` than others\u201d to \u201cit\u2019s terrible and I rather use `os.path` despite it being always more cumbersome and not only in the two cherry picked use cases where it\u2019s equally as cumbersome\u201d", "id": "ii4rmwb", "parent": "t1_ii4prz5", "vote": 1}, {"content": "That its terrible is my opinion. If you don't agree with it that is yours.\n\nAnd I have made very clear that I don't really want `os.path`. I want something substantially better and safer than both libraries.", "id": "ii4skxb", "parent": "t1_ii4rmwb", "vote": 1}, {"content": "You might get all three features into pathlib if you file issues.\n\nValidation for sure, `with_suffixes` and `tails` maybe.\n\nIf that\u2019s enough to make something terrible, I doubt you\u2019re happy with more than like 3 libraries in existence. Sometimes corner cases aren\u2019t handled and you have to write very slightly more cumbersome code or file issues/PRs. That\u2019s life.\n\nI\u2019ve implemented and contributed countless solutions to nitpicks I saw in their upstream projects. It\u2019s work, but if you care, do something about it.", "id": "ii4xhhx", "parent": "t1_ii4skxb", "vote": 1}], "link": "https://www.reddit.com/r/Python/comments/wab01n/pathlib_is_cool/", "question": {"context": "Just learned pathilb and i think i will never use os.path again .\nWhat are your thoughts about it !?", "id": "wab01n", "title": "Pathlib is cool"}, "resource": "Reddit"}, {"answers": [{"content": "In the segment called _Pass It In_ in _To Provide Convenient Access to An Instance_, that technique is sometimes referred to __Dependency Injection__. Although I've mainly heard it used in the context of making objects that can be Unit Tested.\n\nOtherwise, great resource. Please do post the chapters as you write more.", "id": "c0dgnd6", "parent": "t3_9n1j7", "vote": 7}, {"content": "Singletons used copiously are evil, but the concept itself is not.  Since globals are *more* evil, then a singleton is a way to organize them into a single point of contact.\n\nIf you can avoid them, then do so.  Similar to the post, I usually have the top-level application instance accessible from child objects by getApplication() or something like that.  If you can't do this for some reason, (like you were not available when they broke the design), a singleton for that would be ok.  But it should be *only* one.", "id": "c0dh4gd", "parent": "t3_9n1j7", "vote": 4}, {"content": "Great article. Looks like a site to keep an eye on!", "id": "c0dgum2", "parent": "t3_9n1j7", "vote": 8}, {"content": "It's funny to see this article pop up.  We've been having an internal debate for about a year now at my studio on whether or not to use Singletons and whether the cons out weigh the benefits.  \n\nLast it came up I think the decision was to abandon singletons.", "id": "c0dh0pd", "parent": "t3_9n1j7", "vote": 3}, {"content": "tl;dr - singleton is a global variable, don't use it unless you enjoy regret.", "id": "c0dglq9", "parent": "t3_9n1j7", "vote": 19}, {"content": "I thought this was a really interesting and enjoyable article. I've known and loved my own share of BulletManagers.\n\nI fear, however, that none of the code samples in the article are thread safe: in a concurrent environment, none of the code samples actually guarantee a single instance.\n\nWhich might just prove one of the author's points: that singletons lead to hard-to-fix concurrency bugs.", "id": "c0dh9vr", "parent": "t3_9n1j7", "vote": 3}, {"content": "I just recently learned about the \"struct with static members\" trick, and I think it's pretty awesome. \n\nI'm making a raytracer, and these are my singletons:\n\n* Keyboard: you only have one keyboard, and other files can only read from it. (well, it's not enforced)  \n* Mouse: one mouse, etc.  \n* Scene: Contains the Surface on which to draw, a list of objects to loop over, a list of lights, the camera position, methods to add objects and a Render method.  \n* Settings: Options like backface culling, simd on or off, lighting on or off. Basically post-processor #define's.  \n\nOverall, I like singletons. But I do see how they could fuck up your entire project if it gets out of control.", "id": "c0dgulj", "parent": "t3_9n1j7", "vote": 2}, {"content": "I'm still unclear about this. The  bullet counter-example seems fairly weak. The Bullet Manager class obviously isn't meant to handle functions for a specific bullet but for the list of bullets. All the physics engine I've seen so far have a CollisionShapeFactory, PhysicsBodyFactory and a PhysicsSimulator that maintains the global states for all the physics objects. Is that the same, better or worse than singletons?\n\nAFAIK, the current thought is just not to abuse them rather than find a way to safeguard against abuse. I think there's a limit on how much you can do against bad programming. In the end, the guy might still end up passing the ex-Singleton class to every other class which will yield equally bad scenarios.", "id": "c0dh29m", "parent": "t3_9n1j7", "vote": 2}, {"content": "IMX singletons generally don't need to be classes at all. It just complicates things to make a .getInstance() call to get at what is effectively static functionality.\n\nThe argument about subclassing is also entirely bogus. That is what compiler settings are for. Unless you have some compelling reason that you want to change, say, your render backend *at runtime*?\n\nAnyway, I think the following is the real acid test, anyway: would anyone who actually understood OOP but hadn't been exposed to the Singleton pattern, ever come up with it independently? (OK, apparently the GOF would... but I still don't know how that happened.)", "id": "c0dhewd", "parent": "t3_9n1j7", "vote": 2}, {"content": "Don't mean to be an ass but your IFileSystem example with platform specific types are a terrible example of when to use sub-type polymorphism and late binding.\n\nThere is absolutely no reason to use it here for something that is known at build/compile-time and will never change at runtime. There are better solutions to deal with this problem.\n\nI work in the industry and where I work if you used OO all over the place for this kind of thing you would probably get a good thrashing, i.e. interfaces with sub-types for various platforms (one for each console and PC).\n", "id": "c0dhj41", "parent": "t3_9n1j7", "vote": 2}, {"content": "I prefer articles with hard evidence, because my mindset is basically \"weigh your options against the desired outcome and choose the best one\".  In other words, I'd be more willing to accept the idea that Singletons should be avoided at all cost if I could see actual data about the success of systems that use Singletons vs systems that don't.\n\n\nI'm agnostic about the this debate, but IMO some of these articles some more ideological than anything else.\n\n\nTo put it into perspective, imagine this article were by a functional programmer telling people that variables are bad.", "id": "c0dhmnc", "parent": "t3_9n1j7", "vote": 2}, {"content": "I usually do:\n\n    class Foo()\n    {\n      ...\n      public static Foo CurrentContext\n      {\n          ...\n      }\n    }\n\nThis way I can create new instances of the class if I need to later (being aware of context), and still use CurrentContext as the singleton.   Also, If you need to abstract it away at later time from a singleton, can refactor CurrentContext to a ContextList.  I use the name CurrentContext to drive home the fact that there may be multiple contexts and perhaps a singleton pattern is not needed.\n\nBut yes, usually it's bad to have them since they are nothing more than global variables.   If you can design away from it, you should.\n", "id": "c0dhul1", "parent": "t3_9n1j7", "vote": 2}, {"content": "Good article. You may also want to mention that you can't reliably pass parameters to the constructor of a singleton through a GetInstance() function. Your app is stuck with defaults. Not only that but your singleton invariably will require the use of other singletons since its dependencies cannot be passed it. ", "id": "c0dgzik", "parent": "t3_9n1j7", "vote": 2}, {"content": "Very nicely done. I had not thought about all the baggage singletons bring - this still won't make me abandon them (I don't make games and lazy loading works fine for me) but it will make me more circumspect.\n\nThanks", "id": "c0dgndo", "parent": "t3_9n1j7", "vote": 2}, {"content": "So what do the other 50% - 1 chapters show?", "id": "c0dgl9s", "parent": "t3_9n1j7", "vote": 1}, {"content": "[deleted]", "id": "c0dhm0v", "parent": "t3_9n1j7", "vote": 1}, {"content": "I find the singleton pattern is great for thing which are physically single resources (like a logger, or a keyboard event, etc.). In the case of a logger, its beautiful because its a write-only resource and any concurrency issues can be taken care of in one place. ", "id": "c0dgoyj", "parent": "t3_9n1j7", "vote": 1}, {"content": "Ah, the Singleton, because Java is broken. Why can't every language be more like Python?\n\n// Fire extinguisher ready", "id": "c0dj18x", "parent": "t3_9n1j7", "vote": 0}, {"content": "> that technique is sometimes referred to Dependency Injection. \n\nCheck the sidebar on the \"Get It From The Base Class\" section. :)", "id": "c0dgpaj", "parent": "t1_c0dgnd6", "vote": 3}, {"content": "> ...a singleton for that would be ok. But it should be only one.\n\nhence the **SingleSingleton** pattern.\n\nA Singleton that guarantees there are no other Singletons in the system.", "id": "c0dhsda", "parent": "t1_c0dh4gd", "vote": 4}, {"content": "I wholeheartedly agree.", "id": "c0dh07s", "parent": "t1_c0dgum2", "vote": 4}, {"content": "There's one significant difference between a singleton and a global variable: singletons give you some measure of control over when the object is constructed, whereas global variables are constructed in an unspecified order before main(). (You also have some level of control over *how* the object is constructed, if you wanted to use placement new for example.)\n\nConsider the following situation:\n\n    class A {\n        int var;\n        int foo() {\n            return var;\n        }\n        A() {\n            var = 0;\n        }\n    };\n    A global_a;\n\n    class B {\n        int var;\n        B() {\n            var = global_a.foo();\n        }\n     };\n     B global_b;\n\nWhen this program is run the value of B.var is indeterminate because there's no way of knowing if global\\_a or global\\_b is initialized first. If you were using a singleton pattern you could have the A singleton constructed in the a.getInstance() method, guaranteeing correct behavior regardless of initialization order.\n\nTo give an example of when this is useful, in the 3D engine I'm working on I have a drop-in debug memory manager which replaces malloc/new and all variants, and is implemented with a singleton class. I also have a logging class which is a singleton and allocates some memory on its construction. If I were using globals for both it's possible the log object could be constructed first and attempt to allocate memory from the non-initialized memory manager, which would surely cause a segfault.\n", "id": "c0dhktc", "parent": "t1_c0dglq9", "vote": 3}, {"content": "Sigh, yet another cargo-cult programmer with taboos he doesn't actually understand.\r\n\r\nIf people were willing to actually read articles like this they would be able to use globals in a safe and reliable fashion instead of pretending they are needed and then fucking them up when it turns out they were wrong.", "id": "c0dgsws", "parent": "t1_c0dglq9", "vote": 9}, {"content": "* No code should know if an object is a singleton or not\n\n* Singletons should be accessed by some form of instance method (essentially a factory)\n\n* Singletons should be stateless", "id": "c0dighg", "parent": "t1_c0dglq9", "vote": 2}, {"content": "Oh, there are rare cases where you might need such a thing.\n\nI've never really encountered one, though.", "id": "c0dgxhd", "parent": "t1_c0dglq9", "vote": 1}, {"content": "I love singletons for building and caching shared read only hashtables.", "id": "c0dhbpr", "parent": "t1_c0dglq9", "vote": 1}, {"content": "> Keyboard, Mouse\n\nIt's very dangerous making those Singletons. You want close control over which parts of your codebase are directly affected by user input and which aren't. As soon as you make those Singletons, any class can touch them and get tainted by what is essentially a really weird non-deterministic source of random numbers.\n\n> Scene\n\nThat's great until you want to render to a texture, or do multi-pass rendering. For example, Madden has a Jumbotron in the stadium. The picture on that is rendered from a different camera. Or consider the rearview mirror in a racing game.\n\n> Settings\n\nThis could be relatively innocuous.", "id": "c0dh2ax", "parent": "t1_c0dgulj", "vote": 10}, {"content": "> Keyboard: you only have one keyboard,\n\nWell, no. It's not even unusual to have more than one keyboard, if you connect an external keyboard to a laptop.\n\n> Mouse: one mouse, etc.\n\nA 3D artist would most likely have a tablet and a mouse at the same time.\n\n> Scene\n\nNo real reason to make this a singleton. That's just limiting yourself unnecessarily, and making your design uglier.\n\n> Settings\n\nSettings are things you want to be able to swap in and out, why would you want to make them a singleton?\n", "id": "c0dh01k", "parent": "t1_c0dgulj", "vote": 7}, {"content": "Dunno if singletons are strictly needed in what you described. Have you considered having your scene have a reference to a settings instance? Seems like you'd want to keep user input separate from rendering too...you could have your main application pass keyboard/mouse events to control logic that manipulates the scene. ", "id": "c0dgz76", "parent": "t1_c0dgulj", "vote": 2}, {"content": "> Keyboard\n\nMany laptop users use an external one, or additional (for games)\n\n> Mouse\n\nLaptop touchpad + blue tooth mouse + wacom tablet\n\n> Scene...camera\n\nWhat about the ability to use a dual head video card or multiple cards to use 2 cameras for 3D viewing?\n\n> Settings\n\nYou aren't suggesting a mutable singleton are you? ;-)", "id": "c0digx3", "parent": "t1_c0dgulj", "vote": 2}, {"content": "post-processor #define??", "id": "c0dhfn8", "parent": "t1_c0dgulj", "vote": 1}, {"content": "> The bullet counter-example seems fairly weak.\n\nI thought so too. Two days after I wrote that, I reviewed some code at work that was essentially identical to it. :( If you know your OOP, you won't do stuff like that, but I see more useless manager classes than I'd like to admit.\n\n> All the physics engine I've seen so far have a CollisionShapeFactory, PhysicsBodyFactory\n\nFactories are perfectly fine. Construction is one of the few things an object *can't* do for itself because, by definition, it happens before there is an object to speak of.\n\n> a PhysicsSimulator that maintains the global states for all the physics objects.\n\nIt's perfectly fine to have a simulator object that represents the physical world (with, I'm guessing, stuff like the octree to quickly find colliding objects, etc.) It's likely that a game will only need one instance of it. However, that doesn't mean it needs to be a Singleton. If you had multiple instances of your PhysicsSimulator, each with their own set of physics objects, they'd both work fine, right? In that case, there's no reason for the PhysicsSimulator class to prevent multiple instantiation.\n\n> In the end, the guy might still end up passing the ex-Singleton class to every other class which will yield equally bad scenarios.\n\nAgreed. Passing it around everywhere is a chore. For your physics example, I'd probably make the base PhysicsObject class have a static reference to the PhysicsSimulator instance that they all use. That way, every physics object can get to it easily, but nothing *outside of physics* can.", "id": "c0dh3xt", "parent": "t1_c0dh29m", "vote": 3}, {"content": "> Unless you have some compelling reason that you want to change, say, your render backend at runtime?\n\nSeveral games I've worked on let you switch back and forth between normal rendering and wireframe so that you can see what the skeletons are doing and debug animation issues.\n\nIt's also nice to be able to drop into a lower-quality but faster renderer to keep your framerate up in a debug build.", "id": "c0dhvxg", "parent": "t1_c0dhewd", "vote": 1}, {"content": "So what do you use where you work? Pimpl?", "id": "c0dhkll", "parent": "t1_c0dhj41", "vote": 2}, {"content": "While unrelated to the OP code, there are cases where it's damn useful to be able to swap out file system implementations without rebuilding everything. Especially when there are cases to not use a *real* filesystem.", "id": "c0die9v", "parent": "t1_c0dhj41", "vote": 2}, {"content": "Where I work, we usually use preprocessor tricks to conditionally compile in platform-specific code. It's rare to see an abstract interface like I have in the chapter used for this.\n\nWhile, at one level, I agree that you don't *need* to use subclassing for this (since you'll only ever use one subclass in any given executable), the cost for doing so is quite small: a single V-table lookup for any given method call.\n\nThe benefits are larger than would seem at first. The code I see that uses conditional compilation to implement platform-specific behavior always fails to restrict that abstract to a single implementation file. Instead, there will be `#if PLATFORM == FOO` bleeding all over the codebase. Testing and reasoning about the code gets harder because you aren't always sure what any given platform's code will look like. People only testing on a single platform frequently break the build for other platforms. It's a headache. For code that isn't *very* performance critical, I'd rather take the hit of an abstract class and get the maintainability in return.", "id": "c0dhnj7", "parent": "t1_c0dhj41", "vote": 1}, {"content": "I tend to agree.\n\nI'd argue for, let's use singletons when appropriate and avoid them when it's not.", "id": "c0dig6c", "parent": "t1_c0dhmnc", "vote": 1}, {"content": "Well I personally have never seen a singleton class that could not have been done without with a slightly different design.  I have seen a lot of code crippled because a singelton made a seeming minor design change require major rework.  YMMV, but mot experienced programmars consider the singleton a code smell. ", "id": "c0dhuwe", "parent": "t1_c0dhmnc", "vote": 1}, {"content": "> You may also want to mention that you can't reliably pass parameters to the constructor of a singleton through a GetInstance() function.\n\nThat's a good point. One nice thing about lazy initialized singletons is that they can acquire any initial data on their own. But you're right that the places they're able to get data from usually end up having to be Singletons themselves.\n\nI'll make a note of this and try to incorporate it into a revision.", "id": "c0dh25q", "parent": "t1_c0dgzik", "vote": 3}, {"content": "> I don't make games and lazy loading works fine for me\n\nI use static classes in C# (which is essentially the same thing) and lazy loading is fine there. It's really the heap restrictions that kill it for games. If you've got a garbage collector, it's much less of a problem.", "id": "c0dgpfe", "parent": "t1_c0dgndo", "vote": 2}, {"content": "Well the one other chapter (aside from the intro) that's *written* so far shows how to use object pools. The other chapters will show other patterns. :) Writing a book is time-consuming. I'm putting chapters online one at a time. The feedback encourages me to keep going.", "id": "c0dgmgq", "parent": "t1_c0dgl9s", "vote": 8}, {"content": "> make sure my responsibility to make sure there is only one of me is met.\n\nIf the class's responsibility is to make sure there is exactly one and always one instance, you're right, the assert isn't the way to do that. If the responsbility is just to ensure that there is *no more than one*, then the assert() guarantees that while making the class more flexible about when and where that single instance is constructed.\n\n> And this is, apparently, an improvement?\n\nIt's a trade-off. Ensuring single-instantation at compile time is better than at runtime, but letting outside code control where that single instance lives may be better than having the class itself provide it to everyone that wants it.", "id": "c0dhnoc", "parent": "t1_c0dhm0v", "vote": 1}, {"content": "> I find the singleton pattern is great for thing which are physically single resources (like a logger, or a keyboard event, etc.)\n\nThat's the Gang of Four's rationale too: if it represents a physical device, it makes sense to be a Singleton. Unfortunately, few physical devices really *are* singular. What happens when you have two keyboards plugged in? (After all, game consoles have multiple controllers.)", "id": "c0dgpd7", "parent": "t1_c0dgoyj", "vote": 6}, {"content": "For this kind of use I would like to have something like the \"special\" variables in Lisp. They are like global variables but with dynamic binding, so you can bind them in a let and everything in the call stack under the bind use that value. They are also thread-friendly because in a multithreaded environment they are (should be?) in thread-local storage.", "id": "c0dhj48", "parent": "t1_c0dgoyj", "vote": 2}, {"content": "When I'm testing a piece pf code I don't want to wait for the log files to get written. A logger is a great example of a bad use of singletons.", "id": "c0dhcr1", "parent": "t1_c0dgoyj", "vote": 2}, {"content": "Neat.\n\nHey, while we're talking about that side bar...\n\n> This begs the question, \"how does Entity get the log instance?\"\n\nI'd like to raise the question, \"what's the definition of the phrase 'begs the question'?\" ;P", "id": "c0dgr9i", "parent": "t1_c0dgpaj", "vote": 2}, {"content": "Thanks!", "id": "c0dh1ye", "parent": "t1_c0dh07s", "vote": 3}, {"content": "Everything you say is true only for languages with value semantics and even then only for global variables with value semantics. You can easily have a pointer (smart or raw) that defaults to null and is initialized manually.\n\nIn fact, I'd say that the usual way you see people implement initialization for singletons, you sometimes have even less control over when the object is constructed than you do with a global variable with value semantics. At least in that case (which you should avoid at all costs for anything with implicit or explicit external dependencies and side effects) you know it happens before control enters main(). With a lazily initialized singleton, it can happen in all kinds of weird ways, depending on the control path taken by a specific program run. If there are implicit initialization order dependencies not demonstrated by the usual control paths, you can easily have latent bugs.", "id": "c0dhmak", "parent": "t1_c0dhktc", "vote": 4}, {"content": "> If you were using a singleton pattern you could have the A singleton constructed in the a.getInstance() method, guaranteeing correct behavior regardless of initialization order.\n\nThis is an excellent point. It's one of the key reasons the Gang of Four says Singletons can be better than globals or statics. It's nice seeing a concrete example of this coming into play.", "id": "c0dhnev", "parent": "t1_c0dhktc", "vote": 1}, {"content": "I haven't had to touch C++ for quite a few months (thank\ndeterminism!), so I might be rusty and missing something, but I think\nthe problem and the solution in your example are essentially the same as\ndiscussed here:\nhttp://www.parashift.com/c++-faq-lite/ctors.html#faq-10.13\n\nThe solution works for classes that can exist until the program exits,\nbut it will cause problems as soon as you start loading and unloading\ncode dynamically (e.g. turn something into a plugin or an overlay).\n", "id": "c0dhv2p", "parent": "t1_c0dhktc", "vote": 1}, {"content": "Actually, his comment is a pretty good summary of the chapter. Singletons have almost every fault that global variables have.", "id": "c0dgw54", "parent": "t1_c0dgsws", "vote": 17}, {"content": "Immediately after the GoF book came out, I started seeing patterns everywhere (a lot of other people did, too). Of course, the easiest pattern to see was the Singleton. After committing myself to TDD at a startup almost 10yrs ago, the problem I had with Singletons was I didn't see an easy way to unit test them, especially when they were well-designed abstractions of some underlying implementation (like a dao cache, e.g.). FF to now, in my reformed state, if I think a Singleton might be appropriate in some situation, I first consider  alternatives that might be more appropriate. Almost every time, the alternative has won.", "id": "c0dibut", "parent": "t1_c0dgsws", "vote": 2}, {"content": "Ever use a member variable in a class? From the perspective of a method in the same class, that's a global. This is especially true once concurrency is mixed in.\r\n\r\nAnother example would be the Session and Cache variables in ASP.NET programming. Each represents data that is global to a user or all users, but both can be vital.", "id": "c0dgy1w", "parent": "t1_c0dgxhd", "vote": 2}, {"content": "how do you reload them? restart the app?", "id": "c0digk5", "parent": "t1_c0dhbpr", "vote": 1}, {"content": "Until you wan't to test a behavior without the singleton getting in the way", "id": "c0dhcgd", "parent": "t1_c0dhbpr", "vote": 1}, {"content": "Out of interest, what software differentiates between multiple keyboard/mice?", "id": "c0dh3c5", "parent": "t1_c0dh01k", "vote": 1}, {"content": "SDL handles both keyboard and mouse, the singletons are just wrappers.", "id": "c0diwuc", "parent": "t1_c0digx3", "vote": 1}, {"content": "pre-procesor define:\n\n    #define USE_SSE2\n\npost-processor define:\n\n    bool Settings::_usesse2 = true;\n\nUsage:\n\n    #define USE_SSE2\n   \n    #ifdef USE_SSE2\n        // stuff\n    #else\n        // other stuff\n    #endif\n\n    if (Settings::_usesse2)\n    {\n       // stuff\n    }\n    else\n    {\n       // other stuff\n    }\n\nThe advantage is that you can change the second value on the fly, after compilation.", "id": "c0dhjdo", "parent": "t1_c0dhfn8", "vote": 1}, {"content": ">  For your physics example, I'd probably make the base PhysicsObject class have a static reference to the PhysicsSimulator instance that they all use. \r\n\r\nIMHO, of problems with singletons listed in the article, this will only partially solve first ('hard to reason') and third ('concurrency').\r\nYou'll still have a coupled code, you'll still need to analyze complex variable usage (espec. hard, if you make your static field 'protected'), you'll still need to manage up concurrent access to object from different instances of owning class. And you'll still have problems with reentrance, that will make testing harder.\r\n\r\nI understand there're situation when this is apropriate, but personally I'll prefer to tackle with additional argument in constructor.", "id": "c0dh98j", "parent": "t1_c0dh3xt", "vote": 0}, {"content": "No, you don't need Pimpl and it doesn't help if you want/need inline-able code.", "id": "c0dhnq1", "parent": "t1_c0dhkll", "vote": 1}, {"content": ">Where I work, we usually use preprocessor tricks >to conditionally compile in platform-specific code. >It's rare to see an abstract interface like I have in >the chapter used for this.\n\nThere doesn't need to be any nasty tricks, it should just be part of the build configuration and include tricks. It's very simple.\n\n>While, at one level, I agree that you don't need to >use subclassing for this (since you'll only ever use >one subclass in any given executable), the cost for >doing so is quite small: a single V-table lookup for >any given method call.\n\n\nYou get lots of cache misses on the PS3 using virtual member functions. I agree with you on very high level modules that do a lot it can negate the overhead but I still would not use dynamic dispatch for what is essentially a build-time problem.\n\n\n>The benefits are larger than would seem at first. >The code I see that uses conditional compilation to >implement platform-specific behavior always fails >to restrict that abstract to a single implementation >file. Instead, there will be #if PLATFORM == FOO >bleeding all over the codebase. Testing and >reasoning about the code gets harder because you >aren't always sure what any given platform's code >will look like. People only testing on a single >platform frequently break the build for other >platforms. It's a headache. For code that isn't very >performance critical, I'd rather take the hit of an >abstract class and get the maintainability in return.\n\n\nThen clearly you are doing something seriously wrong because we don't have these issues of bleeding over our codebase and/or breaking builds all the time.\n\nNote: Obviously templates are another tool, check out [boost::filesystem](http://www.boost.org/doc/libs/1_40_0/libs/filesystem/doc/index.htm) for an example which doesn't (and shouldn't)  need dynamic dispatch.", "id": "c0dhnwm", "parent": "t1_c0dhnj7", "vote": 1}, {"content": "The nice thing is, the \"instance()\" method is easily replaceable with a factory method.\n", "id": "c0dig7l", "parent": "t1_c0dhuwe", "vote": 0}, {"content": "The problem I've seen in practice with lazy loading in the hands of less experienced developers is that it's tempting to do it very piecemeal. When you're fetching data off an optical disk with a ludicrous seek time, you want to make every seek count. It's usually better to suck in a big chunk of related data all at once on the basis of temporal coherence. That implies some kind of (tedious and time consuming) batch cooking process.", "id": "c0dhm56", "parent": "t1_c0dgpfe", "vote": 2}, {"content": ">It's really the heap restrictions that kill it for games. If you've got a garbage collector, it's much less of a problem.\n\nEdit : Nevermind it gets answered in the article.", "id": "c0dgucc", "parent": "t1_c0dgpfe", "vote": 1}, {"content": "Keep going.  I'm looking forward to the other chapters.", "id": "c0dh6kp", "parent": "t1_c0dgmgq", "vote": 2}, {"content": "Well, sounds good. Even if my reply was actually just a stupid comment on 'every other' possibly meaning 'every second one.' :)", "id": "c0dgnif", "parent": "t1_c0dgmgq", "vote": 1}, {"content": "> What happens when you have two keyboards plugged in? (After all, game consoles have multiple controllers.)\n\nThen you pick one, and only one to use. Just because the possibility of multiplicity exists doesn't mean your program has to support it.", "id": "c0dgpk4", "parent": "t1_c0dgpd7", "vote": 3}, {"content": "Can't you just disable the logger?", "id": "c0dhcx2", "parent": "t1_c0dhcr1", "vote": 2}, {"content": "Hey, you're right. I'm not using that phrase correctly there. I'll make a note to fix it. Thanks.", "id": "c0dgrce", "parent": "t1_c0dgr9i", "vote": 3}, {"content": "There is the regular expression which is sort of how it sounds, that it is bringing forth a question. Then there is a philosophical meaning which is kind of like saying your conclusion contradicts your premise. Correct me if I'm wrong.", "id": "c0dh1ew", "parent": "t1_c0dgr9i", "vote": 1}, {"content": "Great start to your ebook.  Thanks for your hard work on this.  Do you have a rss feed or blog that we can monitor to know when new material is available?", "id": "c0dh7bu", "parent": "t1_c0dh1ye", "vote": 3}, {"content": "> Everything you say is true only for languages with value semantics\n\nI assume it's clear I'm speaking specifically about C++.\n\n> You can easily have a pointer (smart or raw) that defaults to null and is initialized manually.\n\nI'm not even sure why you're bringing this up, since it has literally nothing to do with the example I gave. Are you just trying to argue for the sake of argument? That's not very constructive.\n\n", "id": "c0dhnj4", "parent": "t1_c0dhmak", "vote": 1}, {"content": "That's exactly what I'm talking about, and what the FAQ describes (without naming it) *is* the singleton pattern.\n\nWell, 9/10ths of it, singleton also ensures the uniqueness of the object, so you make the constructor and destructor private and make the wrapper function a static member of the class, and you have the full pattern.\n\n", "id": "c0dhvb8", "parent": "t1_c0dhv2p", "vote": 2}, {"content": "Dammit, I linked to the FAQ by accident, I wanted to link to the FQA:\nhttp://yosefk.com/c++fqa/ctors.html#fqa-10.13\n\nYosefk's answers give a better overview of the problem, and are more helpful, IMHO. The C++ bashing is just a plus :)", "id": "c0dhw8j", "parent": "t1_c0dhv2p", "vote": 2}, {"content": "True. But unlike the nuanced explanation in the text, jefftherhino2 just has a blanket prohibition against globals.", "id": "c0dgxki", "parent": "t1_c0dgw54", "vote": 0}, {"content": "> Ever use a member variable in a class? From the perspective of a method in the same class, that's a global.\n\nUsing the limited perspective of a method when determining global scope appears to create a very weak definition of \"global\". Using that analogy, from the perspective of anything called within the method, the method's local variables are global.", "id": "c0dgz8w", "parent": "t1_c0dgy1w", "vote": 8}, {"content": "Stale time stamp, checked on each access.", "id": "c0ditpy", "parent": "t1_c0digk5", "vote": 1}, {"content": "WTF is \"wan't\"?", "id": "c0dhex4", "parent": "t1_c0dhcgd", "vote": 3}, {"content": "Games: a console has a bunch of controller ports, and more than one of them may have a keyboard plugged in.", "id": "c0dh3zb", "parent": "t1_c0dh3c5", "vote": 3}, {"content": "> The advantage is that you can change the second value on the fly, after compilation.\n\n...and the compiler will compile and type-check every possible settings path, not just the ones that happen to be the current setting. There's nothing like changing a #define that hasn't been touched in years and watching half of the game fail to compile. :(", "id": "c0dhnlm", "parent": "t1_c0dhjdo", "vote": 3}, {"content": "> problems with singletons listed in the article, this will only partially solve first ('hard to reason') and third ('concurrency').\n\nThat's true. It does solve another important one that's a high priority for me: it ensures that nothing outside of PhysicsObject can get to the PhysicsWorld instance. Keeping systems decoupled is a major concern for me.\n\n> you'll still need to analyze complex variable usage (espec. hard, if you make your static field 'protected')\n\nThat's true, but in our physics example, there's only so much we do about this. The physics objects will need to interact, and that interaction is complex. We can only simplify and abstract it so much.", "id": "c0dhnbm", "parent": "t1_c0dh98j", "vote": 1}, {"content": "So you just use a lot of #ifdefs?\n\nC'mon, you can't criticize a methodology without sharing your own. I'm genuinely curious.\n", "id": "c0dhnwh", "parent": "t1_c0dhnq1", "vote": 2}, {"content": "I agree with you. Perhaps a file system with platform-specific subclasses isn't the best example to use for the chapter. I'll have to think about this more and see if I can come up with something better.", "id": "c0dhom5", "parent": "t1_c0dhnwm", "vote": 1}, {"content": "There's a difference between supporting something and specifically being unable to support something. Not using a Singleton doesn't mean you have to implement support for multiple keyboards, but using it *does* mean you *cannot* support multiple keyboards without a non-trivial refactoring.", "id": "c0dgqo6", "parent": "t1_c0dgpk4", "vote": 14}, {"content": "That's a horrible reasoning to use singletons. ", "id": "c0dhgxm", "parent": "t1_c0dgpk4", "vote": 3}, {"content": "Conveniently, the next chapter I'm working on should address just this. :)", "id": "c0dhnpp", "parent": "t1_c0dhcx2", "vote": 3}, {"content": "> Do you have a rss feed or blog that we can monitor to know when new material is available?\n\nI do have a blog: journal.stuffwithstuff.com, but it's pretty much on hiatus while I work on the book. (I can only write so much!)\n\nI plan to post chapters to reddit as they're completed, and I rarely post other links to reddit. So, the easiest way to get an RSS feed is probably from my [reddit user page](http://www.reddit.com/user/munificent/submitted/).", "id": "c0dhn8n", "parent": "t1_c0dh7bu", "vote": 2}, {"content": "Quoth your post:\n\n> There's one significant difference between a singleton and a global variable: singletons give you some measure of control over when the object is constructed, whereas global variables are constructed in an unspecified order before main().\n\nMy pointer example has everything to do with that. A common way to deal with the example you gave without singletons is to use a pointer. If you're going to be manually initializing the singleton in any case, rather than relying on lazy initialization, the two cases are completely isomorphic, modulo syntax. Non-lazy singletons are nothing but alternative syntax for a global pointer.", "id": "c0dhnmf", "parent": "t1_c0dhnj4", "vote": 1}, {"content": "In this case, a blanket prohibition is appropriate.  Globals always suck.\n", "id": "c0dh1tg", "parent": "t1_c0dgxki", "vote": -6}, {"content": "Everything is \"global\" with respect to some \"globe\". If your classes get big enough, member variables start causing the same problems that program global variables do.\n\nThings called within a method do *not* view the method's local variables as global, however. Only variables passed in through the callee's arguments are visible.", "id": "c0dh01l", "parent": "t1_c0dgz8w", "vote": 15}, {"content": "You have missed my point entirely. \r\n\r\n* Local variables are declared locally and used locally. That means you know exactly what has access to them at any given moment and it is always the current thread.\r\n* Global variable are declared somewhere else. You have no idea what other threads could be mucking with them.\r\n\r\nOf course the data your local variable points to can, for lack of a better term, leak. This is especially true of objects that escape from the local context by being assigned to another thread or a real global variable.\r\n\r\n**EDIT**\r\n\r\nI take it back. Simply change your statement to \"Using that analogy, from the perspective of anything called within the method, the method's local *data* are global *unless they are marked const or are otherwise immutable.*\" and we are in complete agreement.", "id": "c0dhcxo", "parent": "t1_c0dgz8w", "vote": 2}, {"content": "I'm not criticizing a methodology, I'm criticizing using the wrong tool for the problem or what looks like just a bad example to use that wouldn't (shouldn't) happen in real-world projects.\n\nIf you read my reply to munificent you will see I've made some hints there and no you shouldn't need to scatter and bleed your entire code base with preprocessor conditionals.\n\nJust think carefully, this is a build-time problem. It's quite simple, use multiple build configurations and preprocessor includes with relative paths for headers and/or inline files (.inl) which gives you a kind of build-time polymorphism. That should be enough hints there for you.\n\nAlso as I mentioned before templates are another tool, they can give a kind of compile-time polymorphism.\n", "id": "c0dhpk8", "parent": "t1_c0dhnwh", "vote": 1}, {"content": "I thought so, don't take it the wrong way. That's all I meant that it's probably a bad example to show.", "id": "c0dhpu7", "parent": "t1_c0dhom5", "vote": 1}, {"content": "No, they aren't, if you want to access the object before main() is called. I'm speaking very specifically about the problem of unspecified initialization order for global variables and you seem to be missing that point.\n", "id": "c0dhnow", "parent": "t1_c0dhnmf", "vote": 1}, {"content": "Blanket statements are always wrong.", "id": "c0dhfjn", "parent": "t1_c0dh1tg", "vote": 9}, {"content": "How about the global Environment.NewLine? Are you saying that even something as trivial as determining if the OS uses Cr, Lf, or CrLf shouldn't be done with a global?", "id": "c0dhcom", "parent": "t1_c0dh1tg", "vote": -2}, {"content": "You, sir, wins -1 internets.", "id": "c0dhal2", "parent": "t1_c0dh1tg", "vote": -6}, {"content": "> If your classes get big enough, member variables start causing the same problems that program global variables do.\n\nIf that actually becomes a problem, then your classes are way too big.  If it becomes difficult to reason about the state of member variables, then either the class is doing too much or it's just poorly written.", "id": "c0dh1qn", "parent": "t1_c0dh01l", "vote": 6}, {"content": "I'm not disagreeing with you about it being the wrong tool, just saying that if you're going to point out a flaw in something, it's polite to suggest a better way of doing it - preferably with the condescension dialed down *just* a little bit.\n\nMy preferred method for dealing with cross-platform implementations, where you don't need any run-time polymorphism, is to reverse the inheritance relationship and have the interface class inherit from the implementation class, which is selected via the build configuration. It allows full inlining, eliminates the need for lots of #ifdefs, and concentrates the implementation details in a single header file.", "id": "c0dhvxs", "parent": "t1_c0dhpk8", "vote": 1}, {"content": "Brilliant.", "id": "c0djvf0", "parent": "t1_c0dhfjn", "vote": 1}, {"content": "\"Global constants\" and \"global variables\" are two different terms for a reason.", "id": "c0dhhfa", "parent": "t1_c0dhcom", "vote": 18}, {"content": "> Are you saying that even something as trivial as determining if the OS uses Cr, Lf, or CrLf shouldn't be done with a global?\n\nIn principle, yes. In practice ... it depends.\n\nAt first glance, making Environment.NewLine a global constant looks harmless. However, its existence is an invitation for other code to couple too tightly to it.\n\nMost uses of Environment.NewLine should really be parameterized on the type of line-ending needed. That way I can produce text with line-endings suitable for some *other* machine, instead of just my own. The only time Environment.NewLine should be accessed globally is at the top level configuration of your program, where dependencies are wired together.\n\nOf course, most existing languages make you pay quite a lot for this level of decoupling, which is why theory differs from practice. Still, languages like [Newspeak](http://newspeaklanguage.org/) are investigating the idea of languages that have no global references at all, not even to classes or functions. When the costs of decoupling are decreased, the benefits begin to look more attractive.\n", "id": "c0dhk1w", "parent": "t1_c0dhcom", "vote": 4}, {"content": "I completely agree. One of the failure modes of a too-big class is effectively just being a namespace around a completely procedural program. In that mode, the analogy between \"global\" program variables and \"global\" class variables is obvious.", "id": "c0dh4nn", "parent": "t1_c0dh1qn", "vote": 11}, {"content": "True, which is why I recommend thinking of them as globals when it comes to analysis.", "id": "c0dhcyx", "parent": "t1_c0dh1qn", "vote": 1}, {"content": ">My preferred method for dealing with cross->platform implementations, where you don't >need any run-time polymorphism, is to reverse >the inheritance relationship and have the interface >class inherit from the implementation class, which >is selected via the build configuration. It allows full >inlining, eliminates the need for lots of #ifdefs, >and concentrates the implementation details in a >single header file.\n\nYep that's exactly the kind of thing I was hinting at.\n\nOn an unrelated note, quoting in reddit seriously sucks.", "id": "c0dhw4e", "parent": "t1_c0dhvxs", "vote": 1}, {"content": "> One of the failure modes of a too-big class is effectively just being a namespace around a completely procedural program.\n\nIndeed. What's interesting about this case is that while the code inside the too-big class suffers from the problems associated with global variables, code *outside* the class is largely free of them (with respect to that class) so long as it can instantiate multiple copies of the jumbo class.\n\nIn other words, an object full of globals is worse than a system of smaller objects, but it's still better than having actual globals sitting around.", "id": "c0dhjbu", "parent": "t1_c0dh4nn", "vote": 2}], "link": "https://www.reddit.com/r/programming/comments/9n1j7/game_programming_patterns_singleton_every_other/", "question": {"context": "", "id": "9n1j7", "title": "Game Programming Patterns: Singleton. \"Every other chapter shows you how to use a design pattern. This shows you how not to use one.\""}, "resource": "Reddit"}]}